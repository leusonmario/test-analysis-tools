/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 18 10:40:34 GMT 2019
 */

package org.activiti.engine.impl.persistence.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Map;
import org.activiti.engine.impl.DeploymentQueryImpl;
import org.activiti.engine.impl.Page;
import org.activiti.engine.impl.RepositoryServiceImpl;
import org.activiti.engine.impl.persistence.entity.DeploymentEntity;
import org.activiti.engine.impl.persistence.entity.DeploymentEntityManager;
import org.activiti.engine.impl.persistence.entity.HistoricTaskInstanceEntity;
import org.activiti.engine.impl.repository.DeploymentBuilderImpl;
import org.apache.openjpa.datacache.ConcurrentDataCache;
import org.apache.openjpa.util.CacheMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DeploymentEntityManager_ESTest extends DeploymentEntityManager_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      DeploymentBuilderImpl deploymentBuilderImpl0 = new DeploymentBuilderImpl((RepositoryServiceImpl) null);
      assertTrue(deploymentBuilderImpl0.isBpmn20XsdValidationEnabled());
      assertTrue(deploymentBuilderImpl0.isProcessValidationEnabled());
      assertFalse(deploymentBuilderImpl0.isDuplicateFilterEnabled());
      assertNotNull(deploymentBuilderImpl0);
      
      DeploymentEntity deploymentEntity0 = deploymentBuilderImpl0.getDeployment();
      assertTrue(deploymentBuilderImpl0.isBpmn20XsdValidationEnabled());
      assertTrue(deploymentBuilderImpl0.isProcessValidationEnabled());
      assertFalse(deploymentBuilderImpl0.isDuplicateFilterEnabled());
      assertNull(deploymentEntity0.getId());
      assertNull(deploymentEntity0.getCategory());
      assertEquals("", deploymentEntity0.getTenantId());
      assertNull(deploymentEntity0.getName());
      assertFalse(deploymentEntity0.isNew());
      assertNotNull(deploymentEntity0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.insertDeployment(deploymentEntity0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.findLatestDeploymentByName("k");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.deleteDeployment("", true);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      ConcurrentDataCache concurrentDataCache0 = new ConcurrentDataCache();
      assertEquals(1000, concurrentDataCache0.getCacheSize());
      assertFalse(concurrentDataCache0.isFailFast());
      assertEquals((-1), concurrentDataCache0.getSoftReferenceSize());
      assertNull(concurrentDataCache0.getEvictionSchedule());
      assertFalse(concurrentDataCache0.isClosed());
      assertNull(concurrentDataCache0.getName());
      assertNotNull(concurrentDataCache0);
      
      CacheMap cacheMap0 = concurrentDataCache0.getCacheMap();
      assertEquals(1000, concurrentDataCache0.getCacheSize());
      assertFalse(concurrentDataCache0.isFailFast());
      assertEquals((-1), concurrentDataCache0.getSoftReferenceSize());
      assertNull(concurrentDataCache0.getEvictionSchedule());
      assertFalse(concurrentDataCache0.isClosed());
      assertNull(concurrentDataCache0.getName());
      assertNotNull(cacheMap0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.findDeploymentsByNativeQuery(cacheMap0, 0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      deploymentEntityManager0.close();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.findDeploymentById("7rh4@9+y");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      deploymentEntityManager0.flush();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.getDeploymentResourceNames((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      HistoricTaskInstanceEntity historicTaskInstanceEntity0 = new HistoricTaskInstanceEntity();
      assertNull(historicTaskInstanceEntity0.getDurationInMillis());
      assertEquals(0, historicTaskInstanceEntity0.getPriority());
      assertNull(historicTaskInstanceEntity0.getFormKey());
      assertNull(historicTaskInstanceEntity0.getDescription());
      assertNull(historicTaskInstanceEntity0.getParentTaskId());
      assertNull(historicTaskInstanceEntity0.getExecutionId());
      assertNull(historicTaskInstanceEntity0.getId());
      assertNull(historicTaskInstanceEntity0.getTaskDefinitionKey());
      assertNull(historicTaskInstanceEntity0.getDeleteReason());
      assertNull(historicTaskInstanceEntity0.getName());
      assertNull(historicTaskInstanceEntity0.getProcessDefinitionId());
      assertNull(historicTaskInstanceEntity0.getCategory());
      assertNull(historicTaskInstanceEntity0.getAssignee());
      assertNull(historicTaskInstanceEntity0.getOwner());
      assertEquals("", historicTaskInstanceEntity0.getTenantId());
      assertNull(historicTaskInstanceEntity0.getProcessInstanceId());
      assertNotNull(historicTaskInstanceEntity0);
      
      Map<String, Object> map0 = historicTaskInstanceEntity0.getProcessVariables();
      assertNull(historicTaskInstanceEntity0.getDurationInMillis());
      assertEquals(0, historicTaskInstanceEntity0.getPriority());
      assertNull(historicTaskInstanceEntity0.getFormKey());
      assertNull(historicTaskInstanceEntity0.getDescription());
      assertNull(historicTaskInstanceEntity0.getParentTaskId());
      assertNull(historicTaskInstanceEntity0.getExecutionId());
      assertNull(historicTaskInstanceEntity0.getId());
      assertNull(historicTaskInstanceEntity0.getTaskDefinitionKey());
      assertNull(historicTaskInstanceEntity0.getDeleteReason());
      assertNull(historicTaskInstanceEntity0.getName());
      assertNull(historicTaskInstanceEntity0.getProcessDefinitionId());
      assertNull(historicTaskInstanceEntity0.getCategory());
      assertNull(historicTaskInstanceEntity0.getAssignee());
      assertNull(historicTaskInstanceEntity0.getOwner());
      assertEquals("", historicTaskInstanceEntity0.getTenantId());
      assertNull(historicTaskInstanceEntity0.getProcessInstanceId());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertNotNull(map0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.findDeploymentCountByNativeQuery(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      DeploymentQueryImpl deploymentQueryImpl0 = new DeploymentQueryImpl();
      assertNull(deploymentQueryImpl0.getDatabaseType());
      assertNull(deploymentQueryImpl0.getCategory());
      assertNull(deploymentQueryImpl0.getName());
      assertEquals(Integer.MAX_VALUE, deploymentQueryImpl0.getLastRow());
      assertEquals(Integer.MAX_VALUE, deploymentQueryImpl0.getMaxResults());
      assertNull(deploymentQueryImpl0.getTenantId());
      assertFalse(deploymentQueryImpl0.isWithoutTenantId());
      assertEquals(1, deploymentQueryImpl0.getFirstRow());
      assertEquals("RES.ID_ asc", deploymentQueryImpl0.getOrderBy());
      assertNull(deploymentQueryImpl0.getNameLike());
      assertNull(deploymentQueryImpl0.getCategoryNotEquals());
      assertNull(deploymentQueryImpl0.getTenantIdLike());
      assertEquals(0, deploymentQueryImpl0.getFirstResult());
      assertNull(deploymentQueryImpl0.getDeploymentId());
      assertNotNull(deploymentQueryImpl0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.findDeploymentCountByQueryCriteria(deploymentQueryImpl0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      DeploymentEntityManager deploymentEntityManager0 = new DeploymentEntityManager();
      assertNotNull(deploymentEntityManager0);
      
      Page page0 = new Page(139, 139);
      assertEquals(139, page0.getMaxResults());
      assertEquals(139, page0.getFirstResult());
      assertNotNull(page0);
      
      // Undeclared exception!
      try { 
        deploymentEntityManager0.findDeploymentsByQueryCriteria((DeploymentQueryImpl) null, page0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.activiti.engine.impl.persistence.AbstractManager", e);
      }
  }
}

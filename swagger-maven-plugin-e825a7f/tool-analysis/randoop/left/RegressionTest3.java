import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass54 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] { wildcardClass39, wildcardClass41, wildcardClass44, wildcardClass48 };
        java.util.ArrayList<java.lang.reflect.Type> typeList50 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList50, typeArray49);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        abstractReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader55.getTypesToSkip();
        java.lang.Class<?> wildcardClass61 = typeSet60.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader75 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger73, logAdapter74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        java.lang.Class<?> wildcardClass88 = obj85.getClass();
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] { wildcardClass79, wildcardClass81, wildcardClass84, wildcardClass88 };
        java.util.ArrayList<java.lang.reflect.Type> typeList90 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList90, typeArray89);
        abstractReader75.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        java.lang.Class<?> wildcardClass95 = typeList90.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet99 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(typeSet98);
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader2.addTypeToSkippedTypes(type45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Class<?> wildcardClass67 = obj63.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass62, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet78);
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass83 = abstractReader2.getClass();
        java.lang.reflect.Type type84 = null;
        abstractReader2.addTypeToSkippedTypes(type84);
        java.lang.Class<?> wildcardClass86 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet89 = null;
        abstractReader2.setTypesToSkip(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = null;
        abstractReader30.addTypeToSkippedTypes(type35);
        java.lang.Class<?> wildcardClass37 = abstractReader30.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader30.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass41 = typeSet40.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = null;
        abstractReader2.addTypeToSkippedTypes(type25);
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass43, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader12.getTypesToSkip();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet66);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass41 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass42 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader76 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger74, logAdapter75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        abstractReader76.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        java.lang.reflect.Type type81 = null;
        abstractReader76.addTypeToSkippedTypes(type81);
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader85 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger83, logAdapter84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        abstractReader85.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader85.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = typeSet90.getClass();
        abstractReader76.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass94 = abstractReader45.getClass();
        java.lang.Class<?> wildcardClass95 = abstractReader45.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader45.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet11 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet13 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet13);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = null;
        abstractReader30.addTypeToSkippedTypes(type35);
        java.lang.Class<?> wildcardClass37 = abstractReader30.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader30.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader44 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger42, logAdapter43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        abstractReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.reflect.Type type49 = null;
        abstractReader44.addTypeToSkippedTypes(type49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = null;
        abstractReader53.addTypeToSkippedTypes(type58);
        java.lang.Class<?> wildcardClass60 = abstractReader53.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader53.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader53.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        abstractReader44.setTypesToSkip(typeSet62);
        abstractReader2.setTypesToSkip(typeSet62);
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        abstractReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader70.getTypesToSkip();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader78 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger76, logAdapter77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        abstractReader78.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader78.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = typeSet83.getClass();
        abstractReader70.setTypesToSkip(typeSet83);
        abstractReader2.setTypesToSkip(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass52, wildcardClass55, wildcardClass59 };
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        abstractReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader66.getTypesToSkip();
        java.lang.Class<?> wildcardClass72 = typeSet71.getClass();
        abstractReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader76 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger74, logAdapter75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass80, wildcardClass82, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader76.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass95 = typeList91.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass97 = typeList91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.Class<?> wildcardClass88 = obj84.getClass();
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass79, wildcardClass83, wildcardClass88 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet90 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet90, typeArray89);
        abstractReader55.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet90);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet90);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass99 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(typeSet98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Class<?> wildcardClass65 = obj61.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass60, wildcardClass65, wildcardClass69 };
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass79 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass82 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass83 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.lang.Class<?> wildcardClass39 = abstractReader21.getClass();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader42.getTypesToSkip();
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass84 = typeList81.getClass();
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet35 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        abstractReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = null;
        abstractReader2.setTypesToSkip(typeSet44);
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = typeSet39.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = null;
        abstractReader2.setTypesToSkip(typeSet43);
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNull(typeSet46);
        org.junit.Assert.assertNull(typeSet47);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        abstractReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader61.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader77 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger75, logAdapter76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        abstractReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.lang.reflect.Type type82 = null;
        abstractReader77.addTypeToSkippedTypes(type82);
        java.lang.Class<?> wildcardClass84 = abstractReader77.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader77.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = abstractReader77.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader77.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = typeSet87.getClass();
        java.lang.Class<?> wildcardClass89 = typeSet87.getClass();
        abstractReader2.setTypesToSkip(typeSet87);
        java.lang.reflect.Type type91 = null;
        abstractReader2.addTypeToSkippedTypes(type91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeSet32);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.lang.reflect.Type type40 = null;
        abstractReader35.addTypeToSkippedTypes(type40);
        java.lang.Class<?> wildcardClass42 = abstractReader35.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader35.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = abstractReader35.getClass();
        java.lang.Class<?> wildcardClass45 = abstractReader35.getClass();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Class<?> wildcardClass66 = typeList63.getClass();
        java.lang.Class<?> wildcardClass67 = typeList63.getClass();
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Class<?> wildcardClass69 = abstractReader35.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader2.addTypeToSkippedTypes(type45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Class<?> wildcardClass67 = obj63.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass62, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet78);
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet81 = null;
        abstractReader2.setTypesToSkip(typeSet81);
        java.lang.Class<?> wildcardClass83 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Class<?> wildcardClass69 = obj65.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass60, wildcardClass64, wildcardClass69 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        abstractReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.lang.Class<?> wildcardClass75 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass76 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type80 = null;
        abstractReader2.addTypeToSkippedTypes(type80);
        java.lang.Class<?> wildcardClass82 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet24 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet24);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = null;
        abstractReader5.addTypeToSkippedTypes(type10);
        java.lang.Class<?> wildcardClass12 = abstractReader5.getClass();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass39, wildcardClass43, wildcardClass48 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet50 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet50, typeArray49);
        abstractReader15.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.Class<?> wildcardClass53 = typeSet50.getClass();
        abstractReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.lang.Class<?> wildcardClass55 = typeSet50.getClass();
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet50);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = null;
        abstractReader2.setTypesToSkip(typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNull(typeSet61);
        org.junit.Assert.assertNull(typeSet62);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        abstractReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader71.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader71.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.util.List<java.lang.reflect.Type> typeList79 = null;
        try {
            abstractReader2.setTypesToSkip(typeList79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass52 = typeSet51.getClass();
        java.lang.Class<?> wildcardClass53 = typeSet51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.Class<?> wildcardClass22 = obj18.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass17, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass52 = typeList49.getClass();
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        abstractReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        abstractReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader61.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader61.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader61.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader61.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = typeSet93.getClass();
        abstractReader2.setTypesToSkip(typeSet93);
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass98 = typeSet97.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass64 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = null;
        abstractReader22.addTypeToSkippedTypes(type27);
        java.lang.Class<?> wildcardClass29 = abstractReader22.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader22.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Class<?> wildcardClass66 = obj62.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass57, wildcardClass61, wildcardClass66 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        abstractReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass76 = abstractReader22.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader22.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.lang.Class<?> wildcardClass79 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader12.getTypesToSkip();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass29, wildcardClass32, wildcardClass36 };
        java.util.ArrayList<java.lang.reflect.Type> typeList38 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList38, typeArray37);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList38);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass66 };
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.Class<?> wildcardClass72 = abstractReader43.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader23.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader23.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader23.getTypesToSkip();
        java.lang.Class<?> wildcardClass77 = typeSet76.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet79);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type13 = null;
        abstractReader2.addTypeToSkippedTypes(type13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader28 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger26, logAdapter27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Class<?> wildcardClass32 = obj29.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Class<?> wildcardClass40 = obj36.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass35, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = null;
        abstractReader18.setTypesToSkip(typeSet50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader18.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader18.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.lang.reflect.Type type61 = null;
        abstractReader56.addTypeToSkippedTypes(type61);
        java.lang.Class<?> wildcardClass63 = abstractReader56.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader56.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader56.getTypesToSkip();
        abstractReader18.setTypesToSkip(typeSet65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Class<?> wildcardClass81 = obj77.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Class<?> wildcardClass85 = obj82.getClass();
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass76, wildcardClass81, wildcardClass85 };
        java.util.ArrayList<java.lang.reflect.Type> typeList87 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList87, typeArray86);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader69.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = typeSet90.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = null;
        abstractReader18.setTypesToSkip(typeSet93);
        java.lang.Class<?> wildcardClass95 = abstractReader18.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(typeSet52);
        org.junit.Assert.assertNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        java.lang.Class<?> wildcardClass51 = abstractReader22.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type54 = null;
        abstractReader2.addTypeToSkippedTypes(type54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet58);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass43, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader36.getTypesToSkip();
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        java.lang.Class<?> wildcardClass78 = typeList75.getClass();
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        java.lang.Class<?> wildcardClass81 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.reflect.Type[] typeArray24 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass16, wildcardClass19, wildcardClass23 };
        java.util.ArrayList<java.lang.reflect.Type> typeList25 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList25, typeArray24);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList25);
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader10.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader10.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        abstractReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader41.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = typeSet46.getClass();
        abstractReader33.setTypesToSkip(typeSet46);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Class<?> wildcardClass66 = obj62.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] { wildcardClass58, wildcardClass61, wildcardClass66, wildcardClass70 };
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        abstractReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.lang.reflect.Type type79 = null;
        abstractReader2.addTypeToSkippedTypes(type79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = null;
        abstractReader2.setTypesToSkip(typeSet82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNull(typeSet84);
        org.junit.Assert.assertNull(typeSet85);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Class<?> wildcardClass31 = typeList28.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.lang.reflect.Type type33 = null;
        abstractReader10.addTypeToSkippedTypes(type33);
        java.util.Set<java.lang.reflect.Type> typeSet35 = abstractReader10.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass37 = typeSet36.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(typeSet40);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.Class<?> wildcardClass49 = obj45.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass41, wildcardClass44, wildcardClass49, wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        abstractReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader34.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type62 = null;
        abstractReader2.addTypeToSkippedTypes(type62);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet61);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.reflect.Type type29 = null;
        abstractReader24.addTypeToSkippedTypes(type29);
        java.lang.Class<?> wildcardClass31 = abstractReader24.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader24.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] { wildcardClass39, wildcardClass41, wildcardClass44, wildcardClass48 };
        java.util.ArrayList<java.lang.reflect.Type> typeList50 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList50, typeArray49);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList50);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Class<?> wildcardClass68 = obj64.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass55, wildcardClass59, wildcardClass63, wildcardClass68 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet70 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet70, typeArray69);
        abstractReader35.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet70);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader24.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader24.getTypesToSkip();
        java.lang.Class<?> wildcardClass79 = abstractReader24.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader24.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass83 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = abstractReader20.getTypesToSkip();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader28 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger26, logAdapter27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        abstractReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader28.getTypesToSkip();
        java.lang.Class<?> wildcardClass34 = typeSet33.getClass();
        abstractReader20.setTypesToSkip(typeSet33);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Class<?> wildcardClass53 = obj49.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass48, wildcardClass53, wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.Type> typeList59 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList59, typeArray58);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader20.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader20.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass70 = typeSet69.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = null;
        abstractReader36.addTypeToSkippedTypes(type41);
        java.lang.Class<?> wildcardClass43 = abstractReader36.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader36.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader36.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Class<?> wildcardClass61 = obj57.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass56, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader49.getTypesToSkip();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = abstractReader49.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type80 = null;
        abstractReader2.addTypeToSkippedTypes(type80);
        java.lang.Class<?> wildcardClass82 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass83 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Class<?> wildcardClass65 = obj61.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass60, wildcardClass65, wildcardClass69 };
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        java.lang.Class<?> wildcardClass79 = typeSet77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass42 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNull(typeSet43);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader44 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger42, logAdapter43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        abstractReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = abstractReader44.getClass();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Class<?> wildcardClass64 = obj60.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass59, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader52.getTypesToSkip();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader76 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger74, logAdapter75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass80, wildcardClass82, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader76.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass94 = typeList91.getClass();
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader44.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass97 = typeList91.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.util.Set<java.lang.reflect.Type> typeSet99 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.lang.Class<?> wildcardClass34 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = null;
        abstractReader47.addTypeToSkippedTypes(type52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader56.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader50.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        abstractReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass64 = typeSet63.getClass();
        abstractReader50.setTypesToSkip(typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader68 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger66, logAdapter67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.Class<?> wildcardClass83 = obj79.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass78, wildcardClass83, wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader68.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader50.getTypesToSkip();
        java.lang.Class<?> wildcardClass95 = abstractReader50.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet99 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(typeSet98);
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Class<?> wildcardClass51 = obj47.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Class<?> wildcardClass55 = obj52.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass46, wildcardClass51, wildcardClass55 };
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        java.lang.Class<?> wildcardClass64 = typeSet62.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        java.lang.reflect.Type type68 = null;
        abstractReader2.addTypeToSkippedTypes(type68);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass42 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass43 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNull(typeSet39);
        org.junit.Assert.assertNull(typeSet40);
        org.junit.Assert.assertNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = null;
        abstractReader57.addTypeToSkippedTypes(type62);
        java.lang.Class<?> wildcardClass64 = abstractReader57.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader57.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass75, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.Class<?> wildcardClass87 = typeList84.getClass();
        java.lang.Class<?> wildcardClass88 = typeList84.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.reflect.Type type90 = null;
        abstractReader2.addTypeToSkippedTypes(type90);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        abstractReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader56.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.reflect.Type type86 = null;
        abstractReader2.addTypeToSkippedTypes(type86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type89 = null;
        abstractReader2.addTypeToSkippedTypes(type89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.Class<?> wildcardClass22 = obj18.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass17, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass52 = typeList49.getClass();
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader56.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader36.getTypesToSkip();
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        abstractReader67.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader67.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader67.getTypesToSkip();
        java.lang.Class<?> wildcardClass74 = typeSet73.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = abstractReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader13.setTypesToSkip(typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader62 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger60, logAdapter61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        abstractReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        java.lang.Class<?> wildcardClass75 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader12.getTypesToSkip();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader75 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger73, logAdapter74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        java.lang.Class<?> wildcardClass88 = obj85.getClass();
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] { wildcardClass79, wildcardClass81, wildcardClass84, wildcardClass88 };
        java.util.ArrayList<java.lang.reflect.Type> typeList90 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList90, typeArray89);
        abstractReader75.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader65.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader65.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader65.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass96);
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader76 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger74, logAdapter75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass80, wildcardClass82, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader76.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass95 = typeList91.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.reflect.Type type97 = null;
        abstractReader2.addTypeToSkippedTypes(type97);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass24 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader27 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger25, logAdapter26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass43 };
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        java.lang.Class<?> wildcardClass48 = typeList45.getClass();
        abstractReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.lang.reflect.Type type50 = null;
        abstractReader27.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader27.getTypesToSkip();
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.lang.Class<?> wildcardClass76 = typeList73.getClass();
        abstractReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        abstractReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader27.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader27.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader27.getTypesToSkip();
        java.lang.Class<?> wildcardClass82 = abstractReader27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Class<?> wildcardClass69 = obj65.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass60, wildcardClass64, wildcardClass69 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet71 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet71, typeArray70);
        abstractReader36.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet71);
        java.util.Set<java.lang.reflect.Type> typeSet75 = null;
        abstractReader2.setTypesToSkip(typeSet75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        try {
            java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNull(typeSet77);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        abstractReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.lang.reflect.Type type43 = null;
        abstractReader38.addTypeToSkippedTypes(type43);
        java.lang.Class<?> wildcardClass45 = abstractReader38.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader38.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader38.getClass();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        abstractReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader50.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader50.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader50.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader50.getTypesToSkip();
        abstractReader38.setTypesToSkip(typeSet82);
        java.lang.Class<?> wildcardClass84 = typeSet82.getClass();
        abstractReader2.setTypesToSkip(typeSet82);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Class<?> wildcardClass51 = obj47.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Class<?> wildcardClass55 = obj52.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass46, wildcardClass51, wildcardClass55 };
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        java.lang.Class<?> wildcardClass64 = typeSet62.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass68 = typeSet67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.lang.Class<?> wildcardClass74 = abstractReader45.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader25.getTypesToSkip();
        java.lang.Class<?> wildcardClass77 = abstractReader25.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = null;
        abstractReader15.addTypeToSkippedTypes(type20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Class<?> wildcardClass36 = obj32.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass28, wildcardClass31, wildcardClass36, wildcardClass40 };
        java.util.ArrayList<java.lang.reflect.Type> typeList42 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList42, typeArray41);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader24.getTypesToSkip();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass66 };
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.Class<?> wildcardClass73 = abstractReader15.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = null;
        abstractReader9.addTypeToSkippedTypes(type14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Class<?> wildcardClass30 = obj26.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass25, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader18.getTypesToSkip();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass69 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass71 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader71.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = null;
        abstractReader2.setTypesToSkip(typeSet93);
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Class<?> wildcardClass79 = obj75.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] { wildcardClass71, wildcardClass74, wildcardClass79, wildcardClass83 };
        java.util.ArrayList<java.lang.reflect.Type> typeList85 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList85, typeArray84);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader67.getTypesToSkip();
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Class<?> wildcardClass91 = obj89.getClass();
        java.lang.Class<?> wildcardClass92 = obj89.getClass();
        abstractReader67.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass92);
        java.lang.Class<?> wildcardClass94 = abstractReader67.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass94);
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass98 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass99 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = null;
        abstractReader34.addTypeToSkippedTypes(type39);
        java.lang.Class<?> wildcardClass41 = abstractReader34.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader34.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = abstractReader34.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = null;
        abstractReader2.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNull(typeSet92);
        org.junit.Assert.assertNull(typeSet93);
        org.junit.Assert.assertNull(typeSet94);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Class<?> wildcardClass79 = obj75.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] { wildcardClass71, wildcardClass74, wildcardClass79, wildcardClass83 };
        java.util.ArrayList<java.lang.reflect.Type> typeList85 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList85, typeArray84);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        abstractReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = typeSet91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Class<?> wildcardClass75 = obj71.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass70, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass85 = typeList81.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.Class<?> wildcardClass80 = obj76.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass71, wildcardClass75, wildcardClass80 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet82 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet82, typeArray81);
        abstractReader47.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet82);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.reflect.Type type89 = null;
        abstractReader2.addTypeToSkippedTypes(type89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.Class<?> wildcardClass55 = obj51.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] { wildcardClass47, wildcardClass50, wildcardClass55, wildcardClass59 };
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass71, wildcardClass73, wildcardClass76, wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet91);
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass28 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet67);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet8 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = null;
        abstractReader11.addTypeToSkippedTypes(type16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.Class<?> wildcardClass32 = obj28.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass24, wildcardClass27, wildcardClass32, wildcardClass36 };
        java.util.ArrayList<java.lang.reflect.Type> typeList38 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList38, typeArray37);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader20.getTypesToSkip();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet71);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader37.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = typeSet43.getClass();
        java.lang.Class<?> wildcardClass45 = typeSet43.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.lang.Class<?> wildcardClass70 = typeList67.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = abstractReader49.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader49.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader37.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = typeSet43.getClass();
        java.lang.Class<?> wildcardClass45 = typeSet43.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Class<?> wildcardClass52 = obj48.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = abstractReader56.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader56.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet62);
        java.lang.Class<?> wildcardClass64 = typeSet62.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet90 = null;
        abstractReader2.setTypesToSkip(typeSet90);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = abstractReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader13.setTypesToSkip(typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader62 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger60, logAdapter61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        abstractReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass43, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader36.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type60 = null;
        abstractReader2.addTypeToSkippedTypes(type60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Class<?> wildcardClass81 = obj78.getClass();
        java.lang.Class<?> wildcardClass82 = obj78.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass77, wildcardClass82, wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader64.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = typeSet93.getClass();
        java.lang.Class<?> wildcardClass95 = typeSet93.getClass();
        abstractReader2.setTypesToSkip(typeSet93);
        java.util.Set<java.lang.reflect.Type> typeSet97 = null;
        abstractReader2.setTypesToSkip(typeSet97);
        java.lang.Class<?> wildcardClass99 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader14 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger12, logAdapter13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        abstractReader14.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = null;
        abstractReader14.addTypeToSkippedTypes(type19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader23.getTypesToSkip();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.lang.Class<?> wildcardClass33 = typeList30.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = abstractReader12.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader39.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet64);
        java.util.List<java.lang.reflect.Type> typeList66 = null;
        try {
            abstractReader2.setTypesToSkip(typeList66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet64);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        abstractReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader48.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader56.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        abstractReader48.setTypesToSkip(typeSet61);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Class<?> wildcardClass81 = obj77.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Class<?> wildcardClass85 = obj82.getClass();
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass76, wildcardClass81, wildcardClass85 };
        java.util.ArrayList<java.lang.reflect.Type> typeList87 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList87, typeArray86);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        java.lang.Class<?> wildcardClass92 = typeList87.getClass();
        java.lang.Class<?> wildcardClass93 = typeList87.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        java.lang.Class<?> wildcardClass95 = typeList87.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.reflect.Type type27 = null;
        abstractReader22.addTypeToSkippedTypes(type27);
        java.lang.Class<?> wildcardClass29 = abstractReader22.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader22.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Class<?> wildcardClass66 = obj62.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass57, wildcardClass61, wildcardClass66 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet68 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet68, typeArray67);
        abstractReader33.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet68);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass76 = abstractReader22.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader22.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.lang.reflect.Type type79 = null;
        abstractReader2.addTypeToSkippedTypes(type79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader84 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger82, logAdapter83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader84.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.lang.reflect.Type type89 = null;
        abstractReader84.addTypeToSkippedTypes(type89);
        java.lang.Class<?> wildcardClass91 = abstractReader84.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader84.getTypesToSkip();
        java.lang.Class<?> wildcardClass93 = abstractReader84.getClass();
        java.lang.Class<?> wildcardClass94 = abstractReader84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass94);
        java.lang.reflect.Type type96 = null;
        abstractReader2.addTypeToSkippedTypes(type96);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        java.lang.Class<?> wildcardClass51 = abstractReader22.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass60 = typeSet59.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.Class<?> wildcardClass62 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader12.getTypesToSkip();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader75 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger73, logAdapter74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        java.lang.Class<?> wildcardClass88 = obj85.getClass();
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] { wildcardClass79, wildcardClass81, wildcardClass84, wildcardClass88 };
        java.util.ArrayList<java.lang.reflect.Type> typeList90 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList90, typeArray89);
        abstractReader75.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader65.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader65.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader65.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass96);
        java.util.List<java.lang.reflect.Type> typeList98 = null;
        try {
            abstractReader2.setTypesToSkip(typeList98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        abstractReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        abstractReader48.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.lang.Class<?> wildcardClass77 = abstractReader48.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass80 = typeSet79.getClass();
        java.lang.Class<?> wildcardClass81 = typeSet79.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.lang.Class<?> wildcardClass67 = typeList64.getClass();
        abstractReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = abstractReader46.getClass();
        java.lang.Class<?> wildcardClass70 = abstractReader46.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass73 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass77 = typeSet76.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.reflect.Type type50 = null;
        abstractReader12.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader12.getTypesToSkip();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader64.getTypesToSkip();
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        abstractReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader72.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        abstractReader64.setTypesToSkip(typeSet77);
        abstractReader2.setTypesToSkip(typeSet77);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass12 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Class<?> wildcardClass32 = obj29.getClass();
        java.lang.Class<?> wildcardClass33 = obj29.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass28, wildcardClass33, wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader15.getTypesToSkip();
        java.lang.Class<?> wildcardClass45 = abstractReader15.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass22 };
        java.util.ArrayList<java.lang.reflect.Type> typeList24 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList24, typeArray23);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList24);
        java.lang.Class<?> wildcardClass27 = typeList24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        abstractReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        abstractReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.lang.Class<?> wildcardClass60 = abstractReader31.getClass();
        java.lang.Class<?> wildcardClass61 = abstractReader31.getClass();
        java.lang.Class<?> wildcardClass62 = abstractReader31.getClass();
        java.lang.Class<?> wildcardClass63 = abstractReader31.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Class<?> wildcardClass40 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass53, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader43.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        abstractReader71.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.lang.reflect.Type type76 = null;
        abstractReader71.addTypeToSkippedTypes(type76);
        java.lang.Class<?> wildcardClass78 = abstractReader71.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader71.getTypesToSkip();
        abstractReader43.setTypesToSkip(typeSet79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader43.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader43.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet82);
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader73 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger71, logAdapter72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass77, wildcardClass79, wildcardClass82, wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        abstractReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader63.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet92);
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = typeSet95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.reflect.Type type38 = null;
        abstractReader33.addTypeToSkippedTypes(type38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader42.getTypesToSkip();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        abstractReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        java.util.List<java.lang.reflect.Type> typeList35 = null;
        try {
            abstractReader2.setTypesToSkip(typeList35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = null;
        abstractReader2.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass30 = typeSet29.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader61.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        abstractReader2.setTypesToSkip(typeSet62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass71, wildcardClass73, wildcardClass76, wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.lang.Class<?> wildcardClass85 = typeList82.getClass();
        java.lang.Class<?> wildcardClass86 = typeList82.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        abstractReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = null;
        abstractReader26.addTypeToSkippedTypes(type31);
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        abstractReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = null;
        abstractReader66.addTypeToSkippedTypes(type71);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader75 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger73, logAdapter74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        abstractReader75.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader75.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = typeSet80.getClass();
        abstractReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        abstractReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader26.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = typeSet85.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass33 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass34 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass35 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Class<?> wildcardClass50 = obj46.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass42, wildcardClass45, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader62 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger60, logAdapter61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass66, wildcardClass68, wildcardClass71, wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        abstractReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.lang.Class<?> wildcardClass80 = typeList77.getClass();
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader38.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader38.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader38.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = typeSet86.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass12 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.lang.Class<?> wildcardClass33 = typeList30.getClass();
        java.lang.Class<?> wildcardClass34 = typeList30.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass37 = typeSet36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.lang.Class<?> wildcardClass26 = abstractReader21.getClass();
        java.lang.Class<?> wildcardClass27 = abstractReader21.getClass();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] { wildcardClass34, wildcardClass36, wildcardClass39, wildcardClass43 };
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader50.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = typeSet55.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass64, wildcardClass66, wildcardClass69, wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        java.lang.Class<?> wildcardClass79 = typeList75.getClass();
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Class<?> wildcardClass43 = obj39.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass38, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass58, wildcardClass60, wildcardClass63, wildcardClass67 };
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.Class<?> wildcardClass87 = obj83.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass78, wildcardClass82, wildcardClass87 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet89 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet89, typeArray88);
        abstractReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        abstractReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader31.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet93);
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = typeSet39.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass43 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        java.lang.reflect.Type type10 = null;
        abstractReader5.addTypeToSkippedTypes(type10);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader14 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger12, logAdapter13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Class<?> wildcardClass26 = obj22.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.reflect.Type[] typeArray31 = new java.lang.reflect.Type[] { wildcardClass18, wildcardClass21, wildcardClass26, wildcardClass30 };
        java.util.ArrayList<java.lang.reflect.Type> typeList32 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList32, typeArray31);
        abstractReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList32);
        java.util.Set<java.lang.reflect.Type> typeSet35 = abstractReader14.getTypesToSkip();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        abstractReader14.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader5.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader5.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = typeSet64.getClass();
        abstractReader2.setTypesToSkip(typeSet64);
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        abstractReader70.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader70.getTypesToSkip();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader78 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger76, logAdapter77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        abstractReader78.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader78.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = typeSet83.getClass();
        abstractReader70.setTypesToSkip(typeSet83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader70.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader70.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = abstractReader2.getClass();
        java.util.List<java.lang.reflect.Type> typeList64 = null;
        try {
            abstractReader2.setTypesToSkip(typeList64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        java.lang.Class<?> wildcardClass51 = abstractReader22.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        java.lang.reflect.Type type54 = null;
        abstractReader2.addTypeToSkippedTypes(type54);
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader2.addTypeToSkippedTypes(type45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Class<?> wildcardClass67 = obj63.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass62, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet78);
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader86 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger84, logAdapter85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader86.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = typeSet87.getClass();
        java.lang.Class<?> wildcardClass89 = typeSet87.getClass();
        abstractReader2.setTypesToSkip(typeSet87);
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        abstractReader2.setTypesToSkip(typeSet32);
        java.lang.Class<?> wildcardClass34 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass35 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Class<?> wildcardClass50 = obj46.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass42, wildcardClass45, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader62 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger60, logAdapter61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass66, wildcardClass68, wildcardClass71, wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        abstractReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.lang.Class<?> wildcardClass80 = typeList77.getClass();
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.lang.Class<?> wildcardClass82 = typeList77.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.reflect.Type type50 = null;
        abstractReader12.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = null;
        abstractReader57.addTypeToSkippedTypes(type62);
        java.lang.Class<?> wildcardClass64 = abstractReader57.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader57.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader57.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass69 = typeSet68.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass85 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass51 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass52 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type55 = null;
        abstractReader2.addTypeToSkippedTypes(type55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet57);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader40.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass33 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass34 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass35 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Class<?> wildcardClass72 = obj68.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass63, wildcardClass67, wildcardClass72 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet74 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet74, typeArray73);
        abstractReader39.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet74);
        java.lang.reflect.Type type77 = null;
        abstractReader39.addTypeToSkippedTypes(type77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        abstractReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader39.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader39.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader39.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader39.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = null;
        abstractReader2.setTypesToSkip(typeSet87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNull(typeSet89);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = abstractReader20.getTypesToSkip();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader28 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger26, logAdapter27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        abstractReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader28.getTypesToSkip();
        java.lang.Class<?> wildcardClass34 = typeSet33.getClass();
        abstractReader20.setTypesToSkip(typeSet33);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Class<?> wildcardClass53 = obj49.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass48, wildcardClass53, wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.Type> typeList59 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList59, typeArray58);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader20.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader20.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet65);
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader73 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger71, logAdapter72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.Class<?> wildcardClass85 = obj81.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass77, wildcardClass80, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader70.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader70.getTypesToSkip();
        java.lang.Class<?> wildcardClass97 = typeSet96.getClass();
        java.lang.Class<?> wildcardClass98 = typeSet96.getClass();
        abstractReader2.setTypesToSkip(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass50 = typeSet49.getClass();
        java.lang.Class<?> wildcardClass51 = typeSet49.getClass();
        java.lang.Class<?> wildcardClass52 = typeSet49.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        java.util.Set<java.lang.reflect.Type> typeSet14 = null;
        abstractReader2.setTypesToSkip(typeSet14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNull(typeSet16);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Class<?> wildcardClass20 = obj17.getClass();
        java.lang.Class<?> wildcardClass21 = obj17.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass13, wildcardClass16, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader9.getTypesToSkip();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass42, wildcardClass44, wildcardClass47, wildcardClass51 };
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Class<?> wildcardClass71 = obj67.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass63, wildcardClass66, wildcardClass71, wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        abstractReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader59.getTypesToSkip();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        abstractReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.lang.reflect.Type type63 = null;
        abstractReader25.addTypeToSkippedTypes(type63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Class<?> wildcardClass85 = obj82.getClass();
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] { wildcardClass76, wildcardClass78, wildcardClass81, wildcardClass85 };
        java.util.ArrayList<java.lang.reflect.Type> typeList87 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList87, typeArray86);
        abstractReader72.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList87);
        java.lang.Class<?> wildcardClass90 = typeList87.getClass();
        abstractReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = abstractReader69.getClass();
        java.lang.Class<?> wildcardClass93 = abstractReader69.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        java.lang.Class<?> wildcardClass95 = abstractReader25.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader25.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader25.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet97);
        java.lang.Class<?> wildcardClass99 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        abstractReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader39.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader47.getTypesToSkip();
        java.lang.Class<?> wildcardClass53 = typeSet52.getClass();
        abstractReader39.setTypesToSkip(typeSet52);
        abstractReader2.setTypesToSkip(typeSet52);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet8 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = null;
        abstractReader11.addTypeToSkippedTypes(type16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.Class<?> wildcardClass32 = obj28.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass24, wildcardClass27, wildcardClass32, wildcardClass36 };
        java.util.ArrayList<java.lang.reflect.Type> typeList38 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList38, typeArray37);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList38);
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader20.getTypesToSkip();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type71 = null;
        abstractReader2.addTypeToSkippedTypes(type71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader76 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger74, logAdapter75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass80, wildcardClass82, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader76.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass95 = typeList91.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Class<?> wildcardClass55 = obj52.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass48, wildcardClass51, wildcardClass55 };
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Class<?> wildcardClass75 = obj71.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass66, wildcardClass70, wildcardClass75 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet77 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet77, typeArray76);
        abstractReader42.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet77);
        java.lang.reflect.Type type80 = null;
        abstractReader42.addTypeToSkippedTypes(type80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader42.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader42.getTypesToSkip();
        abstractReader32.setTypesToSkip(typeSet83);
        abstractReader2.setTypesToSkip(typeSet83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet35 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        abstractReader38.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader38.getTypesToSkip();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        abstractReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader46.getTypesToSkip();
        java.lang.Class<?> wildcardClass52 = typeSet51.getClass();
        abstractReader38.setTypesToSkip(typeSet51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Class<?> wildcardClass71 = obj67.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass63, wildcardClass66, wildcardClass71, wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        abstractReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        abstractReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader38.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader38.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader38.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader38.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = typeSet85.getClass();
        abstractReader2.setTypesToSkip(typeSet85);
        java.lang.reflect.Type type88 = null;
        abstractReader2.addTypeToSkippedTypes(type88);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader49.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Class<?> wildcardClass72 = obj68.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass64, wildcardClass67, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass89 = typeList86.getClass();
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = typeSet95.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass52, wildcardClass55, wildcardClass59 };
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        java.lang.Class<?> wildcardClass64 = typeList61.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = abstractReader43.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader73 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger71, logAdapter72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.Class<?> wildcardClass85 = obj81.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass77, wildcardClass80, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader70.getTypesToSkip();
        abstractReader33.setTypesToSkip(typeSet95);
        abstractReader2.setTypesToSkip(typeSet95);
        java.lang.Class<?> wildcardClass98 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet99 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass30 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        abstractReader2.setTypesToSkip(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet51 = null;
        abstractReader2.setTypesToSkip(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet50);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader12.getTypesToSkip();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader64.getTypesToSkip();
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        abstractReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader72.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        abstractReader64.setTypesToSkip(typeSet77);
        abstractReader2.setTypesToSkip(typeSet77);
        java.lang.Class<?> wildcardClass81 = typeSet77.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] { wildcardClass39, wildcardClass41, wildcardClass44, wildcardClass48 };
        java.util.ArrayList<java.lang.reflect.Type> typeList50 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList50, typeArray49);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        abstractReader55.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader55.getTypesToSkip();
        java.lang.Class<?> wildcardClass61 = typeSet60.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass69, wildcardClass71, wildcardClass74, wildcardClass78 };
        java.util.ArrayList<java.lang.reflect.Type> typeList80 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList80, typeArray79);
        abstractReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        java.lang.Class<?> wildcardClass84 = typeList80.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Class<?> wildcardClass75 = obj71.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass70, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass87 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = typeSet88.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader47.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader47.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = typeSet53.getClass();
        java.lang.Class<?> wildcardClass55 = typeSet53.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet59);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.lang.Class<?> wildcardClass33 = typeList30.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.Class<?> wildcardClass35 = abstractReader12.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        abstractReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader51.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader59.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = typeSet64.getClass();
        abstractReader51.setTypesToSkip(typeSet64);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.Class<?> wildcardClass84 = obj80.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        java.lang.Class<?> wildcardClass88 = obj85.getClass();
        java.lang.reflect.Type[] typeArray89 = new java.lang.reflect.Type[] { wildcardClass76, wildcardClass79, wildcardClass84, wildcardClass88 };
        java.util.ArrayList<java.lang.reflect.Type> typeList90 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList90, typeArray89);
        abstractReader72.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList90);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        abstractReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader51.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader59.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = typeSet64.getClass();
        abstractReader51.setTypesToSkip(typeSet64);
        abstractReader2.setTypesToSkip(typeSet64);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Class<?> wildcardClass32 = obj29.getClass();
        java.lang.Class<?> wildcardClass33 = obj29.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass28, wildcardClass33, wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        abstractReader66.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        java.lang.reflect.Type type71 = null;
        abstractReader66.addTypeToSkippedTypes(type71);
        java.lang.Class<?> wildcardClass73 = abstractReader66.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader66.getTypesToSkip();
        abstractReader11.setTypesToSkip(typeSet74);
        abstractReader2.setTypesToSkip(typeSet74);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet78 = null;
        abstractReader2.setTypesToSkip(typeSet78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNull(typeSet80);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader2.addTypeToSkippedTypes(type45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet50);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader54.getTypesToSkip();
        java.lang.Class<?> wildcardClass60 = typeSet59.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader74 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger72, logAdapter73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass78, wildcardClass80, wildcardClass83, wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        abstractReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet98 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(typeSet98);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader40.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Class<?> wildcardClass65 = obj61.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass60, wildcardClass65, wildcardClass69 };
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader53.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = typeSet74.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = null;
        abstractReader2.setTypesToSkip(typeSet77);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader81 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger79, logAdapter80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader81.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader81.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = typeSet39.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass43 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.lang.reflect.Type type52 = null;
        abstractReader47.addTypeToSkippedTypes(type52);
        java.lang.Class<?> wildcardClass54 = abstractReader47.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader47.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = abstractReader47.getClass();
        java.lang.Class<?> wildcardClass57 = abstractReader47.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader47.getTypesToSkip();
        java.lang.Class<?> wildcardClass59 = typeSet58.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Class<?> wildcardClass23 = obj19.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass15, wildcardClass18, wildcardClass23, wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader11.getTypesToSkip();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass70, wildcardClass73, wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass85 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Class<?> wildcardClass20 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader24.getTypesToSkip();
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader84 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger82, logAdapter83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader84.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.lang.reflect.Type type89 = null;
        abstractReader84.addTypeToSkippedTypes(type89);
        java.lang.Class<?> wildcardClass91 = abstractReader84.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader84.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader84.getTypesToSkip();
        abstractReader24.setTypesToSkip(typeSet93);
        abstractReader2.setTypesToSkip(typeSet93);
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type97 = null;
        abstractReader2.addTypeToSkippedTypes(type97);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.Class<?> wildcardClass22 = obj18.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass17, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass52 = typeList49.getClass();
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Class<?> wildcardClass76 = obj72.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass71, wildcardClass76, wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        abstractReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = typeSet87.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet63);
        java.lang.Class<?> wildcardClass65 = typeSet63.getClass();
        java.lang.Class<?> wildcardClass66 = typeSet63.getClass();
        java.lang.Class<?> wildcardClass67 = typeSet63.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass30 = abstractReader2.getClass();
        java.lang.reflect.Type type31 = null;
        abstractReader2.addTypeToSkippedTypes(type31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeSet33);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.reflect.Type type42 = null;
        abstractReader2.addTypeToSkippedTypes(type42);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.reflect.Type type50 = null;
        abstractReader12.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet53);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = null;
        abstractReader60.addTypeToSkippedTypes(type65);
        java.lang.Class<?> wildcardClass67 = abstractReader60.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader60.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader60.getTypesToSkip();
        java.lang.Class<?> wildcardClass70 = typeSet69.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader74 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger72, logAdapter73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass78, wildcardClass80, wildcardClass83, wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        abstractReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader74.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet92);
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        java.lang.reflect.Type type39 = null;
        abstractReader34.addTypeToSkippedTypes(type39);
        java.lang.Class<?> wildcardClass41 = abstractReader34.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader34.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = abstractReader34.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = typeSet93.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        abstractReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        abstractReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass67, wildcardClass70, wildcardClass74 };
        java.util.ArrayList<java.lang.reflect.Type> typeList76 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList76, typeArray75);
        abstractReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        abstractReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        java.lang.Class<?> wildcardClass80 = abstractReader51.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass83 = typeSet82.getClass();
        java.lang.Class<?> wildcardClass84 = typeSet82.getClass();
        java.lang.Class<?> wildcardClass85 = typeSet82.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = null;
        abstractReader2.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.Class<?> wildcardClass51 = typeList48.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass85 = typeList81.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = abstractReader32.getClass();
        java.lang.Class<?> wildcardClass90 = abstractReader32.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass90);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet8 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet9 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass10 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader40.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass52 = typeSet51.getClass();
        java.lang.Class<?> wildcardClass53 = typeSet51.getClass();
        java.lang.Class<?> wildcardClass54 = typeSet51.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass43, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader36.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass84 = typeList81.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.lang.Class<?> wildcardClass86 = abstractReader63.getClass();
        java.lang.Class<?> wildcardClass87 = abstractReader63.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader63.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = typeSet88.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass93 = typeSet92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet64);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass89 = typeList86.getClass();
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass91 = typeList86.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass93 = typeList86.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Class<?> wildcardClass63 = typeList60.getClass();
        abstractReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass65 = abstractReader42.getClass();
        java.lang.Class<?> wildcardClass66 = abstractReader42.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader42.getTypesToSkip();
        java.lang.Class<?> wildcardClass68 = typeSet67.getClass();
        abstractReader2.setTypesToSkip(typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass71 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader73 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger71, logAdapter72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass77, wildcardClass79, wildcardClass82, wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        abstractReader73.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader63.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet92);
        java.lang.Class<?> wildcardClass94 = typeSet92.getClass();
        java.lang.Class<?> wildcardClass95 = typeSet92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader54.getTypesToSkip();
        java.lang.Class<?> wildcardClass60 = typeSet59.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader74 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger72, logAdapter73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass78, wildcardClass80, wildcardClass83, wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        abstractReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass98 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass89 = typeList86.getClass();
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.lang.reflect.Type type95 = null;
        abstractReader2.addTypeToSkippedTypes(type95);
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass66 };
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.Class<?> wildcardClass71 = typeList68.getClass();
        java.lang.Class<?> wildcardClass72 = typeList68.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        java.lang.Class<?> wildcardClass74 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader77 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger75, logAdapter76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader77.getTypesToSkip();
        java.lang.Class<?> wildcardClass79 = typeSet78.getClass();
        java.lang.Class<?> wildcardClass80 = typeSet78.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet13 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass14 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass24, wildcardClass27, wildcardClass31 };
        java.util.ArrayList<java.lang.reflect.Type> typeList33 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList33, typeArray32);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList33);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Class<?> wildcardClass51 = obj47.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass42, wildcardClass46, wildcardClass51 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet53 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet53, typeArray52);
        abstractReader18.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Class<?> wildcardClass70 = obj66.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.reflect.Type[] typeArray75 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass65, wildcardClass70, wildcardClass74 };
        java.util.ArrayList<java.lang.reflect.Type> typeList76 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList76, typeArray75);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList76);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Class<?> wildcardClass65 = obj61.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass60, wildcardClass65, wildcardClass69 };
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass79 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass81 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet82);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = null;
        abstractReader2.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.Class<?> wildcardClass51 = typeList48.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass55 = typeSet54.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        abstractReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        abstractReader31.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Class<?> wildcardClass53 = obj49.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass48, wildcardClass53, wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.Type> typeList59 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList59, typeArray58);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.Class<?> wildcardClass77 = obj73.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Class<?> wildcardClass81 = obj78.getClass();
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] { wildcardClass69, wildcardClass72, wildcardClass77, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.Type> typeList83 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList83, typeArray82);
        abstractReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader65.getTypesToSkip();
        abstractReader31.setTypesToSkip(typeSet86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader31.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader31.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = typeSet89.getClass();
        java.lang.Class<?> wildcardClass91 = typeSet89.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass54, wildcardClass56, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.lang.Class<?> wildcardClass68 = typeList65.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = abstractReader47.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader47.getTypesToSkip();
        java.lang.Class<?> wildcardClass72 = typeSet71.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = null;
        abstractReader2.setTypesToSkip(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Class<?> wildcardClass23 = obj19.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass15, wildcardClass18, wildcardClass23, wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader11.getTypesToSkip();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet56);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(typeSet7);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass89 = typeList86.getClass();
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.Class<?> wildcardClass49 = obj45.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass41, wildcardClass44, wildcardClass49, wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        abstractReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader34.getTypesToSkip();
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader62 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger60, logAdapter61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        abstractReader62.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        java.lang.reflect.Type type67 = null;
        abstractReader62.addTypeToSkippedTypes(type67);
        java.lang.Class<?> wildcardClass69 = abstractReader62.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader62.getTypesToSkip();
        abstractReader34.setTypesToSkip(typeSet70);
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader34.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = null;
        abstractReader2.setTypesToSkip(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass12 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = null;
        abstractReader15.addTypeToSkippedTypes(type20);
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Class<?> wildcardClass36 = obj32.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.reflect.Type[] typeArray41 = new java.lang.reflect.Type[] { wildcardClass28, wildcardClass31, wildcardClass36, wildcardClass40 };
        java.util.ArrayList<java.lang.reflect.Type> typeList42 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList42, typeArray41);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList42);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader24.getTypesToSkip();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.reflect.Type[] typeArray67 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass59, wildcardClass62, wildcardClass66 };
        java.util.ArrayList<java.lang.reflect.Type> typeList68 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList68, typeArray67);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList68);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader75 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger73, logAdapter74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        abstractReader75.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader75.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = typeSet80.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader15.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = null;
        abstractReader2.setTypesToSkip(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Class<?> wildcardClass55 = obj52.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.reflect.Type[] typeArray65 = new java.lang.reflect.Type[] { wildcardClass55, wildcardClass57, wildcardClass60, wildcardClass64 };
        java.util.ArrayList<java.lang.reflect.Type> typeList66 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList66, typeArray65);
        abstractReader51.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList66);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.Class<?> wildcardClass84 = obj80.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass71, wildcardClass75, wildcardClass79, wildcardClass84 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet86 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet86, typeArray85);
        abstractReader51.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet86);
        java.lang.reflect.Type type89 = null;
        abstractReader51.addTypeToSkippedTypes(type89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader51.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader51.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader51.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader51.getTypesToSkip();
        java.lang.Class<?> wildcardClass95 = abstractReader51.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader51.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass96);
        java.lang.Class<?> wildcardClass98 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet99 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader12.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Class<?> wildcardClass54 = typeList51.getClass();
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader12.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass72 };
        java.util.ArrayList<java.lang.reflect.Type> typeList74 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList74, typeArray73);
        abstractReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        java.lang.Class<?> wildcardClass77 = typeList74.getClass();
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader37.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = typeSet43.getClass();
        java.lang.Class<?> wildcardClass45 = typeSet43.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Class<?> wildcardClass52 = obj48.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.lang.Class<?> wildcardClass61 = abstractReader56.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader56.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet62);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader68 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger66, logAdapter67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        abstractReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass71);
        java.lang.reflect.Type type73 = null;
        abstractReader68.addTypeToSkippedTypes(type73);
        java.lang.Class<?> wildcardClass75 = abstractReader68.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader68.getTypesToSkip();
        java.lang.Class<?> wildcardClass77 = abstractReader68.getClass();
        java.lang.Class<?> wildcardClass78 = abstractReader68.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader68.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader68.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader68.getTypesToSkip();
        java.lang.Class<?> wildcardClass82 = abstractReader68.getClass();
        java.lang.Class<?> wildcardClass83 = abstractReader68.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass51 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass52 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader55.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet56);
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Class<?> wildcardClass69 = obj65.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.reflect.Type[] typeArray74 = new java.lang.reflect.Type[] { wildcardClass61, wildcardClass64, wildcardClass69, wildcardClass73 };
        java.util.ArrayList<java.lang.reflect.Type> typeList75 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList75, typeArray74);
        abstractReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList75);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader57.getTypesToSkip();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader57.getTypesToSkip();
        java.lang.Class<?> wildcardClass85 = abstractReader57.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader57.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet86);
        java.lang.Class<?> wildcardClass88 = typeSet86.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader29 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger27, logAdapter28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = null;
        abstractReader60.addTypeToSkippedTypes(type65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        abstractReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader69.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = typeSet74.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = typeSet80.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass43, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader33.getTypesToSkip();
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        abstractReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.reflect.Type type66 = null;
        abstractReader61.addTypeToSkippedTypes(type66);
        java.lang.Class<?> wildcardClass68 = abstractReader61.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader61.getTypesToSkip();
        abstractReader33.setTypesToSkip(typeSet69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet73);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet72);
        org.junit.Assert.assertNotNull(typeSet73);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass13 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet14 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass15 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Class<?> wildcardClass30 = obj26.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass25, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass47, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.lang.Class<?> wildcardClass59 = typeList56.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader18.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = null;
        abstractReader36.addTypeToSkippedTypes(type41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Class<?> wildcardClass57 = obj53.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass52, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader45.getTypesToSkip();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader74 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger72, logAdapter73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass78, wildcardClass80, wildcardClass83, wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        abstractReader74.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.reflect.Type type50 = null;
        abstractReader12.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet53);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type58 = null;
        abstractReader2.addTypeToSkippedTypes(type58);
        io.swagger.models.Swagger swagger60 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter61 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader62 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger60, logAdapter61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.reflect.Type[] typeArray76 = new java.lang.reflect.Type[] { wildcardClass66, wildcardClass68, wildcardClass71, wildcardClass75 };
        java.util.ArrayList<java.lang.reflect.Type> typeList77 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList77, typeArray76);
        abstractReader62.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList77);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader62.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = typeSet80.getClass();
        java.lang.Class<?> wildcardClass82 = typeSet80.getClass();
        abstractReader2.setTypesToSkip(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass26 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.lang.Class<?> wildcardClass49 = typeList46.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.lang.reflect.Type type51 = null;
        abstractReader2.addTypeToSkippedTypes(type51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = typeSet53.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Class<?> wildcardClass66 = typeList63.getClass();
        java.lang.Class<?> wildcardClass67 = typeList63.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet69);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = typeSet38.getClass();
        abstractReader25.setTypesToSkip(typeSet38);
        abstractReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.reflect.Type type83 = null;
        abstractReader45.addTypeToSkippedTypes(type83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader45.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader45.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = null;
        abstractReader2.addTypeToSkippedTypes(type25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.Class<?> wildcardClass51 = typeList48.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass85 = typeList81.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        java.util.List<java.lang.reflect.Type> typeList88 = null;
        try {
            abstractReader2.setTypesToSkip(typeList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Class<?> wildcardClass40 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass41 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.lang.Class<?> wildcardClass74 = abstractReader45.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader45.getTypesToSkip();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader78 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger76, logAdapter77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        abstractReader78.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        abstractReader78.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader78.getTypesToSkip();
        abstractReader45.setTypesToSkip(typeSet86);
        abstractReader2.setTypesToSkip(typeSet86);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet11 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader15.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader27 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger25, logAdapter26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Class<?> wildcardClass42 = obj38.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass34, wildcardClass37, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        abstractReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = typeSet47.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Class<?> wildcardClass27 = obj23.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass22, wildcardClass27, wildcardClass31 };
        java.util.ArrayList<java.lang.reflect.Type> typeList33 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList33, typeArray32);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList33);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass42, wildcardClass44, wildcardClass47, wildcardClass51 };
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        java.lang.Class<?> wildcardClass56 = typeList53.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.Class<?> wildcardClass58 = abstractReader15.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass58);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass61 = typeSet60.getClass();
        java.lang.Class<?> wildcardClass62 = typeSet60.getClass();
        java.lang.Class<?> wildcardClass63 = typeSet60.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        abstractReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass11);
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass21, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.lang.Class<?> wildcardClass33 = typeList30.getClass();
        abstractReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.lang.Class<?> wildcardClass66 = abstractReader37.getClass();
        java.lang.Class<?> wildcardClass67 = abstractReader37.getClass();
        java.lang.Class<?> wildcardClass68 = abstractReader37.getClass();
        java.lang.Class<?> wildcardClass69 = abstractReader37.getClass();
        abstractReader8.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass69);
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = null;
        abstractReader30.addTypeToSkippedTypes(type35);
        java.lang.Class<?> wildcardClass37 = abstractReader30.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader30.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = abstractReader30.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader30.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader30.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader45.getTypesToSkip();
        java.lang.Class<?> wildcardClass64 = typeSet63.getClass();
        java.lang.Class<?> wildcardClass65 = typeSet63.getClass();
        java.lang.Class<?> wildcardClass66 = typeSet63.getClass();
        abstractReader2.setTypesToSkip(typeSet63);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = null;
        abstractReader32.addTypeToSkippedTypes(type37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        abstractReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader41.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = typeSet46.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet55);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Class<?> wildcardClass51 = obj47.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Class<?> wildcardClass55 = obj52.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass46, wildcardClass51, wildcardClass55 };
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        java.lang.Class<?> wildcardClass64 = typeSet62.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass69 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet70);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = abstractReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader13.setTypesToSkip(typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader13.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader13.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader13.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet59);
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass62 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass63 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Class<?> wildcardClass44 = obj40.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass39, wildcardClass44, wildcardClass48 };
        java.util.ArrayList<java.lang.reflect.Type> typeList50 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList50, typeArray49);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList50);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.lang.Class<?> wildcardClass73 = typeList70.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader77 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger75, logAdapter76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        abstractReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader32.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader32.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader32.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet85);
        java.lang.Class<?> wildcardClass87 = typeSet85.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        abstractReader37.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader37.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = typeSet43.getClass();
        java.lang.Class<?> wildcardClass45 = typeSet43.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader36.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader36.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader36.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass70 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = null;
        abstractReader2.setTypesToSkip(typeSet48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = null;
        abstractReader2.setTypesToSkip(typeSet50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNull(typeSet52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Class<?> wildcardClass64 = obj60.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass59, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.util.List<java.lang.reflect.Type> typeList78 = null;
        try {
            abstractReader2.setTypesToSkip(typeList78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = typeSet38.getClass();
        abstractReader25.setTypesToSkip(typeSet38);
        abstractReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.reflect.Type type83 = null;
        abstractReader45.addTypeToSkippedTypes(type83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader45.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader45.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type95 = null;
        abstractReader2.addTypeToSkippedTypes(type95);
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader29 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger27, logAdapter28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = null;
        abstractReader60.addTypeToSkippedTypes(type65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        abstractReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader69.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = typeSet74.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.lang.Class<?> wildcardClass79 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass82 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.Class<?> wildcardClass22 = obj18.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass17, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass52 = typeList49.getClass();
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass59 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader24.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader32.getTypesToSkip();
        java.lang.Class<?> wildcardClass38 = typeSet37.getClass();
        abstractReader24.setTypesToSkip(typeSet37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        abstractReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader42.getTypesToSkip();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader50.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = typeSet55.getClass();
        abstractReader42.setTypesToSkip(typeSet55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Class<?> wildcardClass75 = obj71.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass70, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader42.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader42.getTypesToSkip();
        abstractReader24.setTypesToSkip(typeSet87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader24.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader24.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = null;
        abstractReader2.setTypesToSkip(typeSet48);
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Class<?> wildcardClass66 = obj62.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] { wildcardClass58, wildcardClass61, wildcardClass66, wildcardClass70 };
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader54.getTypesToSkip();
        io.swagger.models.Swagger swagger76 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter77 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader78 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger76, logAdapter77);
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        java.lang.Object obj88 = new java.lang.Object();
        java.lang.Class<?> wildcardClass89 = obj88.getClass();
        java.lang.Class<?> wildcardClass90 = obj88.getClass();
        java.lang.Class<?> wildcardClass91 = obj88.getClass();
        java.lang.reflect.Type[] typeArray92 = new java.lang.reflect.Type[] { wildcardClass82, wildcardClass84, wildcardClass87, wildcardClass91 };
        java.util.ArrayList<java.lang.reflect.Type> typeList93 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList93, typeArray92);
        abstractReader78.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        java.lang.Class<?> wildcardClass96 = typeList93.getClass();
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList93);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNull(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet24 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass7 = typeSet6.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = null;
        abstractReader36.addTypeToSkippedTypes(type41);
        java.lang.Class<?> wildcardClass43 = abstractReader36.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader36.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader36.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Class<?> wildcardClass61 = obj57.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass56, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader49.getTypesToSkip();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.lang.Class<?> wildcardClass76 = abstractReader49.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass33 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.reflect.Type type41 = null;
        abstractReader36.addTypeToSkippedTypes(type41);
        java.lang.Class<?> wildcardClass43 = abstractReader36.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader36.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader36.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass49 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet51);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass4);
        java.util.Set<java.lang.reflect.Type> typeSet6 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(typeSet6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader35.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader43.getTypesToSkip();
        java.lang.Class<?> wildcardClass49 = typeSet48.getClass();
        abstractReader35.setTypesToSkip(typeSet48);
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader35.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader35.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader35.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = typeSet53.getClass();
        abstractReader2.setTypesToSkip(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet41 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger42 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter43 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader44 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger42, logAdapter43);
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        abstractReader44.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.Class<?> wildcardClass49 = abstractReader44.getClass();
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Class<?> wildcardClass64 = obj60.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass59, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader52.getTypesToSkip();
        io.swagger.models.Swagger swagger74 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter75 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader76 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger74, logAdapter75);
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        java.lang.Class<?> wildcardClass89 = obj86.getClass();
        java.lang.reflect.Type[] typeArray90 = new java.lang.reflect.Type[] { wildcardClass80, wildcardClass82, wildcardClass85, wildcardClass89 };
        java.util.ArrayList<java.lang.reflect.Type> typeList91 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean92 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList91, typeArray90);
        abstractReader76.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass94 = typeList91.getClass();
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        abstractReader44.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass97 = typeList91.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList91);
        java.lang.Class<?> wildcardClass99 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(typeSet41);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeArray90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass41 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass42 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Class<?> wildcardClass57 = obj53.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass52, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader45.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = typeSet66.getClass();
        try {
            abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader2.addTypeToSkippedTypes(type45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Class<?> wildcardClass67 = obj63.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass62, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader49.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet78);
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass85 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger88 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter89 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader90 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger88, logAdapter89);
        java.lang.Object obj91 = new java.lang.Object();
        java.lang.Class<?> wildcardClass92 = obj91.getClass();
        java.lang.Class<?> wildcardClass93 = obj91.getClass();
        abstractReader90.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader90.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader90.getTypesToSkip();
        java.lang.Class<?> wildcardClass97 = typeSet96.getClass();
        abstractReader2.setTypesToSkip(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.reflect.Type type25 = null;
        abstractReader2.addTypeToSkippedTypes(type25);
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Class<?> wildcardClass52 = obj48.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass47, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass70, wildcardClass73, wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        io.swagger.models.Swagger swagger83 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter84 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader85 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger83, logAdapter84);
        java.lang.Object obj86 = new java.lang.Object();
        java.lang.Class<?> wildcardClass87 = obj86.getClass();
        java.lang.Class<?> wildcardClass88 = obj86.getClass();
        abstractReader85.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.lang.reflect.Type type90 = null;
        abstractReader85.addTypeToSkippedTypes(type90);
        java.lang.Class<?> wildcardClass92 = abstractReader85.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader85.getTypesToSkip();
        abstractReader30.setTypesToSkip(typeSet93);
        java.lang.Class<?> wildcardClass95 = abstractReader30.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass70 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass12 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.lang.reflect.Type type20 = null;
        abstractReader15.addTypeToSkippedTypes(type20);
        java.lang.Class<?> wildcardClass22 = abstractReader15.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        abstractReader26.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass29);
        java.lang.reflect.Type type31 = null;
        abstractReader26.addTypeToSkippedTypes(type31);
        java.lang.Class<?> wildcardClass33 = abstractReader26.getClass();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Class<?> wildcardClass48 = obj44.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass43, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader36.getTypesToSkip();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass69, wildcardClass71, wildcardClass74, wildcardClass78 };
        java.util.ArrayList<java.lang.reflect.Type> typeList80 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList80, typeArray79);
        abstractReader65.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList80);
        java.lang.Class<?> wildcardClass86 = typeList80.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        abstractReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass70, wildcardClass73, wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.lang.Class<?> wildcardClass83 = abstractReader54.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader34.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader34.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = typeSet86.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet32 = null;
        abstractReader2.setTypesToSkip(typeSet32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Class<?> wildcardClass54 = typeList51.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader27 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger25, logAdapter26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        abstractReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        abstractReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        io.swagger.models.Swagger swagger35 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter36 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader37 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger35, logAdapter36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass41, wildcardClass43, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader37.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Class<?> wildcardClass70 = obj66.getClass();
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass61, wildcardClass65, wildcardClass70 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet72 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet72, typeArray71);
        abstractReader37.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet72);
        java.lang.reflect.Type type75 = null;
        abstractReader37.addTypeToSkippedTypes(type75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader37.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader37.getTypesToSkip();
        abstractReader27.setTypesToSkip(typeSet78);
        java.lang.Class<?> wildcardClass80 = abstractReader27.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader27.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader27.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader27.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = typeSet83.getClass();
        abstractReader2.setTypesToSkip(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.reflect.Type type62 = null;
        abstractReader57.addTypeToSkippedTypes(type62);
        java.lang.Class<?> wildcardClass64 = abstractReader57.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader57.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass75, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.Class<?> wildcardClass87 = typeList84.getClass();
        java.lang.Class<?> wildcardClass88 = typeList84.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = typeSet91.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass53, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass76, wildcardClass79, wildcardClass83 };
        java.util.ArrayList<java.lang.reflect.Type> typeList85 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList85, typeArray84);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        java.lang.Class<?> wildcardClass89 = typeList85.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass40 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass52, wildcardClass55, wildcardClass59 };
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        java.lang.Class<?> wildcardClass64 = typeList61.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = abstractReader43.getClass();
        java.lang.Class<?> wildcardClass67 = abstractReader43.getClass();
        java.lang.Class<?> wildcardClass68 = abstractReader43.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader43.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet69);
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass72 = typeSet71.getClass();
        java.lang.Class<?> wildcardClass73 = typeSet71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass8 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet9 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass22 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader34.getTypesToSkip();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.lang.Class<?> wildcardClass82 = typeList78.getClass();
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.lang.Class<?> wildcardClass84 = typeList78.getClass();
        java.lang.Class<?> wildcardClass85 = typeList78.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type34 = null;
        abstractReader2.addTypeToSkippedTypes(type34);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.reflect.Type[] typeArray50 = new java.lang.reflect.Type[] { wildcardClass40, wildcardClass42, wildcardClass45, wildcardClass49 };
        java.util.ArrayList<java.lang.reflect.Type> typeList51 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList51, typeArray50);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList51);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader61.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        abstractReader2.setTypesToSkip(typeSet62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass71, wildcardClass73, wildcardClass76, wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.lang.Class<?> wildcardClass85 = typeList82.getClass();
        java.lang.Class<?> wildcardClass86 = typeList82.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.lang.Class<?> wildcardClass77 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass78 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass79 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet80);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass63, wildcardClass65, wildcardClass68, wildcardClass72 };
        java.util.ArrayList<java.lang.reflect.Type> typeList74 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList74, typeArray73);
        abstractReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        java.lang.Class<?> wildcardClass78 = abstractReader49.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet79 = null;
        abstractReader49.setTypesToSkip(typeSet79);
        java.lang.Class<?> wildcardClass81 = abstractReader49.getClass();
        java.lang.Class<?> wildcardClass82 = abstractReader49.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.Class<?> wildcardClass25 = obj21.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.reflect.Type[] typeArray30 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass20, wildcardClass25, wildcardClass29 };
        java.util.ArrayList<java.lang.reflect.Type> typeList31 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList31, typeArray30);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList31);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList31);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList31);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Class<?> wildcardClass52 = obj48.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass47, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader40.getTypesToSkip();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass75, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.Class<?> wildcardClass88 = abstractReader40.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader40.getClass();
        java.lang.Class<?> wildcardClass90 = abstractReader40.getClass();
        io.swagger.models.Swagger swagger91 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter92 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader93 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger91, logAdapter92);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader93.getTypesToSkip();
        abstractReader40.setTypesToSkip(typeSet94);
        java.lang.Class<?> wildcardClass96 = typeSet94.getClass();
        java.lang.Class<?> wildcardClass97 = typeSet94.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass97);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet35 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(typeSet35);
        org.junit.Assert.assertNotNull(typeSet36);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Class<?> wildcardClass32 = obj29.getClass();
        java.lang.Class<?> wildcardClass33 = obj29.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass28, wildcardClass33, wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader21.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Class<?> wildcardClass63 = typeList60.getClass();
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader21.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader21.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type71 = null;
        abstractReader2.addTypeToSkippedTypes(type71);
        java.lang.Class<?> wildcardClass73 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        java.lang.Class<?> wildcardClass51 = abstractReader22.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        abstractReader2.setTypesToSkip(typeSet77);
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet81 = null;
        abstractReader2.setTypesToSkip(typeSet81);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNull(typeSet83);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.util.Set<java.lang.reflect.Type> typeSet25 = abstractReader20.getTypesToSkip();
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader28 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger26, logAdapter27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        abstractReader28.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass31);
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader28.getTypesToSkip();
        java.lang.Class<?> wildcardClass34 = typeSet33.getClass();
        abstractReader20.setTypesToSkip(typeSet33);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Class<?> wildcardClass53 = obj49.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass48, wildcardClass53, wildcardClass57 };
        java.util.ArrayList<java.lang.reflect.Type> typeList59 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList59, typeArray58);
        abstractReader41.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList59);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader20.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader20.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet65);
        java.lang.Class<?> wildcardClass67 = typeSet65.getClass();
        java.lang.Class<?> wildcardClass68 = typeSet65.getClass();
        java.lang.Class<?> wildcardClass69 = typeSet65.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        java.lang.Class<?> wildcardClass51 = abstractReader22.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type54 = null;
        abstractReader2.addTypeToSkippedTypes(type54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader49.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Class<?> wildcardClass72 = obj68.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass64, wildcardClass67, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.reflect.Type type50 = null;
        abstractReader12.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet53);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        abstractReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        abstractReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader69.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader69.getTypesToSkip();
        java.lang.Class<?> wildcardClass76 = typeSet75.getClass();
        java.lang.Class<?> wildcardClass77 = typeSet75.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(typeSet75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet8 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = null;
        abstractReader11.addTypeToSkippedTypes(type16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        abstractReader20.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass26);
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Class<?> wildcardClass42 = obj38.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass34, wildcardClass37, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader30.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass58, wildcardClass60, wildcardClass63, wildcardClass67 };
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        io.swagger.models.Swagger swagger73 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter74 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader75 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger73, logAdapter74);
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        abstractReader75.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        java.lang.reflect.Type type80 = null;
        abstractReader75.addTypeToSkippedTypes(type80);
        java.lang.Class<?> wildcardClass82 = abstractReader75.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader75.getTypesToSkip();
        abstractReader20.setTypesToSkip(typeSet83);
        abstractReader11.setTypesToSkip(typeSet83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = abstractReader11.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.util.List<java.lang.reflect.Type> typeList92 = null;
        try {
            abstractReader2.setTypesToSkip(typeList92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        abstractReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass85 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.Class<?> wildcardClass22 = obj18.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass17, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass52 = typeList49.getClass();
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass58 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.reflect.Type[] typeArray57 = new java.lang.reflect.Type[] { wildcardClass47, wildcardClass49, wildcardClass52, wildcardClass56 };
        java.util.ArrayList<java.lang.reflect.Type> typeList58 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList58, typeArray57);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList58);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader33.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(typeSet68);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        java.lang.Class<?> wildcardClass10 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.lang.reflect.Type type18 = null;
        abstractReader13.addTypeToSkippedTypes(type18);
        java.lang.Class<?> wildcardClass20 = abstractReader13.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass28, wildcardClass30, wildcardClass33, wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Class<?> wildcardClass57 = obj53.getClass();
        java.lang.reflect.Type[] typeArray58 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass48, wildcardClass52, wildcardClass57 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet59 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet59, typeArray58);
        abstractReader24.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet59);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.Class<?> wildcardClass66 = abstractReader13.getClass();
        java.lang.Class<?> wildcardClass67 = abstractReader13.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.lang.Class<?> wildcardClass69 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet71 = null;
        abstractReader2.setTypesToSkip(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet70);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader27 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger25, logAdapter26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        abstractReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader27.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader35.getTypesToSkip();
        java.lang.Class<?> wildcardClass41 = typeSet40.getClass();
        abstractReader27.setTypesToSkip(typeSet40);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader45.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader53.getTypesToSkip();
        java.lang.Class<?> wildcardClass59 = typeSet58.getClass();
        abstractReader45.setTypesToSkip(typeSet58);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass73, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader45.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader45.getTypesToSkip();
        abstractReader27.setTypesToSkip(typeSet90);
        java.lang.Class<?> wildcardClass92 = abstractReader27.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader27.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = typeSet39.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass43 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Class<?> wildcardClass33 = obj30.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Class<?> wildcardClass38 = obj34.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass38 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        abstractReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Class<?> wildcardClass81 = obj77.getClass();
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass72, wildcardClass76, wildcardClass81 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        abstractReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        abstractReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.lang.reflect.Type type88 = null;
        abstractReader2.addTypeToSkippedTypes(type88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        io.swagger.models.Swagger swagger26 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter27 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader28 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger26, logAdapter27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Class<?> wildcardClass32 = obj29.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Class<?> wildcardClass40 = obj36.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass35, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader28.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.reflect.Type type58 = null;
        abstractReader53.addTypeToSkippedTypes(type58);
        java.lang.Class<?> wildcardClass60 = abstractReader53.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader53.getTypesToSkip();
        abstractReader25.setTypesToSkip(typeSet61);
        abstractReader2.setTypesToSkip(typeSet61);
        java.util.Set<java.lang.reflect.Type> typeSet64 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader68 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger66, logAdapter67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        abstractReader68.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass70);
        java.lang.Class<?> wildcardClass72 = abstractReader68.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Class<?> wildcardClass31 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass34 = typeSet33.getClass();
        java.lang.Class<?> wildcardClass35 = typeSet33.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        io.swagger.models.Swagger swagger36 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter37 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader38 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger36, logAdapter37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Class<?> wildcardClass50 = obj46.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.reflect.Type[] typeArray55 = new java.lang.reflect.Type[] { wildcardClass42, wildcardClass45, wildcardClass50, wildcardClass54 };
        java.util.ArrayList<java.lang.reflect.Type> typeList56 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList56, typeArray55);
        abstractReader38.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList56);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader35.getTypesToSkip();
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = null;
        abstractReader63.addTypeToSkippedTypes(type68);
        java.lang.Class<?> wildcardClass70 = abstractReader63.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader63.getTypesToSkip();
        abstractReader35.setTypesToSkip(typeSet71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader35.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet73);
        java.util.Set<java.lang.reflect.Type> typeSet75 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet75);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader24.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.lang.Class<?> wildcardClass81 = typeList78.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass81);
        java.lang.reflect.Type type83 = null;
        abstractReader60.addTypeToSkippedTypes(type83);
        java.lang.Class<?> wildcardClass85 = abstractReader60.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader60.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet86);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Class<?> wildcardClass64 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet66);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        abstractReader45.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        io.swagger.models.Swagger swagger53 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter54 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader55 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger53, logAdapter54);
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.reflect.Type[] typeArray69 = new java.lang.reflect.Type[] { wildcardClass59, wildcardClass61, wildcardClass64, wildcardClass68 };
        java.util.ArrayList<java.lang.reflect.Type> typeList70 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList70, typeArray69);
        abstractReader55.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList70);
        java.lang.Class<?> wildcardClass74 = abstractReader45.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader25.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet77);
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(typeSet79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.reflect.Type type46 = null;
        abstractReader2.addTypeToSkippedTypes(type46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass49 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Class<?> wildcardClass75 = obj71.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass70, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader53.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader53.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = typeSet86.getClass();
        abstractReader2.setTypesToSkip(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass18);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader23.getTypesToSkip();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        java.lang.Class<?> wildcardClass50 = abstractReader23.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader23.getTypesToSkip();
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        abstractReader54.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass75, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.Class<?> wildcardClass87 = typeList84.getClass();
        java.lang.Class<?> wildcardClass88 = typeList84.getClass();
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.lang.Class<?> wildcardClass91 = typeList84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader14 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger12, logAdapter13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass18, wildcardClass20, wildcardClass23, wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        abstractReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        java.lang.Class<?> wildcardClass32 = typeList29.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass53, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Object obj80 = new java.lang.Object();
        java.lang.Class<?> wildcardClass81 = obj80.getClass();
        java.lang.Class<?> wildcardClass82 = obj80.getClass();
        java.lang.Class<?> wildcardClass83 = obj80.getClass();
        java.lang.reflect.Type[] typeArray84 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass76, wildcardClass79, wildcardClass83 };
        java.util.ArrayList<java.lang.reflect.Type> typeList85 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList85, typeArray84);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList85);
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader29 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger27, logAdapter28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        java.lang.Class<?> wildcardClass42 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = typeSet43.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.Class<?> wildcardClass45 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = typeSet46.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet24 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet25 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass26 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(typeSet25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger28 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter29 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader30 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger28, logAdapter29);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        abstractReader30.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass33);
        java.lang.reflect.Type type35 = null;
        abstractReader30.addTypeToSkippedTypes(type35);
        java.lang.Class<?> wildcardClass37 = abstractReader30.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader30.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader43.getTypesToSkip();
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        abstractReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader51.getTypesToSkip();
        java.lang.Class<?> wildcardClass57 = typeSet56.getClass();
        abstractReader43.setTypesToSkip(typeSet56);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Class<?> wildcardClass76 = obj72.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.reflect.Type[] typeArray81 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass71, wildcardClass76, wildcardClass80 };
        java.util.ArrayList<java.lang.reflect.Type> typeList82 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList82, typeArray81);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        abstractReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.lang.Class<?> wildcardClass87 = typeList82.getClass();
        java.lang.Class<?> wildcardClass88 = typeList82.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList82);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = null;
        abstractReader2.setTypesToSkip(typeSet91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(typeArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNull(typeSet93);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader49.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader57.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        abstractReader49.setTypesToSkip(typeSet62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Class<?> wildcardClass81 = obj78.getClass();
        java.lang.Class<?> wildcardClass82 = obj78.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass77, wildcardClass82, wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.lang.reflect.Type type54 = null;
        abstractReader49.addTypeToSkippedTypes(type54);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        abstractReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.lang.reflect.Type type63 = null;
        abstractReader58.addTypeToSkippedTypes(type63);
        java.lang.Class<?> wildcardClass65 = abstractReader58.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass68 = typeSet67.getClass();
        abstractReader49.setTypesToSkip(typeSet67);
        abstractReader2.setTypesToSkip(typeSet67);
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass72 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass73 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet21 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger22 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter23 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader24 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger22, logAdapter23);
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        abstractReader24.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader24.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader32.getTypesToSkip();
        java.lang.Class<?> wildcardClass38 = typeSet37.getClass();
        abstractReader24.setTypesToSkip(typeSet37);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        abstractReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader42.getTypesToSkip();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader50.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = typeSet55.getClass();
        abstractReader42.setTypesToSkip(typeSet55);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Class<?> wildcardClass75 = obj71.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass70, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader42.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader42.getTypesToSkip();
        abstractReader24.setTypesToSkip(typeSet87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader24.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader24.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet90);
        java.lang.Class<?> wildcardClass92 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(typeSet21);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass26 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass27 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        java.lang.Class<?> wildcardClass54 = obj51.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass54, wildcardClass56, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.lang.Class<?> wildcardClass68 = typeList65.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.lang.Class<?> wildcardClass70 = abstractReader47.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader47.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet71);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger75 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter76 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader77 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger75, logAdapter76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        abstractReader77.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass80);
        java.lang.Class<?> wildcardClass82 = abstractReader77.getClass();
        java.lang.Class<?> wildcardClass83 = abstractReader77.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        abstractReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        abstractReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader68 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger66, logAdapter67);
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Class<?> wildcardClass81 = obj78.getClass();
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] { wildcardClass72, wildcardClass74, wildcardClass77, wildcardClass81 };
        java.util.ArrayList<java.lang.reflect.Type> typeList83 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList83, typeArray82);
        abstractReader68.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList83);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList83);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader58.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet88);
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = null;
        abstractReader9.addTypeToSkippedTypes(type14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Class<?> wildcardClass30 = obj26.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass25, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader18.getTypesToSkip();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass71 = typeSet70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        java.lang.Class<?> wildcardClass57 = typeList54.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.lang.reflect.Type type59 = null;
        abstractReader36.addTypeToSkippedTypes(type59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader36.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = abstractReader36.getClass();
        java.lang.Class<?> wildcardClass63 = abstractReader36.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet65);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Class<?> wildcardClass23 = obj19.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass15, wildcardClass18, wildcardClass23, wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader11.getTypesToSkip();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.lang.Class<?> wildcardClass60 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader49.getTypesToSkip();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader57.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        abstractReader49.setTypesToSkip(typeSet62);
        io.swagger.models.Swagger swagger65 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter66 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader67 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger65, logAdapter66);
        io.swagger.models.Swagger swagger68 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter69 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader70 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger68, logAdapter69);
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Class<?> wildcardClass81 = obj78.getClass();
        java.lang.Class<?> wildcardClass82 = obj78.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.reflect.Type[] typeArray87 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass77, wildcardClass82, wildcardClass86 };
        java.util.ArrayList<java.lang.reflect.Type> typeList88 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList88, typeArray87);
        abstractReader70.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader67.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList88);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass44 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader29 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger27, logAdapter28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.reflect.Type[] typeArray53 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass45, wildcardClass48, wildcardClass52 };
        java.util.ArrayList<java.lang.reflect.Type> typeList54 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList54, typeArray53);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        abstractReader29.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList54);
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = null;
        abstractReader60.addTypeToSkippedTypes(type65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        abstractReader69.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader69.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = typeSet74.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        io.swagger.models.Swagger swagger79 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter80 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader81 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger79, logAdapter80);
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        abstractReader81.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass84);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader81.getTypesToSkip();
        java.lang.Class<?> wildcardClass87 = abstractReader81.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet89);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader50.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        abstractReader58.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass61);
        java.util.Set<java.lang.reflect.Type> typeSet63 = abstractReader58.getTypesToSkip();
        java.lang.Class<?> wildcardClass64 = typeSet63.getClass();
        abstractReader50.setTypesToSkip(typeSet63);
        io.swagger.models.Swagger swagger66 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter67 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader68 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger66, logAdapter67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.Class<?> wildcardClass83 = obj79.getClass();
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        java.lang.Class<?> wildcardClass87 = obj84.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass78, wildcardClass83, wildcardClass87 };
        java.util.ArrayList<java.lang.reflect.Type> typeList89 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList89, typeArray88);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader68.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        abstractReader50.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList89);
        java.util.Set<java.lang.reflect.Type> typeSet94 = abstractReader50.getTypesToSkip();
        java.lang.Class<?> wildcardClass95 = abstractReader50.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet98 = null;
        abstractReader2.setTypesToSkip(typeSet98);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeSet63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(typeSet94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Class<?> wildcardClass51 = obj47.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Class<?> wildcardClass55 = obj52.getClass();
        java.lang.reflect.Type[] typeArray56 = new java.lang.reflect.Type[] { wildcardClass43, wildcardClass46, wildcardClass51, wildcardClass55 };
        java.util.ArrayList<java.lang.reflect.Type> typeList57 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList57, typeArray56);
        abstractReader39.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader36.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList57);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass63 = typeSet62.getClass();
        java.lang.Class<?> wildcardClass64 = typeSet62.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.lang.Class<?> wildcardClass66 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass67 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Class<?> wildcardClass61 = obj57.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass56, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        abstractReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader72.getTypesToSkip();
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader80 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger78, logAdapter79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        abstractReader80.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader80.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = typeSet85.getClass();
        abstractReader72.setTypesToSkip(typeSet85);
        abstractReader49.setTypesToSkip(typeSet85);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader49.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader49.getTypesToSkip();
        java.lang.reflect.Type type91 = null;
        abstractReader49.addTypeToSkippedTypes(type91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader49.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = typeSet93.getClass();
        abstractReader2.setTypesToSkip(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet50);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        java.lang.Class<?> wildcardClass17 = obj14.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass17, wildcardClass19, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass33, wildcardClass37, wildcardClass41, wildcardClass46 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet48 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet48, typeArray47);
        abstractReader13.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet48);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass65 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = null;
        abstractReader2.setTypesToSkip(typeSet67);
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader71.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader71.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader71.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader71.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet92);
        java.lang.Class<?> wildcardClass94 = typeSet92.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.util.Set<java.lang.reflect.Type> typeSet15 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass16 = typeSet15.getClass();
        abstractReader2.setTypesToSkip(typeSet15);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.reflect.Type type46 = null;
        abstractReader2.addTypeToSkippedTypes(type46);
        java.lang.Class<?> wildcardClass48 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass49 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass50 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass27, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        abstractReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass45);
        java.lang.reflect.Type type47 = null;
        abstractReader42.addTypeToSkippedTypes(type47);
        io.swagger.models.Swagger swagger49 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter50 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader51 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger49, logAdapter50);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        abstractReader51.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass54);
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader51.getTypesToSkip();
        java.lang.Class<?> wildcardClass57 = typeSet56.getClass();
        abstractReader42.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass57);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = abstractReader2.getClass();
        java.lang.reflect.Type type63 = null;
        abstractReader2.addTypeToSkippedTypes(type63);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.reflect.Type[] typeArray26 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass18, wildcardClass21, wildcardClass25 };
        java.util.ArrayList<java.lang.reflect.Type> typeList27 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList27, typeArray26);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList27);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Class<?> wildcardClass45 = obj41.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass32, wildcardClass36, wildcardClass40, wildcardClass45 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet47 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet47, typeArray46);
        abstractReader12.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet47);
        java.lang.reflect.Type type50 = null;
        abstractReader12.addTypeToSkippedTypes(type50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader12.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader12.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet53);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.Class<?> wildcardClass73 = obj69.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass68, wildcardClass73, wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        abstractReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader58.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader58.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = null;
        abstractReader9.addTypeToSkippedTypes(type14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Class<?> wildcardClass30 = obj26.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass25, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader18.getTypesToSkip();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        java.lang.reflect.Type type69 = null;
        abstractReader2.addTypeToSkippedTypes(type69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader73 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger71, logAdapter72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        abstractReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        abstractReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass82 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass83 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet84);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass50 = typeSet49.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        java.lang.Class<?> wildcardClass14 = obj11.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.Class<?> wildcardClass22 = obj18.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.reflect.Type[] typeArray27 = new java.lang.reflect.Type[] { wildcardClass14, wildcardClass17, wildcardClass22, wildcardClass26 };
        java.util.ArrayList<java.lang.reflect.Type> typeList28 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList28, typeArray27);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList28);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader10.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass52 = typeList49.getClass();
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass56 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass63);
        java.lang.reflect.Type type65 = null;
        abstractReader60.addTypeToSkippedTypes(type65);
        java.lang.Class<?> wildcardClass67 = abstractReader60.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader60.getTypesToSkip();
        java.lang.Class<?> wildcardClass69 = abstractReader60.getClass();
        java.lang.Class<?> wildcardClass70 = abstractReader60.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader60.getTypesToSkip();
        java.lang.Class<?> wildcardClass72 = abstractReader60.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass72);
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeSet74);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = null;
        abstractReader2.setTypesToSkip(typeSet23);
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Class<?> wildcardClass58 = obj54.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass45, wildcardClass49, wildcardClass53, wildcardClass58 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet60 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet60, typeArray59);
        abstractReader25.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Class<?> wildcardClass85 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger86 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter87 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader88 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger86, logAdapter87);
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        java.lang.Class<?> wildcardClass91 = obj89.getClass();
        abstractReader88.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass91);
        java.lang.reflect.Type type93 = null;
        abstractReader88.addTypeToSkippedTypes(type93);
        java.lang.Class<?> wildcardClass95 = abstractReader88.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass95);
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass98 = typeSet97.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader53.getTypesToSkip();
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        abstractReader61.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass64);
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader61.getTypesToSkip();
        java.lang.Class<?> wildcardClass67 = typeSet66.getClass();
        abstractReader53.setTypesToSkip(typeSet66);
        abstractReader2.setTypesToSkip(typeSet66);
        java.lang.Class<?> wildcardClass70 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass91 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet92);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Class<?> wildcardClass66 = typeList63.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.util.Set<java.lang.reflect.Type> typeSet68 = null;
        abstractReader2.setTypesToSkip(typeSet68);
        java.lang.reflect.Type type70 = null;
        try {
            abstractReader2.addTypeToSkippedTypes(type70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.lang.reflect.Type type16 = null;
        abstractReader11.addTypeToSkippedTypes(type16);
        java.lang.Class<?> wildcardClass18 = abstractReader11.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet19 = abstractReader11.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet20 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass21 = typeSet20.getClass();
        abstractReader2.setTypesToSkip(typeSet20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Class<?> wildcardClass37 = obj33.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.reflect.Type[] typeArray42 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass32, wildcardClass37, wildcardClass41 };
        java.util.ArrayList<java.lang.reflect.Type> typeList43 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList43, typeArray42);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList43);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader25.getTypesToSkip();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.lang.Class<?> wildcardClass52 = abstractReader25.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader25.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader25.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet70);
        java.util.Set<java.lang.reflect.Type> typeSet72 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeSet19);
        org.junit.Assert.assertNotNull(typeSet20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(typeArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet72);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.lang.Class<?> wildcardClass82 = abstractReader53.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass86 = typeSet85.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = null;
        abstractReader2.setTypesToSkip(typeSet88);
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        java.lang.Class<?> wildcardClass25 = obj22.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Object obj29 = new java.lang.Object();
        java.lang.Class<?> wildcardClass30 = obj29.getClass();
        java.lang.Class<?> wildcardClass31 = obj29.getClass();
        java.lang.Class<?> wildcardClass32 = obj29.getClass();
        java.lang.Class<?> wildcardClass33 = obj29.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.reflect.Type[] typeArray38 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass28, wildcardClass33, wildcardClass37 };
        java.util.ArrayList<java.lang.reflect.Type> typeList39 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList39, typeArray38);
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList39);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader21.getTypesToSkip();
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Class<?> wildcardClass63 = typeList60.getClass();
        abstractReader21.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader21.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader21.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet66);
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass71 = typeSet70.getClass();
        java.lang.Class<?> wildcardClass72 = typeSet70.getClass();
        java.lang.Class<?> wildcardClass73 = typeSet70.getClass();
        java.lang.Class<?> wildcardClass74 = typeSet70.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(typeArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass14);
        java.util.Set<java.lang.reflect.Type> typeSet16 = abstractReader11.getTypesToSkip();
        java.lang.Class<?> wildcardClass17 = typeSet16.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.lang.Class<?> wildcardClass23 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet24 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(typeSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(typeSet24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Class<?> wildcardClass66 = typeList63.getClass();
        java.lang.Class<?> wildcardClass67 = typeList63.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Class<?> wildcardClass69 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet13 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger14 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter15 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader16 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger14, logAdapter15);
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        abstractReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        abstractReader16.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass22);
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        abstractReader16.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet45 = abstractReader16.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader16.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = abstractReader16.getClass();
        io.swagger.models.Swagger swagger48 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter49 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader50 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger48, logAdapter49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Class<?> wildcardClass53 = obj51.getClass();
        abstractReader50.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass53);
        java.lang.reflect.Type type55 = null;
        abstractReader50.addTypeToSkippedTypes(type55);
        java.lang.Class<?> wildcardClass57 = abstractReader50.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader50.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader50.getTypesToSkip();
        abstractReader16.setTypesToSkip(typeSet59);
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader16.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        abstractReader64.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass67);
        java.util.Set<java.lang.reflect.Type> typeSet69 = abstractReader64.getTypesToSkip();
        java.lang.Class<?> wildcardClass70 = abstractReader64.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader64.getTypesToSkip();
        abstractReader16.setTypesToSkip(typeSet71);
        java.lang.Class<?> wildcardClass73 = typeSet71.getClass();
        abstractReader2.setTypesToSkip(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(typeSet13);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet45);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeSet69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass35 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass37 = typeSet36.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Class<?> wildcardClass33 = obj30.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Class<?> wildcardClass38 = obj34.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass25, wildcardClass29, wildcardClass33, wildcardClass38 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet40 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet40, typeArray39);
        abstractReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet40);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        abstractReader5.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        io.swagger.models.Swagger swagger46 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter47 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader48 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger46, logAdapter47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.reflect.Type[] typeArray62 = new java.lang.reflect.Type[] { wildcardClass52, wildcardClass54, wildcardClass57, wildcardClass61 };
        java.util.ArrayList<java.lang.reflect.Type> typeList63 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList63, typeArray62);
        abstractReader48.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList63);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Class<?> wildcardClass81 = obj77.getClass();
        java.lang.reflect.Type[] typeArray82 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass72, wildcardClass76, wildcardClass81 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet83 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet83, typeArray82);
        abstractReader48.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        abstractReader5.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet83);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(typeArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass12);
        java.lang.reflect.Type type14 = null;
        abstractReader9.addTypeToSkippedTypes(type14);
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Class<?> wildcardClass30 = obj26.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.reflect.Type[] typeArray35 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass25, wildcardClass30, wildcardClass34 };
        java.util.ArrayList<java.lang.reflect.Type> typeList36 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList36, typeArray35);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList36);
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader18.getTypesToSkip();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.reflect.Type[] typeArray61 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass53, wildcardClass56, wildcardClass60 };
        java.util.ArrayList<java.lang.reflect.Type> typeList62 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList62, typeArray61);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList62);
        java.lang.Class<?> wildcardClass68 = abstractReader2.getClass();
        java.lang.reflect.Type type69 = null;
        abstractReader2.addTypeToSkippedTypes(type69);
        io.swagger.models.Swagger swagger71 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter72 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader73 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger71, logAdapter72);
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        abstractReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        abstractReader73.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass79);
        java.lang.Class<?> wildcardClass82 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(typeArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeSet83);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.reflect.Type[] typeArray46 = new java.lang.reflect.Type[] { wildcardClass36, wildcardClass38, wildcardClass41, wildcardClass45 };
        java.util.ArrayList<java.lang.reflect.Type> typeList47 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList47, typeArray46);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        abstractReader22.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList47);
        java.lang.Class<?> wildcardClass51 = abstractReader22.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        abstractReader56.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass73, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader56.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader56.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = typeSet89.getClass();
        java.lang.Class<?> wildcardClass91 = typeSet89.getClass();
        abstractReader2.setTypesToSkip(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(typeArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.Class<?> wildcardClass64 = abstractReader59.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet65 = abstractReader59.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet66 = abstractReader59.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet67 = abstractReader59.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet67);
        java.lang.Class<?> wildcardClass69 = typeSet67.getClass();
        java.lang.Class<?> wildcardClass70 = typeSet67.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(typeSet65);
        org.junit.Assert.assertNotNull(typeSet66);
        org.junit.Assert.assertNotNull(typeSet67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass37);
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.lang.Class<?> wildcardClass42 = abstractReader34.getClass();
        java.lang.Class<?> wildcardClass43 = abstractReader34.getClass();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        abstractReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        abstractReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Class<?> wildcardClass68 = obj64.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.reflect.Type[] typeArray73 = new java.lang.reflect.Type[] { wildcardClass60, wildcardClass63, wildcardClass68, wildcardClass72 };
        java.util.ArrayList<java.lang.reflect.Type> typeList74 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList74, typeArray73);
        abstractReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList74);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(typeArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass11 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger12 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter13 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader14 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger12, logAdapter13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        abstractReader14.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass17);
        java.lang.reflect.Type type19 = null;
        abstractReader14.addTypeToSkippedTypes(type19);
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader23.getTypesToSkip();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader14.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type74 = null;
        abstractReader2.addTypeToSkippedTypes(type74);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.util.Set<java.lang.reflect.Type> typeSet7 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger8 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter9 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader10 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger8, logAdapter9);
        java.lang.Object obj11 = new java.lang.Object();
        java.lang.Class<?> wildcardClass12 = obj11.getClass();
        java.lang.Class<?> wildcardClass13 = obj11.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass13);
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        abstractReader10.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        io.swagger.models.Swagger swagger18 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter19 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader20 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger18, logAdapter19);
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.Class<?> wildcardClass32 = obj28.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        java.lang.reflect.Type[] typeArray37 = new java.lang.reflect.Type[] { wildcardClass24, wildcardClass27, wildcardClass32, wildcardClass36 };
        java.util.ArrayList<java.lang.reflect.Type> typeList38 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList38, typeArray37);
        abstractReader20.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList38);
        abstractReader10.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList38);
        java.util.Set<java.lang.reflect.Type> typeSet42 = null;
        abstractReader10.setTypesToSkip(typeSet42);
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Class<?> wildcardClass61 = obj57.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass56, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader46.getTypesToSkip();
        io.swagger.models.Swagger swagger72 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter73 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader74 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger72, logAdapter73);
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        abstractReader74.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass77);
        java.lang.reflect.Type type79 = null;
        abstractReader74.addTypeToSkippedTypes(type79);
        java.lang.Class<?> wildcardClass81 = abstractReader74.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet82 = abstractReader74.getTypesToSkip();
        abstractReader46.setTypesToSkip(typeSet82);
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader46.getTypesToSkip();
        abstractReader10.setTypesToSkip(typeSet84);
        java.lang.Class<?> wildcardClass86 = abstractReader10.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader10.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = typeSet87.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(typeSet7);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(typeSet82);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = abstractReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader13.setTypesToSkip(typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass62 = typeSet61.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.util.Set<java.lang.reflect.Type> typeSet3 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger4 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter5 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader6 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger4, logAdapter5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        abstractReader6.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass9);
        java.lang.reflect.Type type11 = null;
        abstractReader6.addTypeToSkippedTypes(type11);
        java.lang.Class<?> wildcardClass13 = abstractReader6.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet14 = abstractReader6.getTypesToSkip();
        java.lang.Class<?> wildcardClass15 = abstractReader6.getClass();
        io.swagger.models.Swagger swagger16 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter17 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader18 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger16, logAdapter17);
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        abstractReader18.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass21);
        java.lang.reflect.Type type23 = null;
        abstractReader18.addTypeToSkippedTypes(type23);
        io.swagger.models.Swagger swagger25 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter26 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader27 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger25, logAdapter26);
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Class<?> wildcardClass39 = obj35.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Class<?> wildcardClass43 = obj40.getClass();
        java.lang.reflect.Type[] typeArray44 = new java.lang.reflect.Type[] { wildcardClass31, wildcardClass34, wildcardClass39, wildcardClass43 };
        java.util.ArrayList<java.lang.reflect.Type> typeList45 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList45, typeArray44);
        abstractReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList45);
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader27.getTypesToSkip();
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        java.lang.Class<?> wildcardClass52 = obj49.getClass();
        abstractReader27.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass52);
        io.swagger.models.Swagger swagger54 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter55 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader56 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger54, logAdapter55);
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Class<?> wildcardClass59 = obj57.getClass();
        java.lang.Class<?> wildcardClass60 = obj57.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass60, wildcardClass62, wildcardClass65, wildcardClass69 };
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        abstractReader56.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader27.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader18.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader6.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass79 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet80 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass81 = typeSet80.getClass();
        java.lang.Class<?> wildcardClass82 = typeSet80.getClass();
        org.junit.Assert.assertNotNull(typeSet3);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(typeSet14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeSet80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Class<?> wildcardClass20 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader23.getTypesToSkip();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.lang.Class<?> wildcardClass72 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass73 = abstractReader2.getClass();
        java.lang.reflect.Type type74 = null;
        abstractReader2.addTypeToSkippedTypes(type74);
        java.lang.reflect.Type type76 = null;
        abstractReader2.addTypeToSkippedTypes(type76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type79 = null;
        abstractReader2.addTypeToSkippedTypes(type79);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet78);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader40.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = null;
        abstractReader63.addTypeToSkippedTypes(type68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        abstractReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader72.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader84 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger82, logAdapter83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader84.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader84.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = abstractReader84.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader84.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.lang.reflect.Type type96 = null;
        abstractReader2.addTypeToSkippedTypes(type96);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        io.swagger.models.Swagger swagger64 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter65 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader66 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger64, logAdapter65);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Class<?> wildcardClass79 = obj76.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass70, wildcardClass72, wildcardClass75, wildcardClass79 };
        java.util.ArrayList<java.lang.reflect.Type> typeList81 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList81, typeArray80);
        abstractReader66.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList81);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass91 = typeSet90.getClass();
        java.lang.Class<?> wildcardClass92 = typeSet90.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.util.Set<java.lang.reflect.Type> typeSet40 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger41 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter42 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader43 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger41, logAdapter42);
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        abstractReader43.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        java.lang.Class<?> wildcardClass57 = obj54.getClass();
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Class<?> wildcardClass65 = obj61.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.reflect.Type[] typeArray70 = new java.lang.reflect.Type[] { wildcardClass57, wildcardClass60, wildcardClass65, wildcardClass69 };
        java.util.ArrayList<java.lang.reflect.Type> typeList71 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList71, typeArray70);
        abstractReader53.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader43.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList71);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet79 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet40);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeSet79);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader40.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet49);
        java.util.Set<java.lang.reflect.Type> typeSet51 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet52 = null;
        abstractReader2.setTypesToSkip(typeSet52);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(typeSet51);
        org.junit.Assert.assertNull(typeSet54);
        org.junit.Assert.assertNull(typeSet55);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        java.lang.Class<?> wildcardClass9 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger11 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter12 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader13 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger11, logAdapter12);
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Class<?> wildcardClass16 = obj14.getClass();
        abstractReader13.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass16);
        java.util.Set<java.lang.reflect.Type> typeSet18 = abstractReader13.getTypesToSkip();
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader13.setTypesToSkip(typeSet26);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Class<?> wildcardClass45 = obj42.getClass();
        java.lang.Class<?> wildcardClass46 = obj42.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.reflect.Type[] typeArray51 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass41, wildcardClass46, wildcardClass50 };
        java.util.ArrayList<java.lang.reflect.Type> typeList52 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList52, typeArray51);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader13.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList52);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet59 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass61 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(typeSet18);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(typeSet59);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        io.swagger.models.Swagger swagger27 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter28 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader29 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger27, logAdapter28);
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        abstractReader29.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass32);
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader29.getTypesToSkip();
        java.lang.Class<?> wildcardClass35 = typeSet34.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        io.swagger.models.Swagger swagger37 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter38 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader39 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger37, logAdapter38);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        abstractReader39.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.lang.reflect.Type type44 = null;
        abstractReader39.addTypeToSkippedTypes(type44);
        java.lang.Class<?> wildcardClass46 = abstractReader39.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader39.getTypesToSkip();
        java.lang.Class<?> wildcardClass48 = abstractReader39.getClass();
        java.lang.Class<?> wildcardClass49 = abstractReader39.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet50 = abstractReader39.getTypesToSkip();
        java.lang.Class<?> wildcardClass51 = typeSet50.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass53 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(typeSet50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeSet54);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Class<?> wildcardClass20 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass26);
        java.lang.reflect.Type type28 = null;
        abstractReader23.addTypeToSkippedTypes(type28);
        java.lang.Class<?> wildcardClass30 = abstractReader23.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader23.getTypesToSkip();
        io.swagger.models.Swagger swagger32 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter33 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader34 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger32, logAdapter33);
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass38, wildcardClass40, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader34.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Class<?> wildcardClass66 = obj63.getClass();
        java.lang.Class<?> wildcardClass67 = obj63.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass54, wildcardClass58, wildcardClass62, wildcardClass67 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet69 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet69, typeArray68);
        abstractReader34.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet69);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        abstractReader34.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass73);
        java.util.Set<java.lang.reflect.Type> typeSet76 = abstractReader23.getTypesToSkip();
        java.lang.Class<?> wildcardClass77 = abstractReader23.getClass();
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader80 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger78, logAdapter79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        abstractReader80.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader23.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass90 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(typeSet76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Class<?> wildcardClass59 = obj55.getClass();
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        java.lang.Class<?> wildcardClass63 = obj60.getClass();
        java.lang.reflect.Type[] typeArray64 = new java.lang.reflect.Type[] { wildcardClass51, wildcardClass54, wildcardClass59, wildcardClass63 };
        java.util.ArrayList<java.lang.reflect.Type> typeList65 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList65, typeArray64);
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList65);
        java.util.Set<java.lang.reflect.Type> typeSet68 = abstractReader47.getTypesToSkip();
        io.swagger.models.Swagger swagger69 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter70 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader71 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger69, logAdapter70);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Class<?> wildcardClass75 = obj72.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.reflect.Type[] typeArray85 = new java.lang.reflect.Type[] { wildcardClass75, wildcardClass77, wildcardClass80, wildcardClass84 };
        java.util.ArrayList<java.lang.reflect.Type> typeList86 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList86, typeArray85);
        abstractReader71.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass89 = typeList86.getClass();
        abstractReader47.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.lang.Class<?> wildcardClass91 = typeList86.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList86);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(typeArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(typeSet68);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(typeArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet95);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        io.swagger.models.Swagger swagger7 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter8 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader9 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger7, logAdapter8);
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Object obj14 = new java.lang.Object();
        java.lang.Class<?> wildcardClass15 = obj14.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.reflect.Type[] typeArray23 = new java.lang.reflect.Type[] { wildcardClass13, wildcardClass15, wildcardClass18, wildcardClass22 };
        java.util.ArrayList<java.lang.reflect.Type> typeList24 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList24, typeArray23);
        abstractReader9.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList24);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Class<?> wildcardClass32 = obj30.getClass();
        java.lang.Class<?> wildcardClass33 = obj30.getClass();
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Class<?> wildcardClass41 = obj38.getClass();
        java.lang.Class<?> wildcardClass42 = obj38.getClass();
        java.lang.reflect.Type[] typeArray43 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass33, wildcardClass37, wildcardClass42 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet44 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet44, typeArray43);
        abstractReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet44);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        abstractReader9.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.Object obj77 = new java.lang.Object();
        java.lang.Class<?> wildcardClass78 = obj77.getClass();
        java.lang.Class<?> wildcardClass79 = obj77.getClass();
        java.lang.Class<?> wildcardClass80 = obj77.getClass();
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        java.lang.Class<?> wildcardClass84 = obj81.getClass();
        java.lang.Class<?> wildcardClass85 = obj81.getClass();
        java.lang.reflect.Type[] typeArray86 = new java.lang.reflect.Type[] { wildcardClass72, wildcardClass76, wildcardClass80, wildcardClass85 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet87 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet87, typeArray86);
        abstractReader52.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet87);
        abstractReader9.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet87);
        java.lang.Class<?> wildcardClass91 = typeSet87.getClass();
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet87);
        java.lang.Class<?> wildcardClass93 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(typeArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(typeArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Class<?> wildcardClass20 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger21 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter22 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader23 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger21, logAdapter22);
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass27, wildcardClass30, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader23.getTypesToSkip();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        abstractReader23.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass48);
        io.swagger.models.Swagger swagger50 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter51 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader52 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger50, logAdapter51);
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Class<?> wildcardClass56 = obj53.getClass();
        java.lang.Object obj57 = new java.lang.Object();
        java.lang.Class<?> wildcardClass58 = obj57.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.reflect.Type[] typeArray66 = new java.lang.reflect.Type[] { wildcardClass56, wildcardClass58, wildcardClass61, wildcardClass65 };
        java.util.ArrayList<java.lang.reflect.Type> typeList67 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList67, typeArray66);
        abstractReader52.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader23.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList67);
        java.lang.Class<?> wildcardClass72 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass73 = abstractReader2.getClass();
        java.lang.reflect.Type type74 = null;
        abstractReader2.addTypeToSkippedTypes(type74);
        java.lang.reflect.Type type76 = null;
        abstractReader2.addTypeToSkippedTypes(type76);
        java.util.Set<java.lang.reflect.Type> typeSet78 = null;
        abstractReader2.setTypesToSkip(typeSet78);
        java.lang.Class<?> wildcardClass80 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass81 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(typeArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = null;
        abstractReader32.addTypeToSkippedTypes(type37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        abstractReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader41.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = typeSet46.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.lang.Class<?> wildcardClass54 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        abstractReader57.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass60);
        java.util.Set<java.lang.reflect.Type> typeSet62 = abstractReader57.getTypesToSkip();
        io.swagger.models.Swagger swagger63 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter64 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader65 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger63, logAdapter64);
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        abstractReader65.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass68);
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader65.getTypesToSkip();
        java.lang.Class<?> wildcardClass71 = typeSet70.getClass();
        abstractReader57.setTypesToSkip(typeSet70);
        java.util.Set<java.lang.reflect.Type> typeSet73 = abstractReader57.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet74 = abstractReader57.getTypesToSkip();
        java.lang.Class<?> wildcardClass75 = abstractReader57.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(typeSet62);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeSet73);
        org.junit.Assert.assertNotNull(typeSet74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass45 = typeSet44.getClass();
        java.lang.Class<?> wildcardClass46 = typeSet44.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet33 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet34 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass35 = typeSet34.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(typeSet33);
        org.junit.Assert.assertNotNull(typeSet34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        io.swagger.models.Swagger swagger20 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter21 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader22 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger20, logAdapter21);
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        abstractReader22.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass25);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader22.getTypesToSkip();
        java.lang.Class<?> wildcardClass28 = typeSet27.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet39 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass40 = typeSet39.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass43 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet44 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass45 = typeSet44.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(typeSet39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(typeSet44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Class<?> wildcardClass23 = obj19.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass15, wildcardClass18, wildcardClass23, wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader11.getTypesToSkip();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Class<?> wildcardClass47 = obj45.getClass();
        java.lang.Class<?> wildcardClass48 = obj45.getClass();
        java.lang.reflect.Type[] typeArray49 = new java.lang.reflect.Type[] { wildcardClass39, wildcardClass41, wildcardClass44, wildcardClass48 };
        java.util.ArrayList<java.lang.reflect.Type> typeList50 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList50, typeArray49);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList50);
        java.lang.Class<?> wildcardClass53 = typeList50.getClass();
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList50);
        io.swagger.models.Swagger swagger55 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter56 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader57 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger55, logAdapter56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        java.lang.Class<?> wildcardClass60 = obj58.getClass();
        java.lang.Class<?> wildcardClass61 = obj58.getClass();
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.reflect.Type[] typeArray71 = new java.lang.reflect.Type[] { wildcardClass61, wildcardClass63, wildcardClass66, wildcardClass70 };
        java.util.ArrayList<java.lang.reflect.Type> typeList72 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList72, typeArray71);
        abstractReader57.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList72);
        java.lang.Class<?> wildcardClass75 = typeList72.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet78 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type79 = null;
        abstractReader2.addTypeToSkippedTypes(type79);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(typeArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(typeArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet78);
        org.junit.Assert.assertNotNull(typeSet81);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass15);
        java.lang.reflect.Type type17 = null;
        abstractReader12.addTypeToSkippedTypes(type17);
        io.swagger.models.Swagger swagger19 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter20 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader21 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger19, logAdapter20);
        java.lang.Object obj22 = new java.lang.Object();
        java.lang.Class<?> wildcardClass23 = obj22.getClass();
        java.lang.Class<?> wildcardClass24 = obj22.getClass();
        abstractReader21.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass24);
        java.util.Set<java.lang.reflect.Type> typeSet26 = abstractReader21.getTypesToSkip();
        java.lang.Class<?> wildcardClass27 = typeSet26.getClass();
        abstractReader12.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.reflect.Type type37 = null;
        abstractReader32.addTypeToSkippedTypes(type37);
        io.swagger.models.Swagger swagger39 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter40 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader41 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger39, logAdapter40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        java.lang.Class<?> wildcardClass44 = obj42.getClass();
        abstractReader41.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader41.getTypesToSkip();
        java.lang.Class<?> wildcardClass47 = typeSet46.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass47);
        java.lang.Object obj49 = new java.lang.Object();
        java.lang.Class<?> wildcardClass50 = obj49.getClass();
        java.lang.Class<?> wildcardClass51 = obj49.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass51);
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass55 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet56 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger57 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter58 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader59 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger57, logAdapter58);
        java.lang.Object obj60 = new java.lang.Object();
        java.lang.Class<?> wildcardClass61 = obj60.getClass();
        java.lang.Class<?> wildcardClass62 = obj60.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        abstractReader59.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass65);
        io.swagger.models.Swagger swagger67 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter68 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader69 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger67, logAdapter68);
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Object obj76 = new java.lang.Object();
        java.lang.Class<?> wildcardClass77 = obj76.getClass();
        java.lang.Class<?> wildcardClass78 = obj76.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass73, wildcardClass75, wildcardClass78, wildcardClass82 };
        java.util.ArrayList<java.lang.reflect.Type> typeList84 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList84, typeArray83);
        abstractReader69.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader59.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList84);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeSet26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet56);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        java.lang.Class<?> wildcardClass29 = obj26.getClass();
        java.lang.Object obj30 = new java.lang.Object();
        java.lang.Class<?> wildcardClass31 = obj30.getClass();
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Object obj35 = new java.lang.Object();
        java.lang.Class<?> wildcardClass36 = obj35.getClass();
        java.lang.Class<?> wildcardClass37 = obj35.getClass();
        java.lang.Class<?> wildcardClass38 = obj35.getClass();
        java.lang.reflect.Type[] typeArray39 = new java.lang.reflect.Type[] { wildcardClass29, wildcardClass31, wildcardClass34, wildcardClass38 };
        java.util.ArrayList<java.lang.reflect.Type> typeList40 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList40, typeArray39);
        abstractReader25.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList40);
        java.lang.Class<?> wildcardClass43 = typeList40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet54 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet55 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        io.swagger.models.Swagger swagger59 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter60 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader61 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger59, logAdapter60);
        java.lang.Object obj62 = new java.lang.Object();
        java.lang.Class<?> wildcardClass63 = obj62.getClass();
        java.lang.Class<?> wildcardClass64 = obj62.getClass();
        java.lang.Class<?> wildcardClass65 = obj62.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Class<?> wildcardClass71 = obj69.getClass();
        java.lang.Class<?> wildcardClass72 = obj69.getClass();
        java.lang.Class<?> wildcardClass73 = obj69.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass68, wildcardClass73, wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        abstractReader61.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        io.swagger.models.Swagger swagger84 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter85 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader86 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger84, logAdapter85);
        java.lang.Object obj87 = new java.lang.Object();
        java.lang.Class<?> wildcardClass88 = obj87.getClass();
        java.lang.Class<?> wildcardClass89 = obj87.getClass();
        abstractReader86.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader86.getTypesToSkip();
        java.lang.Class<?> wildcardClass92 = abstractReader86.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader86.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass97 = typeSet96.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(typeArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(typeSet54);
        org.junit.Assert.assertNotNull(typeSet55);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(wildcardClass92);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        io.swagger.models.Swagger swagger23 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter24 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader25 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger23, logAdapter24);
        java.lang.Object obj26 = new java.lang.Object();
        java.lang.Class<?> wildcardClass27 = obj26.getClass();
        java.lang.Class<?> wildcardClass28 = obj26.getClass();
        abstractReader25.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass28);
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader25.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        java.util.Set<java.lang.reflect.Type> typeSet38 = abstractReader33.getTypesToSkip();
        java.lang.Class<?> wildcardClass39 = typeSet38.getClass();
        abstractReader25.setTypesToSkip(typeSet38);
        abstractReader2.setTypesToSkip(typeSet38);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type44 = null;
        abstractReader2.addTypeToSkippedTypes(type44);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet47 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader2.getTypesToSkip();
        java.lang.reflect.Type type50 = null;
        abstractReader2.addTypeToSkippedTypes(type50);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(typeSet38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(typeSet47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.reflect.Type type40 = null;
        abstractReader2.addTypeToSkippedTypes(type40);
        java.lang.Object obj42 = new java.lang.Object();
        java.lang.Class<?> wildcardClass43 = obj42.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        io.swagger.models.Swagger swagger45 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter46 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader47 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger45, logAdapter46);
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        abstractReader47.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass50);
        java.util.Set<java.lang.reflect.Type> typeSet52 = abstractReader47.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet53 = abstractReader47.getTypesToSkip();
        java.lang.Class<?> wildcardClass54 = typeSet53.getClass();
        java.lang.Class<?> wildcardClass55 = typeSet53.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass55);
        java.util.Set<java.lang.reflect.Type> typeSet57 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger58 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter59 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader60 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger58, logAdapter59);
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Class<?> wildcardClass64 = obj61.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.Class<?> wildcardClass72 = obj68.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass64, wildcardClass67, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader60.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.util.Set<java.lang.reflect.Type> typeSet81 = abstractReader60.getTypesToSkip();
        java.lang.Object obj82 = new java.lang.Object();
        java.lang.Class<?> wildcardClass83 = obj82.getClass();
        java.lang.Class<?> wildcardClass84 = obj82.getClass();
        java.lang.Class<?> wildcardClass85 = obj82.getClass();
        abstractReader60.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader60.getTypesToSkip();
        java.lang.Class<?> wildcardClass88 = abstractReader60.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass88);
        java.util.Set<java.lang.reflect.Type> typeSet90 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(typeSet52);
        org.junit.Assert.assertNotNull(typeSet53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(typeSet57);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(typeSet81);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(typeSet90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet92);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Class<?> wildcardClass7 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet8 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet9 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet10 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet11 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet12 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger13 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter14 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader15 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger13, logAdapter14);
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Class<?> wildcardClass27 = obj23.getClass();
        java.lang.Object obj28 = new java.lang.Object();
        java.lang.Class<?> wildcardClass29 = obj28.getClass();
        java.lang.Class<?> wildcardClass30 = obj28.getClass();
        java.lang.Class<?> wildcardClass31 = obj28.getClass();
        java.lang.reflect.Type[] typeArray32 = new java.lang.reflect.Type[] { wildcardClass19, wildcardClass22, wildcardClass27, wildcardClass31 };
        java.util.ArrayList<java.lang.reflect.Type> typeList33 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList33, typeArray32);
        abstractReader15.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList33);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader15.getTypesToSkip();
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        java.lang.Class<?> wildcardClass40 = obj37.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass40);
        java.util.Set<java.lang.reflect.Type> typeSet42 = abstractReader15.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet43 = abstractReader15.getTypesToSkip();
        io.swagger.models.Swagger swagger44 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter45 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader46 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger44, logAdapter45);
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Class<?> wildcardClass50 = obj47.getClass();
        java.lang.Object obj51 = new java.lang.Object();
        java.lang.Class<?> wildcardClass52 = obj51.getClass();
        java.lang.Object obj53 = new java.lang.Object();
        java.lang.Class<?> wildcardClass54 = obj53.getClass();
        java.lang.Class<?> wildcardClass55 = obj53.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Class<?> wildcardClass59 = obj56.getClass();
        java.lang.reflect.Type[] typeArray60 = new java.lang.reflect.Type[] { wildcardClass50, wildcardClass52, wildcardClass55, wildcardClass59 };
        java.util.ArrayList<java.lang.reflect.Type> typeList61 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList61, typeArray60);
        abstractReader46.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList61);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Class<?> wildcardClass70 = obj67.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Class<?> wildcardClass74 = obj71.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Class<?> wildcardClass79 = obj75.getClass();
        java.lang.reflect.Type[] typeArray80 = new java.lang.reflect.Type[] { wildcardClass66, wildcardClass70, wildcardClass74, wildcardClass79 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet81 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet81, typeArray80);
        abstractReader46.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet81);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        abstractReader46.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass85);
        java.util.Set<java.lang.reflect.Type> typeSet87 = abstractReader46.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader46.getTypesToSkip();
        java.lang.Class<?> wildcardClass89 = abstractReader46.getClass();
        abstractReader15.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass89);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(typeSet8);
        org.junit.Assert.assertNotNull(typeSet9);
        org.junit.Assert.assertNotNull(typeSet10);
        org.junit.Assert.assertNotNull(typeSet11);
        org.junit.Assert.assertNotNull(typeSet12);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(typeArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(typeSet36);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(typeSet42);
        org.junit.Assert.assertNotNull(typeSet43);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(typeArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(typeArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(typeSet87);
        org.junit.Assert.assertNotNull(typeSet88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Class<?> wildcardClass17 = obj13.getClass();
        java.lang.Object obj18 = new java.lang.Object();
        java.lang.Class<?> wildcardClass19 = obj18.getClass();
        java.lang.Class<?> wildcardClass20 = obj18.getClass();
        java.lang.Class<?> wildcardClass21 = obj18.getClass();
        java.lang.reflect.Type[] typeArray22 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass12, wildcardClass17, wildcardClass21 };
        java.util.ArrayList<java.lang.reflect.Type> typeList23 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList23, typeArray22);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList23);
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Object obj39 = new java.lang.Object();
        java.lang.Class<?> wildcardClass40 = obj39.getClass();
        java.lang.Class<?> wildcardClass41 = obj39.getClass();
        java.lang.Class<?> wildcardClass42 = obj39.getClass();
        java.lang.Class<?> wildcardClass43 = obj39.getClass();
        java.lang.Object obj44 = new java.lang.Object();
        java.lang.Class<?> wildcardClass45 = obj44.getClass();
        java.lang.Class<?> wildcardClass46 = obj44.getClass();
        java.lang.Class<?> wildcardClass47 = obj44.getClass();
        java.lang.reflect.Type[] typeArray48 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass38, wildcardClass43, wildcardClass47 };
        java.util.ArrayList<java.lang.reflect.Type> typeList49 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList49, typeArray48);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList49);
        io.swagger.models.Swagger swagger52 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter53 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader54 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger52, logAdapter53);
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Object obj61 = new java.lang.Object();
        java.lang.Class<?> wildcardClass62 = obj61.getClass();
        java.lang.Class<?> wildcardClass63 = obj61.getClass();
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.reflect.Type[] typeArray68 = new java.lang.reflect.Type[] { wildcardClass58, wildcardClass60, wildcardClass63, wildcardClass67 };
        java.util.ArrayList<java.lang.reflect.Type> typeList69 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList69, typeArray68);
        abstractReader54.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList69);
        java.lang.Object obj72 = new java.lang.Object();
        java.lang.Class<?> wildcardClass73 = obj72.getClass();
        java.lang.Class<?> wildcardClass74 = obj72.getClass();
        java.lang.Object obj75 = new java.lang.Object();
        java.lang.Class<?> wildcardClass76 = obj75.getClass();
        java.lang.Class<?> wildcardClass77 = obj75.getClass();
        java.lang.Class<?> wildcardClass78 = obj75.getClass();
        java.lang.Object obj79 = new java.lang.Object();
        java.lang.Class<?> wildcardClass80 = obj79.getClass();
        java.lang.Class<?> wildcardClass81 = obj79.getClass();
        java.lang.Class<?> wildcardClass82 = obj79.getClass();
        java.lang.Object obj83 = new java.lang.Object();
        java.lang.Class<?> wildcardClass84 = obj83.getClass();
        java.lang.Class<?> wildcardClass85 = obj83.getClass();
        java.lang.Class<?> wildcardClass86 = obj83.getClass();
        java.lang.Class<?> wildcardClass87 = obj83.getClass();
        java.lang.reflect.Type[] typeArray88 = new java.lang.reflect.Type[] { wildcardClass74, wildcardClass78, wildcardClass82, wildcardClass87 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet89 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean90 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet89, typeArray88);
        abstractReader54.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        abstractReader31.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet89);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader31.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet93);
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass98 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet99 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(typeArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(typeArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
        org.junit.Assert.assertNotNull(wildcardClass98);
        org.junit.Assert.assertNotNull(typeSet99);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        java.util.Set<java.lang.reflect.Type> typeSet31 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass32 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger33 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter34 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader35 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger33, logAdapter34);
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Class<?> wildcardClass47 = obj43.getClass();
        java.lang.Object obj48 = new java.lang.Object();
        java.lang.Class<?> wildcardClass49 = obj48.getClass();
        java.lang.Class<?> wildcardClass50 = obj48.getClass();
        java.lang.Class<?> wildcardClass51 = obj48.getClass();
        java.lang.reflect.Type[] typeArray52 = new java.lang.reflect.Type[] { wildcardClass39, wildcardClass42, wildcardClass47, wildcardClass51 };
        java.util.ArrayList<java.lang.reflect.Type> typeList53 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList53, typeArray52);
        abstractReader35.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList53);
        io.swagger.models.Swagger swagger56 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter57 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader58 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger56, logAdapter57);
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Class<?> wildcardClass70 = obj68.getClass();
        java.lang.Class<?> wildcardClass71 = obj68.getClass();
        java.lang.reflect.Type[] typeArray72 = new java.lang.reflect.Type[] { wildcardClass62, wildcardClass64, wildcardClass67, wildcardClass71 };
        java.util.ArrayList<java.lang.reflect.Type> typeList73 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList73, typeArray72);
        abstractReader58.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList73);
        java.lang.Class<?> wildcardClass76 = typeList73.getClass();
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass76);
        io.swagger.models.Swagger swagger78 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter79 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader80 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger78, logAdapter79);
        java.lang.Object obj81 = new java.lang.Object();
        java.lang.Class<?> wildcardClass82 = obj81.getClass();
        java.lang.Class<?> wildcardClass83 = obj81.getClass();
        abstractReader80.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        abstractReader35.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass83);
        java.util.Set<java.lang.reflect.Type> typeSet86 = abstractReader35.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet86);
        java.util.Set<java.lang.reflect.Type> typeSet88 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(typeSet31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(typeArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(typeArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(typeSet86);
        org.junit.Assert.assertNotNull(typeSet88);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger24 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter25 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader26 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger24, logAdapter25);
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Class<?> wildcardClass38 = obj36.getClass();
        java.lang.Class<?> wildcardClass39 = obj36.getClass();
        java.lang.reflect.Type[] typeArray40 = new java.lang.reflect.Type[] { wildcardClass30, wildcardClass32, wildcardClass35, wildcardClass39 };
        java.util.ArrayList<java.lang.reflect.Type> typeList41 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList41, typeArray40);
        abstractReader26.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.lang.Class<?> wildcardClass44 = typeList41.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList41);
        java.util.Set<java.lang.reflect.Type> typeSet46 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.lang.Class<?> wildcardClass67 = typeList64.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.lang.Class<?> wildcardClass69 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet70 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet71 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass72 = typeSet71.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(typeArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeSet46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(typeSet70);
        org.junit.Assert.assertNotNull(typeSet71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        java.lang.Class<?> wildcardClass29 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet30 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        io.swagger.models.Swagger swagger34 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter35 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader36 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger34, logAdapter35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        java.lang.Class<?> wildcardClass39 = obj37.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        abstractReader36.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass42);
        java.lang.Class<?> wildcardClass46 = abstractReader2.getClass();
        io.swagger.models.Swagger swagger47 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter48 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader49 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger47, logAdapter48);
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Object obj56 = new java.lang.Object();
        java.lang.Class<?> wildcardClass57 = obj56.getClass();
        java.lang.Class<?> wildcardClass58 = obj56.getClass();
        java.lang.Object obj59 = new java.lang.Object();
        java.lang.Class<?> wildcardClass60 = obj59.getClass();
        java.lang.Class<?> wildcardClass61 = obj59.getClass();
        java.lang.Class<?> wildcardClass62 = obj59.getClass();
        java.lang.reflect.Type[] typeArray63 = new java.lang.reflect.Type[] { wildcardClass53, wildcardClass55, wildcardClass58, wildcardClass62 };
        java.util.ArrayList<java.lang.reflect.Type> typeList64 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList64, typeArray63);
        abstractReader49.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList64);
        java.lang.Object obj67 = new java.lang.Object();
        java.lang.Class<?> wildcardClass68 = obj67.getClass();
        java.lang.Class<?> wildcardClass69 = obj67.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Object obj78 = new java.lang.Object();
        java.lang.Class<?> wildcardClass79 = obj78.getClass();
        java.lang.Class<?> wildcardClass80 = obj78.getClass();
        java.lang.Class<?> wildcardClass81 = obj78.getClass();
        java.lang.Class<?> wildcardClass82 = obj78.getClass();
        java.lang.reflect.Type[] typeArray83 = new java.lang.reflect.Type[] { wildcardClass69, wildcardClass73, wildcardClass77, wildcardClass82 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet84 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet84, typeArray83);
        abstractReader49.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet84);
        java.lang.reflect.Type type87 = null;
        abstractReader49.addTypeToSkippedTypes(type87);
        java.lang.Object obj89 = new java.lang.Object();
        java.lang.Class<?> wildcardClass90 = obj89.getClass();
        abstractReader49.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader49.getTypesToSkip();
        java.lang.Class<?> wildcardClass93 = abstractReader49.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass93);
        java.util.Set<java.lang.reflect.Type> typeSet95 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass96 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet97 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(typeSet30);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertNotNull(typeArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertNotNull(wildcardClass80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertNotNull(wildcardClass82);
        org.junit.Assert.assertNotNull(typeArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet92);
        org.junit.Assert.assertNotNull(wildcardClass93);
        org.junit.Assert.assertNotNull(typeSet95);
        org.junit.Assert.assertNotNull(wildcardClass96);
        org.junit.Assert.assertNotNull(typeSet97);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Class<?> wildcardClass9 = obj7.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Class<?> wildcardClass12 = obj10.getClass();
        java.lang.Class<?> wildcardClass13 = obj10.getClass();
        java.lang.Class<?> wildcardClass14 = obj10.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass9, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.util.Set<java.lang.reflect.Type> typeSet23 = abstractReader2.getTypesToSkip();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass27);
        io.swagger.models.Swagger swagger29 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter30 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader31 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger29, logAdapter30);
        java.lang.Object obj32 = new java.lang.Object();
        java.lang.Class<?> wildcardClass33 = obj32.getClass();
        java.lang.Class<?> wildcardClass34 = obj32.getClass();
        java.lang.Class<?> wildcardClass35 = obj32.getClass();
        java.lang.Object obj36 = new java.lang.Object();
        java.lang.Class<?> wildcardClass37 = obj36.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Class<?> wildcardClass40 = obj38.getClass();
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.reflect.Type[] typeArray45 = new java.lang.reflect.Type[] { wildcardClass35, wildcardClass37, wildcardClass40, wildcardClass44 };
        java.util.ArrayList<java.lang.reflect.Type> typeList46 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList46, typeArray45);
        abstractReader31.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList46);
        java.lang.Class<?> wildcardClass50 = typeList46.getClass();
        java.lang.Class<?> wildcardClass51 = typeList46.getClass();
        java.lang.Class<?> wildcardClass52 = typeList46.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(typeSet23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(typeArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        java.lang.Class<?> wildcardClass6 = obj3.getClass();
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.reflect.Type[] typeArray16 = new java.lang.reflect.Type[] { wildcardClass6, wildcardClass8, wildcardClass11, wildcardClass15 };
        java.util.ArrayList<java.lang.reflect.Type> typeList17 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList17, typeArray16);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList17);
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Object obj23 = new java.lang.Object();
        java.lang.Class<?> wildcardClass24 = obj23.getClass();
        java.lang.Class<?> wildcardClass25 = obj23.getClass();
        java.lang.Class<?> wildcardClass26 = obj23.getClass();
        java.lang.Object obj27 = new java.lang.Object();
        java.lang.Class<?> wildcardClass28 = obj27.getClass();
        java.lang.Class<?> wildcardClass29 = obj27.getClass();
        java.lang.Class<?> wildcardClass30 = obj27.getClass();
        java.lang.Object obj31 = new java.lang.Object();
        java.lang.Class<?> wildcardClass32 = obj31.getClass();
        java.lang.Class<?> wildcardClass33 = obj31.getClass();
        java.lang.Class<?> wildcardClass34 = obj31.getClass();
        java.lang.Class<?> wildcardClass35 = obj31.getClass();
        java.lang.reflect.Type[] typeArray36 = new java.lang.reflect.Type[] { wildcardClass22, wildcardClass26, wildcardClass30, wildcardClass35 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet37 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet37, typeArray36);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet37);
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass41);
        io.swagger.models.Swagger swagger43 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter44 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader45 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger43, logAdapter44);
        java.lang.Object obj46 = new java.lang.Object();
        java.lang.Class<?> wildcardClass47 = obj46.getClass();
        java.lang.Class<?> wildcardClass48 = obj46.getClass();
        java.lang.Class<?> wildcardClass49 = obj46.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Object obj52 = new java.lang.Object();
        java.lang.Class<?> wildcardClass53 = obj52.getClass();
        java.lang.Class<?> wildcardClass54 = obj52.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass49, wildcardClass51, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader45.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Object obj63 = new java.lang.Object();
        java.lang.Class<?> wildcardClass64 = obj63.getClass();
        java.lang.Class<?> wildcardClass65 = obj63.getClass();
        java.lang.Object obj66 = new java.lang.Object();
        java.lang.Class<?> wildcardClass67 = obj66.getClass();
        java.lang.Class<?> wildcardClass68 = obj66.getClass();
        java.lang.Class<?> wildcardClass69 = obj66.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Class<?> wildcardClass73 = obj70.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.Class<?> wildcardClass78 = obj74.getClass();
        java.lang.reflect.Type[] typeArray79 = new java.lang.reflect.Type[] { wildcardClass65, wildcardClass69, wildcardClass73, wildcardClass78 };
        java.util.LinkedHashSet<java.lang.reflect.Type> typeSet80 = new java.util.LinkedHashSet<java.lang.reflect.Type>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeSet80, typeArray79);
        abstractReader45.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        abstractReader2.setTypesToSkip((java.util.Set<java.lang.reflect.Type>) typeSet80);
        java.lang.Object obj84 = new java.lang.Object();
        java.lang.Class<?> wildcardClass85 = obj84.getClass();
        java.lang.Class<?> wildcardClass86 = obj84.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass86);
        java.lang.Class<?> wildcardClass88 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass89 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet90 = null;
        abstractReader2.setTypesToSkip(typeSet90);
        java.util.Set<java.lang.reflect.Type> typeSet92 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(typeArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(typeArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(typeArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(wildcardClass89);
        org.junit.Assert.assertNull(typeSet92);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        java.lang.Object obj6 = new java.lang.Object();
        java.lang.Class<?> wildcardClass7 = obj6.getClass();
        java.lang.Class<?> wildcardClass8 = obj6.getClass();
        java.lang.Class<?> wildcardClass9 = obj6.getClass();
        java.lang.Object obj10 = new java.lang.Object();
        java.lang.Class<?> wildcardClass11 = obj10.getClass();
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Object obj15 = new java.lang.Object();
        java.lang.Class<?> wildcardClass16 = obj15.getClass();
        java.lang.Class<?> wildcardClass17 = obj15.getClass();
        java.lang.Class<?> wildcardClass18 = obj15.getClass();
        java.lang.reflect.Type[] typeArray19 = new java.lang.reflect.Type[] { wildcardClass9, wildcardClass11, wildcardClass14, wildcardClass18 };
        java.util.ArrayList<java.lang.reflect.Type> typeList20 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList20, typeArray19);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList20);
        java.lang.Class<?> wildcardClass23 = typeList20.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass23);
        java.lang.Class<?> wildcardClass25 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass26 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet27 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet28 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet29 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger30 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter31 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader32 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger30, logAdapter31);
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass35);
        java.lang.Object obj37 = new java.lang.Object();
        java.lang.Class<?> wildcardClass38 = obj37.getClass();
        abstractReader32.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass38);
        io.swagger.models.Swagger swagger40 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter41 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader42 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger40, logAdapter41);
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.Class<?> wildcardClass54 = obj50.getClass();
        java.lang.Object obj55 = new java.lang.Object();
        java.lang.Class<?> wildcardClass56 = obj55.getClass();
        java.lang.Class<?> wildcardClass57 = obj55.getClass();
        java.lang.Class<?> wildcardClass58 = obj55.getClass();
        java.lang.reflect.Type[] typeArray59 = new java.lang.reflect.Type[] { wildcardClass46, wildcardClass49, wildcardClass54, wildcardClass58 };
        java.util.ArrayList<java.lang.reflect.Type> typeList60 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList60, typeArray59);
        abstractReader42.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        abstractReader32.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        java.lang.Class<?> wildcardClass64 = typeList60.getClass();
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList60);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(typeArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(typeSet27);
        org.junit.Assert.assertNotNull(typeSet28);
        org.junit.Assert.assertNotNull(typeSet29);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(typeArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.Object obj7 = new java.lang.Object();
        java.lang.Class<?> wildcardClass8 = obj7.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass8);
        io.swagger.models.Swagger swagger10 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter11 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader12 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger10, logAdapter11);
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Class<?> wildcardClass16 = obj13.getClass();
        java.lang.Object obj17 = new java.lang.Object();
        java.lang.Class<?> wildcardClass18 = obj17.getClass();
        java.lang.Class<?> wildcardClass19 = obj17.getClass();
        java.lang.Object obj20 = new java.lang.Object();
        java.lang.Class<?> wildcardClass21 = obj20.getClass();
        java.lang.Class<?> wildcardClass22 = obj20.getClass();
        java.lang.Class<?> wildcardClass23 = obj20.getClass();
        java.lang.Class<?> wildcardClass24 = obj20.getClass();
        java.lang.Object obj25 = new java.lang.Object();
        java.lang.Class<?> wildcardClass26 = obj25.getClass();
        java.lang.Class<?> wildcardClass27 = obj25.getClass();
        java.lang.Class<?> wildcardClass28 = obj25.getClass();
        java.lang.reflect.Type[] typeArray29 = new java.lang.reflect.Type[] { wildcardClass16, wildcardClass19, wildcardClass24, wildcardClass28 };
        java.util.ArrayList<java.lang.reflect.Type> typeList30 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList30, typeArray29);
        abstractReader12.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList30);
        java.util.Set<java.lang.reflect.Type> typeSet34 = null;
        abstractReader2.setTypesToSkip(typeSet34);
        java.util.Set<java.lang.reflect.Type> typeSet36 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet37 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        abstractReader40.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass43);
        java.lang.reflect.Type type45 = null;
        abstractReader40.addTypeToSkippedTypes(type45);
        java.lang.Class<?> wildcardClass47 = abstractReader40.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet48 = abstractReader40.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet49 = abstractReader40.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet49);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.lang.Object obj58 = new java.lang.Object();
        java.lang.Class<?> wildcardClass59 = obj58.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass66);
        java.lang.reflect.Type type68 = null;
        abstractReader63.addTypeToSkippedTypes(type68);
        io.swagger.models.Swagger swagger70 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter71 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader72 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger70, logAdapter71);
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        abstractReader72.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass75);
        java.util.Set<java.lang.reflect.Type> typeSet77 = abstractReader72.getTypesToSkip();
        java.lang.Class<?> wildcardClass78 = typeSet77.getClass();
        abstractReader63.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass78);
        io.swagger.models.Swagger swagger82 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter83 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader84 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger82, logAdapter83);
        java.lang.Object obj85 = new java.lang.Object();
        java.lang.Class<?> wildcardClass86 = obj85.getClass();
        java.lang.Class<?> wildcardClass87 = obj85.getClass();
        abstractReader84.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass87);
        java.util.Set<java.lang.reflect.Type> typeSet89 = abstractReader84.getTypesToSkip();
        java.lang.Class<?> wildcardClass90 = abstractReader84.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet91 = abstractReader84.getTypesToSkip();
        abstractReader2.setTypesToSkip(typeSet91);
        java.util.Set<java.lang.reflect.Type> typeSet93 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass94 = abstractReader2.getClass();
        java.lang.Class<?> wildcardClass95 = abstractReader2.getClass();
        java.util.Set<java.lang.reflect.Type> typeSet96 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass97 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(typeArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(typeSet36);
        org.junit.Assert.assertNull(typeSet37);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(typeSet48);
        org.junit.Assert.assertNotNull(typeSet49);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(typeSet77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(wildcardClass87);
        org.junit.Assert.assertNotNull(typeSet89);
        org.junit.Assert.assertNotNull(wildcardClass90);
        org.junit.Assert.assertNotNull(typeSet91);
        org.junit.Assert.assertNotNull(typeSet93);
        org.junit.Assert.assertNotNull(wildcardClass94);
        org.junit.Assert.assertNotNull(wildcardClass95);
        org.junit.Assert.assertNotNull(typeSet96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        io.swagger.models.Swagger swagger3 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter4 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader5 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger3, logAdapter4);
        io.swagger.models.Swagger swagger6 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter7 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader8 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger6, logAdapter7);
        java.lang.Object obj9 = new java.lang.Object();
        java.lang.Class<?> wildcardClass10 = obj9.getClass();
        java.lang.Class<?> wildcardClass11 = obj9.getClass();
        java.lang.Class<?> wildcardClass12 = obj9.getClass();
        java.lang.Object obj13 = new java.lang.Object();
        java.lang.Class<?> wildcardClass14 = obj13.getClass();
        java.lang.Class<?> wildcardClass15 = obj13.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Class<?> wildcardClass19 = obj16.getClass();
        java.lang.Class<?> wildcardClass20 = obj16.getClass();
        java.lang.Object obj21 = new java.lang.Object();
        java.lang.Class<?> wildcardClass22 = obj21.getClass();
        java.lang.Class<?> wildcardClass23 = obj21.getClass();
        java.lang.Class<?> wildcardClass24 = obj21.getClass();
        java.lang.reflect.Type[] typeArray25 = new java.lang.reflect.Type[] { wildcardClass12, wildcardClass15, wildcardClass20, wildcardClass24 };
        java.util.ArrayList<java.lang.reflect.Type> typeList26 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList26, typeArray25);
        abstractReader8.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader5.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList26);
        io.swagger.models.Swagger swagger31 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter32 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader33 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger31, logAdapter32);
        java.lang.Object obj34 = new java.lang.Object();
        java.lang.Class<?> wildcardClass35 = obj34.getClass();
        java.lang.Class<?> wildcardClass36 = obj34.getClass();
        java.lang.Class<?> wildcardClass37 = obj34.getClass();
        java.lang.Object obj38 = new java.lang.Object();
        java.lang.Class<?> wildcardClass39 = obj38.getClass();
        java.lang.Object obj40 = new java.lang.Object();
        java.lang.Class<?> wildcardClass41 = obj40.getClass();
        java.lang.Class<?> wildcardClass42 = obj40.getClass();
        java.lang.Object obj43 = new java.lang.Object();
        java.lang.Class<?> wildcardClass44 = obj43.getClass();
        java.lang.Class<?> wildcardClass45 = obj43.getClass();
        java.lang.Class<?> wildcardClass46 = obj43.getClass();
        java.lang.reflect.Type[] typeArray47 = new java.lang.reflect.Type[] { wildcardClass37, wildcardClass39, wildcardClass42, wildcardClass46 };
        java.util.ArrayList<java.lang.reflect.Type> typeList48 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList48, typeArray47);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList48);
        io.swagger.models.Swagger swagger51 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter52 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader53 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger51, logAdapter52);
        java.lang.Object obj54 = new java.lang.Object();
        java.lang.Class<?> wildcardClass55 = obj54.getClass();
        java.lang.Class<?> wildcardClass56 = obj54.getClass();
        abstractReader53.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass56);
        java.util.Set<java.lang.reflect.Type> typeSet58 = abstractReader53.getTypesToSkip();
        java.lang.Class<?> wildcardClass59 = typeSet58.getClass();
        abstractReader33.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass59);
        io.swagger.models.Swagger swagger61 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter62 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader63 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger61, logAdapter62);
        java.lang.Object obj64 = new java.lang.Object();
        java.lang.Class<?> wildcardClass65 = obj64.getClass();
        java.lang.Class<?> wildcardClass66 = obj64.getClass();
        java.lang.Class<?> wildcardClass67 = obj64.getClass();
        java.lang.Object obj68 = new java.lang.Object();
        java.lang.Class<?> wildcardClass69 = obj68.getClass();
        java.lang.Object obj70 = new java.lang.Object();
        java.lang.Class<?> wildcardClass71 = obj70.getClass();
        java.lang.Class<?> wildcardClass72 = obj70.getClass();
        java.lang.Object obj73 = new java.lang.Object();
        java.lang.Class<?> wildcardClass74 = obj73.getClass();
        java.lang.Class<?> wildcardClass75 = obj73.getClass();
        java.lang.Class<?> wildcardClass76 = obj73.getClass();
        java.lang.reflect.Type[] typeArray77 = new java.lang.reflect.Type[] { wildcardClass67, wildcardClass69, wildcardClass72, wildcardClass76 };
        java.util.ArrayList<java.lang.reflect.Type> typeList78 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList78, typeArray77);
        abstractReader63.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader33.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList78);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        java.lang.Class<?> wildcardClass84 = abstractReader2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(typeArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(typeArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(typeSet58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(typeArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        io.swagger.models.Swagger swagger0 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter1 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader2 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger0, logAdapter1);
        java.lang.Object obj3 = new java.lang.Object();
        java.lang.Class<?> wildcardClass4 = obj3.getClass();
        java.lang.Class<?> wildcardClass5 = obj3.getClass();
        abstractReader2.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass5);
        java.lang.reflect.Type type7 = null;
        abstractReader2.addTypeToSkippedTypes(type7);
        io.swagger.models.Swagger swagger9 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter10 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader11 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger9, logAdapter10);
        java.lang.Object obj12 = new java.lang.Object();
        java.lang.Class<?> wildcardClass13 = obj12.getClass();
        java.lang.Class<?> wildcardClass14 = obj12.getClass();
        java.lang.Class<?> wildcardClass15 = obj12.getClass();
        java.lang.Object obj16 = new java.lang.Object();
        java.lang.Class<?> wildcardClass17 = obj16.getClass();
        java.lang.Class<?> wildcardClass18 = obj16.getClass();
        java.lang.Object obj19 = new java.lang.Object();
        java.lang.Class<?> wildcardClass20 = obj19.getClass();
        java.lang.Class<?> wildcardClass21 = obj19.getClass();
        java.lang.Class<?> wildcardClass22 = obj19.getClass();
        java.lang.Class<?> wildcardClass23 = obj19.getClass();
        java.lang.Object obj24 = new java.lang.Object();
        java.lang.Class<?> wildcardClass25 = obj24.getClass();
        java.lang.Class<?> wildcardClass26 = obj24.getClass();
        java.lang.Class<?> wildcardClass27 = obj24.getClass();
        java.lang.reflect.Type[] typeArray28 = new java.lang.reflect.Type[] { wildcardClass15, wildcardClass18, wildcardClass23, wildcardClass27 };
        java.util.ArrayList<java.lang.reflect.Type> typeList29 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList29, typeArray28);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList29);
        java.util.Set<java.lang.reflect.Type> typeSet32 = abstractReader11.getTypesToSkip();
        java.lang.Object obj33 = new java.lang.Object();
        java.lang.Class<?> wildcardClass34 = obj33.getClass();
        java.lang.Class<?> wildcardClass35 = obj33.getClass();
        java.lang.Class<?> wildcardClass36 = obj33.getClass();
        abstractReader11.addTypeToSkippedTypes((java.lang.reflect.Type) wildcardClass36);
        io.swagger.models.Swagger swagger38 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter39 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader40 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger38, logAdapter39);
        java.lang.Object obj41 = new java.lang.Object();
        java.lang.Class<?> wildcardClass42 = obj41.getClass();
        java.lang.Class<?> wildcardClass43 = obj41.getClass();
        java.lang.Class<?> wildcardClass44 = obj41.getClass();
        java.lang.Object obj45 = new java.lang.Object();
        java.lang.Class<?> wildcardClass46 = obj45.getClass();
        java.lang.Object obj47 = new java.lang.Object();
        java.lang.Class<?> wildcardClass48 = obj47.getClass();
        java.lang.Class<?> wildcardClass49 = obj47.getClass();
        java.lang.Object obj50 = new java.lang.Object();
        java.lang.Class<?> wildcardClass51 = obj50.getClass();
        java.lang.Class<?> wildcardClass52 = obj50.getClass();
        java.lang.Class<?> wildcardClass53 = obj50.getClass();
        java.lang.reflect.Type[] typeArray54 = new java.lang.reflect.Type[] { wildcardClass44, wildcardClass46, wildcardClass49, wildcardClass53 };
        java.util.ArrayList<java.lang.reflect.Type> typeList55 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList55, typeArray54);
        abstractReader40.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader11.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList55);
        java.util.Set<java.lang.reflect.Type> typeSet60 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet61 = abstractReader2.getTypesToSkip();
        io.swagger.models.Swagger swagger62 = null;
        com.github.kongchen.swagger.docgen.LogAdapter logAdapter63 = null;
        com.github.kongchen.swagger.docgen.reader.AbstractReader abstractReader64 = new com.github.kongchen.swagger.docgen.reader.AbstractReader(swagger62, logAdapter63);
        java.lang.Object obj65 = new java.lang.Object();
        java.lang.Class<?> wildcardClass66 = obj65.getClass();
        java.lang.Class<?> wildcardClass67 = obj65.getClass();
        java.lang.Class<?> wildcardClass68 = obj65.getClass();
        java.lang.Object obj69 = new java.lang.Object();
        java.lang.Class<?> wildcardClass70 = obj69.getClass();
        java.lang.Object obj71 = new java.lang.Object();
        java.lang.Class<?> wildcardClass72 = obj71.getClass();
        java.lang.Class<?> wildcardClass73 = obj71.getClass();
        java.lang.Object obj74 = new java.lang.Object();
        java.lang.Class<?> wildcardClass75 = obj74.getClass();
        java.lang.Class<?> wildcardClass76 = obj74.getClass();
        java.lang.Class<?> wildcardClass77 = obj74.getClass();
        java.lang.reflect.Type[] typeArray78 = new java.lang.reflect.Type[] { wildcardClass68, wildcardClass70, wildcardClass73, wildcardClass77 };
        java.util.ArrayList<java.lang.reflect.Type> typeList79 = new java.util.ArrayList<java.lang.reflect.Type>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.reflect.Type>) typeList79, typeArray78);
        abstractReader64.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        abstractReader2.setTypesToSkip((java.util.List<java.lang.reflect.Type>) typeList79);
        java.util.Set<java.lang.reflect.Type> typeSet83 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet84 = abstractReader2.getTypesToSkip();
        java.util.Set<java.lang.reflect.Type> typeSet85 = abstractReader2.getTypesToSkip();
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(typeArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(typeSet32);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertNotNull(typeArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(typeSet60);
        org.junit.Assert.assertNotNull(typeSet61);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertNotNull(typeArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(typeSet83);
        org.junit.Assert.assertNotNull(typeSet84);
        org.junit.Assert.assertNotNull(typeSet85);
    }
}


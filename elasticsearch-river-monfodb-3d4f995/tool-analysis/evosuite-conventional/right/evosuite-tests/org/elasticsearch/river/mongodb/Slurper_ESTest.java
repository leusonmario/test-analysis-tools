/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 16:49:17 GMT 2019
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.BasicDBObject;
import com.mongodb.ServerAddress;
import java.util.LinkedList;
import java.util.List;
import org.elasticsearch.client.Client;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.river.RiverSettings;
import org.elasticsearch.river.mongodb.MongoDBRiverDefinition;
import org.elasticsearch.river.mongodb.SharedContext;
import org.elasticsearch.river.mongodb.Slurper;
import org.elasticsearch.script.ScriptService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Slurper_ESTest extends Slurper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      LinkedList<ServerAddress> linkedList0 = new LinkedList<ServerAddress>();
      Slurper slurper0 = null;
      try {
        slurper0 = new Slurper(linkedList0, (MongoDBRiverDefinition) null, (SharedContext) null, (Client) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      BasicDBObject basicDBObject0 = MongoDBRiverDefinition.convertToBasicDBObject("");
      RiverSettings riverSettings0 = new RiverSettings(settings0, basicDBObject0);
      MongoDBRiverDefinition mongoDBRiverDefinition0 = MongoDBRiverDefinition.parseSettings("", "", riverSettings0, (ScriptService) null);
      Slurper slurper0 = null;
      try {
        slurper0 = new Slurper((List<ServerAddress>) null, mongoDBRiverDefinition0, (SharedContext) null, (Client) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // serverAddresses can not be null
         //
         verifyException("com.mongodb.MongoAuthority", e);
      }
  }
}

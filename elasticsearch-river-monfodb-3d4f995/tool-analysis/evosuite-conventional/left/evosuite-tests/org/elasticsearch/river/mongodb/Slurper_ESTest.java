/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 15:49:29 GMT 2019
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.mongodb.ServerAddress;
import java.util.concurrent.LinkedBlockingDeque;
import org.elasticsearch.client.Client;
import org.elasticsearch.common.collect.ImmutableList;
import org.elasticsearch.river.mongodb.MongoDBRiver;
import org.elasticsearch.river.mongodb.MongoDBRiverDefinition;
import org.elasticsearch.river.mongodb.SharedContext;
import org.elasticsearch.river.mongodb.Slurper;
import org.elasticsearch.river.mongodb.Status;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Slurper_ESTest extends Slurper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImmutableList<ServerAddress> immutableList0 = ImmutableList.of();
      LinkedBlockingDeque<MongoDBRiver.QueueEntry> linkedBlockingDeque0 = new LinkedBlockingDeque<MongoDBRiver.QueueEntry>();
      Status status0 = Status.RIVER_STALE;
      SharedContext sharedContext0 = new SharedContext(linkedBlockingDeque0, status0);
      Slurper slurper0 = null;
      try {
        slurper0 = new Slurper(immutableList0, (MongoDBRiverDefinition) null, sharedContext0, (Client) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.river.mongodb.Slurper", e);
      }
  }
}

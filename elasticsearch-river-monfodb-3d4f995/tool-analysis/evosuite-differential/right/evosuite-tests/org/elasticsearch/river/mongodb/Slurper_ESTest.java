/*
 * This file was automatically generated by EvoSuite
 * Tue Aug 13 13:27:42 GMT 2019
 */

package org.elasticsearch.river.mongodb;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.TreeSet;
import org.elasticsearch.common.collect.ImmutableList;
import org.elasticsearch.common.collect.ImmutableSortedMap;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.env.Environment;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.river.RiverSettings;
import org.elasticsearch.script.ScriptEngineService;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Slurper_ESTest extends Slurper_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ImmutableList.of();
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      ImmutableSortedMap<String, Object> immutableSortedMap0 = ImmutableSortedMap.of("~", (Object) "~");
      ImmutableSortedMap<String, Object> immutableSortedMap1 = immutableSortedMap0.headMap("addToStream - isImportAllCollections - Operation.DROP_DATABASE, currentTimestamp [{}], data [{}], collection [{}]");
      RiverSettings riverSettings0 = new RiverSettings(settings0, immutableSortedMap1);
      Environment environment0 = new Environment(settings0);
      TreeSet<ScriptEngineService> treeSet0 = new TreeSet<ScriptEngineService>();
      ScriptEngineService scriptEngineService0 = mock(ScriptEngineService.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        treeSet0.add(scriptEngineService0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Tue Jun 18 15:45:11 GMT 2019
 */

package org.apache.storm.kafka;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.concurrent.atomic.AtomicBoolean;
import org.apache.storm.generated.StormTopology;
import org.apache.storm.kafka.Broker;
import org.apache.storm.kafka.KafkaSpout;
import org.apache.storm.kafka.Partition;
import org.apache.storm.kafka.PartitionManager;
import org.apache.storm.kafka.SpoutConfig;
import org.apache.storm.metric.api.IMetric;
import org.apache.storm.spout.ISpoutOutputCollector;
import org.apache.storm.spout.SpoutOutputCollector;
import org.apache.storm.task.TopologyContext;
import org.apache.storm.topology.OutputFieldsGetter;
import org.apache.storm.tuple.Fields;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KafkaSpout_ESTest extends KafkaSpout_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      HashMap<Object, PartitionManager> hashMap0 = new HashMap<Object, PartitionManager>();
      SpoutOutputCollector spoutOutputCollector0 = new SpoutOutputCollector((ISpoutOutputCollector) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.open(hashMap0, (TopologyContext) null, spoutOutputCollector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      HashMap<Byte, Partition> hashMap0 = new HashMap<Byte, Partition>();
      StormTopology stormTopology0 = new StormTopology();
      HashMap<Long, Object> hashMap1 = new HashMap<Long, Object>();
      HashMap<Integer, String> hashMap2 = new HashMap<Integer, String>();
      HashMap<String, Map<String, Fields>> hashMap3 = new HashMap<String, Map<String, Fields>>();
      Integer integer0 = new Integer(1934);
      HashMap<Integer, Map<Integer, Map<String, IMetric>>> hashMap4 = new HashMap<Integer, Map<Integer, Map<String, IMetric>>>();
      TopologyContext topologyContext0 = new TopologyContext(stormTopology0, hashMap1, hashMap2, (Map<String, List<Integer>>) null, hashMap3, "LGQ|rf{sBmG]GS_//|o", "6]_O", "KA$?~(jIP=u/T>bo", integer0, integer0, (List<Integer>) null, (Map<String, Object>) null, (Map<String, Object>) null, (Map<String, Object>) null, hashMap4, (AtomicBoolean) null);
      SpoutOutputCollector spoutOutputCollector0 = kafkaSpout0._collector;
      // Undeclared exception!
      try { 
        kafkaSpout0.open(hashMap0, topologyContext0, spoutOutputCollector0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.nextTuple();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.fail((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      Object object0 = new Object();
      // Undeclared exception!
      try { 
        kafkaSpout0.fail(object0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.Object cannot be cast to org.apache.storm.kafka.PartitionManager$KafkaMessageId
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      OutputFieldsGetter outputFieldsGetter0 = new OutputFieldsGetter();
      // Undeclared exception!
      try { 
        kafkaSpout0.declareOutputFields(outputFieldsGetter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.ack((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      Broker broker0 = new Broker("nE}a\"^&&K'%", 0);
      Partition partition0 = new Partition(broker0, "nE}a\"^&&K'%", (-481));
      // Undeclared exception!
      try { 
        kafkaSpout0.ack(partition0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.apache.storm.kafka.Partition cannot be cast to org.apache.storm.kafka.PartitionManager$KafkaMessageId
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.getComponentConfiguration();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.deactivate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      KafkaSpout kafkaSpout0 = new KafkaSpout((SpoutConfig) null);
      // Undeclared exception!
      try { 
        kafkaSpout0.close();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.KafkaSpout", e);
      }
  }
}

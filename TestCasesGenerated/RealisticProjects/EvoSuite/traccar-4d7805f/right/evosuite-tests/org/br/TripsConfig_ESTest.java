/*
 * This file was automatically generated by EvoSuite
 * Wed Jun 19 17:21:21 GMT 2019
 */

package org.br;

import org.junit.Test;
import static org.junit.Assert.*;
import org.br.TripsConfig;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class TripsConfig_ESTest extends TripsConfig_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(0.0, (-1387L), 0L, true, 0L, true);
      boolean boolean0 = tripsConfig0.getUseIgnition();
      assertTrue(tripsConfig0.getGreedyParking());
      assertEquals(0L, tripsConfig0.getMinimalParkingDuration());
      assertEquals((-1387L), tripsConfig0.getMinimalTripDuration());
      assertEquals(0.0, tripsConfig0.getMinimalTripDistance(), 0.01);
      assertTrue(boolean0);
      assertEquals(0L, tripsConfig0.getMinimalNoDataDuration());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(332.10344035, (-1142L), (-1142L), false, (-1142L), true);
      tripsConfig0.setMinimalTripDuration(557L);
      long long0 = tripsConfig0.getMinimalTripDuration();
      assertEquals(557L, long0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(0.0, (-1387L), 0L, true, 0L, true);
      long long0 = tripsConfig0.getMinimalTripDuration();
      assertEquals(0.0, tripsConfig0.getMinimalTripDistance(), 0.01);
      assertTrue(tripsConfig0.getUseIgnition());
      assertEquals(0L, tripsConfig0.getMinimalParkingDuration());
      assertEquals((-1387L), long0);
      assertEquals(0L, tripsConfig0.getMinimalNoDataDuration());
      assertTrue(tripsConfig0.getGreedyParking());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(667.94073, (-304L), (-304L), false, 592L, false);
      double double0 = tripsConfig0.getMinimalTripDistance();
      assertEquals(592L, tripsConfig0.getMinimalNoDataDuration());
      assertEquals((-304L), tripsConfig0.getMinimalTripDuration());
      assertEquals((-304L), tripsConfig0.getMinimalParkingDuration());
      assertEquals(667.94073, double0, 0.01);
      assertFalse(tripsConfig0.getGreedyParking());
      assertFalse(tripsConfig0.getUseIgnition());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      tripsConfig0.setMinimalTripDistance((-2466.0));
      double double0 = tripsConfig0.getMinimalTripDistance();
      assertEquals((-2466.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      tripsConfig0.setMinimalParkingDuration(1223L);
      long long0 = tripsConfig0.getMinimalParkingDuration();
      assertEquals(1223L, long0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      tripsConfig0.setMinimalParkingDuration((-1509L));
      long long0 = tripsConfig0.getMinimalParkingDuration();
      assertEquals((-1509L), long0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(332.10344035, (-1142L), (-1142L), false, (-1142L), true);
      long long0 = tripsConfig0.getMinimalNoDataDuration();
      assertEquals(332.10344035, tripsConfig0.getMinimalTripDistance(), 0.01);
      assertEquals((-1142L), long0);
      assertFalse(tripsConfig0.getGreedyParking());
      assertTrue(tripsConfig0.getUseIgnition());
      assertEquals((-1142L), tripsConfig0.getMinimalTripDuration());
      assertEquals((-1142L), tripsConfig0.getMinimalParkingDuration());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(4435.06351, 0L, 2907L, false, 2907L, false);
      boolean boolean0 = tripsConfig0.getGreedyParking();
      assertEquals(0L, tripsConfig0.getMinimalTripDuration());
      assertFalse(tripsConfig0.getUseIgnition());
      assertFalse(boolean0);
      assertEquals(2907L, tripsConfig0.getMinimalNoDataDuration());
      assertEquals(4435.06351, tripsConfig0.getMinimalTripDistance(), 0.01);
      assertEquals(2907L, tripsConfig0.getMinimalParkingDuration());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      long long0 = tripsConfig0.getMinimalNoDataDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      tripsConfig0.setUseIgnition(true);
      assertTrue(tripsConfig0.getUseIgnition());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig(0.0, 0L, 0L, false, 0L, true);
      tripsConfig0.setMinimalNoDataDuration(3045L);
      long long0 = tripsConfig0.getMinimalNoDataDuration();
      assertEquals(3045L, long0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      long long0 = tripsConfig0.getMinimalParkingDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      tripsConfig0.setGreedyParking(true);
      boolean boolean0 = tripsConfig0.getGreedyParking();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      long long0 = tripsConfig0.getMinimalTripDuration();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      double double0 = tripsConfig0.getMinimalTripDistance();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      TripsConfig tripsConfig0 = new TripsConfig();
      boolean boolean0 = tripsConfig0.getUseIgnition();
      assertFalse(boolean0);
  }
}

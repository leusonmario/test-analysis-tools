/*
 * This file was automatically generated by EvoSuite
 * Fri Jul 05 12:43:44 GMT 2019
 */

package org.traccar.protocol;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import io.netty.channel.epoll.EpollServerSocketChannel;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.traccar.protocol.AquilaProtocol;
import org.traccar.protocol.AquilaProtocolDecoder;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AquilaProtocolDecoder_ESTest extends AquilaProtocolDecoder_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AquilaProtocol aquilaProtocol0 = new AquilaProtocol();
      AquilaProtocolDecoder aquilaProtocolDecoder0 = new AquilaProtocolDecoder(aquilaProtocol0);
      EpollServerSocketChannel epollServerSocketChannel0 = null;
      try {
        epollServerSocketChannel0 = new EpollServerSocketChannel();
       //  fail("Expecting exception: NoClassDefFoundError");
       // Unstable assertion
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class io.netty.channel.epoll.LinuxSocket
         //
         verifyException("io.netty.channel.epoll.EpollServerSocketChannel", e);
         assertTrue(e.getMessage().equals("Could not initialize class io.netty.channel.epoll.LinuxSocket"));   
      }
  }
}

/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Aug 01 18:50:24 GMT 2019
 */

package fitnesse.testsystems.slim.tables;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class SlimTableFactory_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "fitnesse.testsystems.slim.tables.SlimTableFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/paulo/Documentos/PHD/Testes2.0/test-analysis-tools/TestCasesGenerated/RealProjects/EvoSuite/fitnesse-4d9ba9d/left"); 
    java.lang.System.setProperty("user.home", "/home/paulo"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "paulo"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(SlimTableFactory_ESTest_scaffolding.class.getClassLoader() ,
      "fitnesse.slim.instructions.ImportInstruction",
      "org.htmlparser.tags.TableTag",
      "org.htmlparser.NodeFactory",
      "org.htmlparser.lexer.PageIndex",
      "org.htmlparser.util.EncodingChangeException",
      "fitnesse.slim.instructions.CallAndAssignInstruction",
      "fitnesse.testsystems.slim.HtmlTable$Row",
      "fitnesse.testsystems.slim.tables.QueryTable$QueryResults",
      "fitnesse.testsystems.slim.tables.SubsetQueryTable",
      "fitnesse.testsystems.Instruction",
      "fitnesse.testsystems.slim.tables.ScenarioTable",
      "fitnesse.testsystems.slim.CustomComparatorRegistry",
      "fitnesse.testsystems.slim.tables.ImportTable",
      "org.htmlparser.nodes.TagNode",
      "fitnesse.slim.instructions.Instruction$1",
      "org.htmlparser.util.sort.Ordered",
      "org.htmlparser.http.ConnectionManager",
      "org.htmlparser.filters.TagNameFilter",
      "fitnesse.testsystems.slim.tables.DecisionTable",
      "org.htmlparser.util.ParserException",
      "fitnesse.testsystems.slim.tables.SlimTableFactory",
      "fitnesse.testsystems.slim.tables.ScriptTable",
      "fitnesse.slim.instructions.InstructionResult",
      "fitnesse.testsystems.slim.tables.LibraryTable",
      "org.htmlparser.lexer.Page",
      "fitnesse.testsystems.slim.tables.SlimTable$SymbolAssignmentExpectation",
      "fitnesse.testsystems.slim.tables.SlimTable$RejectedValueExpectation",
      "org.htmlparser.tags.TableRow",
      "fitnesse.slim.instructions.InstructionExecutor",
      "fitnesse.testsystems.slim.tables.SlimAssertion",
      "org.htmlparser.util.NodeIterator",
      "fitnesse.testsystems.slim.tables.QueryTable",
      "fitnesse.testsystems.slim.SlimTestContext",
      "org.htmlparser.scanners.StyleScanner",
      "fitnesse.testsystems.slim.results.SlimExceptionResult",
      "fitnesse.testsystems.slim.SlimTestContextImpl",
      "org.htmlparser.Attribute",
      "fitnesse.testsystems.slim.tables.SlimTable$FullExpansionSymbolReplacer",
      "fitnesse.slim.instructions.MakeInstruction",
      "org.htmlparser.tags.FrameTag",
      "fitnesse.testsystems.slim.tables.TableTable",
      "fitnesse.testsystems.slim.tables.SyntaxError",
      "fitnesse.testsystems.slim.Table$CellContentSubstitution",
      "fitnesse.slim.instructions.SystemExitSecurityManager",
      "fitnesse.testsystems.slim.tables.SlimTable$ConstructionExpectation",
      "org.htmlparser.util.SimpleNodeIterator",
      "fitnesse.testsystems.slim.tables.SlimTable$Comparator",
      "fitnesse.testsystems.slim.tables.ScenarioTable$ScenarioTestContext",
      "org.htmlparser.util.ChainedException",
      "org.htmlparser.Tag",
      "org.htmlparser.nodes.AbstractNode",
      "org.htmlparser.Text",
      "org.htmlparser.http.Cookie",
      "fitnesse.testsystems.Expectation",
      "org.htmlparser.lexer.Lexer",
      "org.htmlparser.lexer.Stream",
      "util.ListUtility",
      "org.htmlparser.lexer.StringSource",
      "fitnesse.slim.instructions.InstructionResult$Ok",
      "fitnesse.testsystems.Assertion",
      "fitnesse.testsystems.slim.tables.SlimTable$SilentReturnExpectation",
      "fitnesse.testsystems.slim.tables.SlimTable$RowExpectation",
      "fitnesse.testsystems.TestResult",
      "org.htmlparser.lexer.InputStreamSource",
      "org.htmlparser.tags.FrameSetTag",
      "fitnesse.slim.instructions.InstructionResult$Void",
      "fitnesse.testsystems.slim.CustomComparator",
      "org.htmlparser.scanners.Scanner",
      "org.htmlparser.visitors.LinkFindingVisitor",
      "fitnesse.slim.instructions.Instruction",
      "org.htmlparser.http.ConnectionMonitor",
      "fitnesse.testsystems.slim.results.SlimTestResult",
      "fitnesse.testsystems.ExceptionResult",
      "fitnesse.testsystems.slim.tables.SlimTable$SymbolReplacer",
      "fitnesse.slim.instructions.SystemExitSecurityManager$SystemExitException",
      "fitnesse.testsystems.slim.tables.SlimErrorTable",
      "org.htmlparser.tags.TableHeader",
      "org.htmlparser.Node",
      "org.htmlparser.lexer.Cursor",
      "fitnesse.testsystems.slim.Table",
      "fitnesse.testsystems.slim.tables.DynamicDecisionTable",
      "org.htmlparser.nodes.RemarkNode",
      "fitnesse.testsystems.slim.HtmlTable",
      "org.htmlparser.scanners.CompositeTagScanner",
      "org.htmlparser.nodes.TextNode",
      "fitnesse.testsystems.slim.tables.SlimTable",
      "fitnesse.testsystems.slim.tables.SlimTable$VoidReturnExpectation",
      "fitnesse.testsystems.slim.tables.SlimExpectation$1",
      "fitnesse.slim.instructions.InstructionResult$Error",
      "fitnesse.testsystems.slim.HtmlTable$Cell",
      "org.htmlparser.visitors.NodeVisitor",
      "org.htmlparser.util.sort.Sortable",
      "org.htmlparser.tags.CompositeTag",
      "fitnesse.slim.SlimException",
      "org.htmlparser.util.NodeList$1",
      "org.htmlparser.NodeFilter",
      "org.htmlparser.scanners.TagScanner",
      "fitnesse.testsystems.TestSummary$1",
      "fitnesse.testsystems.slim.tables.OrderedQueryTable",
      "fitnesse.testsystems.TestSummary",
      "org.htmlparser.util.NodeList",
      "fitnesse.testsystems.slim.tables.SlimTable$ReturnedValueExpectation",
      "fitnesse.testsystems.slim.tables.SlimExpectation",
      "org.htmlparser.visitors.TagFindingVisitor",
      "org.htmlparser.lexer.Source",
      "org.htmlparser.filters.IsEqualFilter",
      "org.htmlparser.filters.HasAttributeFilter",
      "fitnesse.slim.instructions.CallInstruction",
      "org.htmlparser.Remark",
      "fitnesse.testsystems.ExecutionResult",
      "fitnesse.testsystems.TableCell",
      "fitnesse.testsystems.slim.tables.SlimTable$Disgracer",
      "org.htmlparser.tags.TableColumn"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(SlimTableFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "fitnesse.testsystems.slim.tables.SlimTableFactory",
      "org.htmlparser.nodes.AbstractNode",
      "org.htmlparser.scanners.TagScanner",
      "org.htmlparser.nodes.TagNode",
      "org.htmlparser.scanners.CompositeTagScanner",
      "org.htmlparser.tags.CompositeTag",
      "org.htmlparser.tags.TableTag",
      "org.htmlparser.Attribute",
      "fitnesse.testsystems.slim.HtmlTable",
      "org.htmlparser.util.NodeList",
      "org.htmlparser.util.NodeList$1",
      "fitnesse.testsystems.slim.SlimTestContextImpl",
      "fitnesse.testsystems.TestSummary",
      "fitnesse.testsystems.TestSummary$1",
      "fitnesse.testsystems.slim.tables.SlimTable",
      "fitnesse.testsystems.slim.tables.ScenarioTable",
      "org.htmlparser.http.ConnectionManager",
      "org.htmlparser.lexer.Page",
      "org.htmlparser.lexer.Source",
      "org.htmlparser.lexer.StringSource",
      "org.htmlparser.lexer.PageIndex",
      "fitnesse.testsystems.slim.tables.SlimTable$Disgracer",
      "org.htmlparser.lexer.Lexer",
      "org.htmlparser.lexer.Cursor",
      "fitnesse.testsystems.slim.tables.DecisionTable",
      "fitnesse.testsystems.slim.tables.QueryTable",
      "fitnesse.testsystems.slim.tables.SubsetQueryTable",
      "org.htmlparser.tags.TableRow",
      "fitnesse.testsystems.slim.tables.LibraryTable",
      "fitnesse.testsystems.slim.tables.ImportTable",
      "fitnesse.testsystems.slim.tables.ScriptTable",
      "fitnesse.testsystems.slim.tables.DynamicDecisionTable",
      "fitnesse.testsystems.slim.tables.SlimErrorTable",
      "fitnesse.testsystems.slim.tables.OrderedQueryTable",
      "fitnesse.testsystems.slim.tables.TableTable",
      "org.htmlparser.nodes.TextNode",
      "org.htmlparser.tags.FrameSetTag",
      "org.htmlparser.filters.IsEqualFilter",
      "org.htmlparser.visitors.NodeVisitor",
      "org.htmlparser.visitors.TagFindingVisitor",
      "org.htmlparser.filters.TagNameFilter",
      "org.htmlparser.filters.HasAttributeFilter",
      "org.htmlparser.visitors.LinkFindingVisitor",
      "org.htmlparser.nodes.RemarkNode",
      "util.ListUtility",
      "org.htmlparser.scanners.StyleScanner"
    );
  }
}

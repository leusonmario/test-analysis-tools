/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 02 18:35:46 GMT 2019
 */

package org.antlr.v4.codegen.target;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import java.util.Set;
import org.antlr.runtime.ANTLRInputStream;
import org.antlr.runtime.CommonToken;
import org.antlr.runtime.RecognizerSharedState;
import org.antlr.runtime.Token;
import org.antlr.v4.codegen.CodeGenerator;
import org.antlr.v4.codegen.target.Python3Target;
import org.antlr.v4.parse.ANTLRLexer;
import org.antlr.v4.tool.ast.ActionAST;
import org.antlr.v4.tool.ast.GrammarAST;
import org.antlr.v4.tool.ast.RuleAST;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.stringtemplate.v4.STGroup;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Python3Target_ESTest extends Python3Target_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Python3Target.PythonStringRenderer python3Target_PythonStringRenderer0 = new Python3Target.PythonStringRenderer();
      Locale locale0 = Locale.CANADA_FRENCH;
      String string0 = python3Target_PythonStringRenderer0.toString((Object) null, "\u0002\"u#Bxt^", locale0);
      assertEquals("\u0002\"u#Bxt^", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      STGroup sTGroup0 = python3Target0.loadTemplates();
      assertFalse(STGroup.verbose);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      ANTLRInputStream aNTLRInputStream0 = new ANTLRInputStream();
      RecognizerSharedState recognizerSharedState0 = new RecognizerSharedState();
      ANTLRLexer aNTLRLexer0 = new ANTLRLexer(aNTLRInputStream0, recognizerSharedState0);
      Token token0 = aNTLRLexer0.emit();
      RuleAST ruleAST0 = new RuleAST(token0);
      // Undeclared exception!
      try { 
        python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(ruleAST0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      // Undeclared exception!
      try { 
        python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode((GrammarAST) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.antlr.v4.codegen.target.Python3Target", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      python3Target0.getBadWords();
      Set<String> set0 = python3Target0.getBadWords();
      assertEquals(84, set0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      String string0 = python3Target0.getVersion();
      assertEquals("4.5.2.1", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      python3Target0.addBadWords();
      RuleAST ruleAST0 = new RuleAST(29);
      boolean boolean0 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(ruleAST0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      CommonToken commonToken0 = new CommonToken(161);
      commonToken0.setText("property");
      ActionAST actionAST0 = new ActionAST(161, commonToken0);
      boolean boolean0 = python3Target0.visibleGrammarSymbolCausesIssueInGeneratedCode(actionAST0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      boolean boolean0 = python3Target0.wantsBaseVisitor();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      int int0 = python3Target0.getSerializedATNSegmentLimit();
      assertEquals(29, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      boolean boolean0 = python3Target0.supportsOverloadedMethods();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Python3Target python3Target0 = new Python3Target((CodeGenerator) null);
      boolean boolean0 = python3Target0.wantsBaseListener();
      assertFalse(boolean0);
  }
}

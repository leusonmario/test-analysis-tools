/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Tue Jul 09 17:53:39 GMT 2019
 */

package com.zaxxer.hikari.metrics;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class CodaHaleMetricsTracker_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "BR"); 
    java.lang.System.setProperty("user.dir", "/home/paulo/Documentos/PHD/Testes2.0/test-analysis-tools/TestCasesGenerated/RealProjects/EvoSuite/hikariCP-cb37a6d/left"); 
    java.lang.System.setProperty("user.home", "/home/paulo"); 
    java.lang.System.setProperty("user.language", "pt"); 
    java.lang.System.setProperty("user.name", "paulo"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("sun.management.compiler", "HotSpot 64-Bit Tiered Compilers"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(CodaHaleMetricsTracker_ESTest_scaffolding.class.getClassLoader() ,
      "javassist.bytecode.CodeIterator$Pointers",
      "javassist.CtField$CodeInitializer0",
      "javassist.bytecode.DuplicateMemberException",
      "javassist.bytecode.stackmap.TypedBlock",
      "com.codahale.metrics.MetricSet",
      "javassist.CtClass",
      "javassist.bytecode.SignatureAttribute$Type",
      "javassist.compiler.Lex",
      "com.zaxxer.hikari.util.IConcurrentBagEntry",
      "javassist.convert.TransformBefore",
      "com.codahale.metrics.WeightedSnapshot$WeightedSample",
      "javassist.bytecode.BootstrapMethodsAttribute",
      "com.codahale.metrics.MetricFilter",
      "com.zaxxer.hikari.util.ConcurrentBag$Synchronizer",
      "javassist.bytecode.Utf8Info",
      "javassist.bytecode.SignatureAttribute$BaseType",
      "javassist.bytecode.stackmap.TypeTag",
      "javassist.compiler.CompileError",
      "javassist.bytecode.stackmap.TypeData$UninitThis",
      "javassist.bytecode.annotation.BooleanMemberValue",
      "javassist.bytecode.StringInfo",
      "javassist.CodeConverter",
      "javassist.Modifier",
      "javassist.compiler.ast.DoubleConst",
      "javassist.ClassMap",
      "javassist.bytecode.NameAndTypeInfo",
      "javassist.bytecode.CodeIterator$Jump16",
      "javassist.bytecode.CodeIterator$If16",
      "com.codahale.metrics.Metric",
      "javassist.bytecode.SignatureAttribute",
      "javassist.bytecode.Opcode",
      "javassist.CtMethod$IntConstParameter",
      "javassist.ClassPathList",
      "javassist.bytecode.StackMap",
      "javassist.CtField$PtreeInitializer",
      "javassist.bytecode.stackmap.BasicBlock$Mark",
      "javassist.ClassPoolTail",
      "com.zaxxer.hikari.HikariDataSource",
      "javassist.bytecode.annotation.ShortMemberValue",
      "javassist.bytecode.SyntheticAttribute",
      "javassist.compiler.NoFieldException",
      "com.codahale.metrics.Clock$CpuTimeClock",
      "javassist.bytecode.stackmap.BasicBlock$Catch",
      "com.zaxxer.hikari.proxy.ConnectionProxy",
      "javassist.bytecode.EnclosingMethodAttribute",
      "javassist.bytecode.StackMapTable$RuntimeCopyException",
      "javassist.CtField$IntInitializer",
      "javassist.bytecode.ParameterAnnotationsAttribute",
      "javassist.bytecode.stackmap.TypeData$ArrayType",
      "javassist.bytecode.annotation.MemberValue",
      "javassist.bytecode.ByteArray",
      "javassist.bytecode.StackMapTable$Copier",
      "javassist.convert.TransformFieldAccess",
      "javassist.bytecode.DoubleInfo",
      "javassist.bytecode.LongVector",
      "javassist.CtNewMethod",
      "javassist.bytecode.annotation.Annotation$Pair",
      "javassist.bytecode.StackMapTable$Walker",
      "javassist.CtField$CodeInitializer",
      "javassist.bytecode.annotation.ArrayMemberValue",
      "com.codahale.metrics.UniformReservoir",
      "javassist.compiler.ast.InstanceOfExpr",
      "javassist.compiler.SyntaxError",
      "javassist.compiler.KeywordTable",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker",
      "javassist.bytecode.StackMapTable$OffsetShifter",
      "javassist.bytecode.CodeIterator$AlignmentException",
      "com.zaxxer.hikari.util.DriverDataSource",
      "javassist.bytecode.BootstrapMethodsAttribute$BootstrapMethod",
      "javassist.bytecode.MethodrefInfo",
      "javassist.compiler.ast.CondExpr",
      "javassist.compiler.ast.ASTree",
      "javassist.bytecode.stackmap.TypeData$BasicType",
      "javassist.bytecode.StackMapTable$Shifter",
      "javassist.bytecode.analysis.MultiArrayType",
      "javassist.bytecode.StackMapTable$InsertLocal",
      "javassist.bytecode.Bytecode",
      "javassist.bytecode.stackmap.BasicBlock$JsrBytecode",
      "com.zaxxer.hikari.pool.HikariMBeanElf",
      "javassist.bytecode.StackMap$Writer",
      "javassist.CtField$DoubleInitializer",
      "javassist.CtNewClass",
      "javassist.CtNewWrappedConstructor",
      "com.zaxxer.hikari.pool.PoolUtilities",
      "javassist.compiler.ast.MethodDecl",
      "javassist.convert.TransformCall",
      "javassist.expr.NewArray",
      "com.codahale.metrics.Timer$1",
      "javassist.compiler.ast.FieldDecl",
      "javassist.CtField$Initializer",
      "javassist.bytecode.SignatureAttribute$MethodSignature",
      "com.codahale.metrics.Counting",
      "javassist.bytecode.InnerClassesAttribute",
      "javassist.compiler.ast.CastExpr",
      "com.codahale.metrics.Clock$UserTimeClock",
      "javassist.bytecode.SignatureAttribute$TypeVariable",
      "javassist.bytecode.stackmap.TypeData",
      "javassist.bytecode.ClassInfo",
      "javassist.bytecode.stackmap.Tracer",
      "com.zaxxer.hikari.proxy.JavassistProxyFactory",
      "javassist.bytecode.ConstInfo",
      "com.zaxxer.hikari.pool.PoolInitializationException",
      "javassist.NotFoundException",
      "javassist.CtConstructor",
      "com.zaxxer.hikari.util.ConcurrentBag",
      "com.codahale.metrics.EWMA",
      "javassist.CtClassType",
      "javassist.compiler.MemberCodeGen$JsrHook2",
      "javassist.bytecode.annotation.FloatMemberValue",
      "javassist.ClassPath",
      "javassist.bytecode.stackmap.TypeData$AbsTypeVar",
      "javassist.bytecode.CodeIterator$Gap",
      "javassist.bytecode.InterfaceMethodrefInfo",
      "com.codahale.metrics.Snapshot",
      "javassist.bytecode.MethodParametersAttribute",
      "javassist.CtField",
      "com.zaxxer.hikari.pool.HikariPoolMBean",
      "javassist.bytecode.FloatInfo",
      "javassist.CodeConverter$ArrayAccessReplacementMethodNames",
      "javassist.expr.Handler",
      "javassist.CtBehavior",
      "javassist.bytecode.annotation.ClassMemberValue",
      "javassist.compiler.ast.Member",
      "javassist.bytecode.stackmap.TypeData$ArrayElement",
      "javassist.ClassPool",
      "javassist.bytecode.LocalVariableTypeAttribute",
      "javassist.CtPrimitiveType",
      "javassist.CtMethod$StringConstParameter",
      "javassist.bytecode.analysis.Frame",
      "javassist.compiler.ast.Symbol",
      "javassist.compiler.Javac$CtFieldWithInit",
      "javassist.compiler.MemberResolver",
      "javassist.compiler.ProceedHandler",
      "javassist.bytecode.CodeAttribute$LdcEntry",
      "com.codahale.metrics.Meter",
      "javassist.bytecode.LocalVariableAttribute",
      "javassist.bytecode.analysis.MultiType",
      "javassist.CtField$ParamInitializer",
      "javassist.CtNewWrappedMethod",
      "javassist.bytecode.stackmap.MapMaker",
      "com.codahale.metrics.SlidingWindowReservoir",
      "javassist.bytecode.SourceFileAttribute",
      "javassist.CtField$FloatInitializer",
      "javassist.CannotCompileException",
      "javassist.CtField$MethodInitializer",
      "com.codahale.metrics.Clock",
      "javassist.bytecode.SignatureAttribute$ClassSignature",
      "javassist.compiler.MemberCodeGen",
      "javassist.compiler.ast.Expr",
      "javassist.bytecode.AnnotationsAttribute",
      "com.codahale.metrics.ExponentiallyDecayingReservoir",
      "com.zaxxer.hikari.HikariConfig",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$Context",
      "javassist.bytecode.stackmap.BasicBlock",
      "javassist.bytecode.SignatureAttribute$ClassType",
      "javassist.bytecode.DeprecatedAttribute",
      "javassist.compiler.ast.Variable",
      "com.zaxxer.hikari.metrics.MetricsTracker$MetricsContext",
      "javassist.convert.TransformNew",
      "javassist.expr.Cast",
      "javassist.bytecode.Descriptor",
      "javassist.bytecode.SignatureAttribute$ArrayType",
      "javassist.bytecode.ConstPool",
      "com.codahale.metrics.MetricFilter$1",
      "javassist.bytecode.AccessFlag",
      "com.codahale.metrics.MetricRegistry$MetricBuilder",
      "javassist.bytecode.stackmap.TypeData$UninitTypeVar",
      "javassist.bytecode.SignatureAttribute$TypeArgument",
      "com.codahale.metrics.MetricRegistryListener",
      "com.codahale.metrics.Striped64$ThreadHashCode",
      "javassist.bytecode.annotation.NoSuchClassError",
      "com.codahale.metrics.CachedGauge",
      "com.codahale.metrics.Reservoir",
      "com.zaxxer.hikari.proxy.IHikariConnectionProxy",
      "javassist.CtClass$1",
      "javassist.bytecode.SignatureAttribute$TypeParameter",
      "javassist.expr.MethodCall",
      "javassist.bytecode.CodeAttribute",
      "javassist.bytecode.FieldInfo",
      "javassist.CtArray",
      "com.codahale.metrics.WeightedSnapshot",
      "javassist.bytecode.stackmap.BasicBlock$Maker",
      "javassist.bytecode.annotation.AnnotationMemberValue",
      "javassist.compiler.CodeGen$1",
      "javassist.bytecode.annotation.Annotation",
      "com.zaxxer.hikari.util.PropertyBeanSetter",
      "javassist.bytecode.ConstantAttribute",
      "javassist.compiler.JvstTypeChecker",
      "javassist.bytecode.stackmap.TypeData$UninitData",
      "com.zaxxer.hikari.proxy.CallableStatementProxy",
      "com.zaxxer.hikari.pool.GlobalPoolLock",
      "javassist.ClassPool$1",
      "javassist.bytecode.MemberrefInfo",
      "com.codahale.metrics.InstrumentedThreadFactory$InstrumentedRunnable",
      "javassist.compiler.TypeChecker",
      "javassist.expr.Expr",
      "javassist.compiler.CodeGen$ReturnHook",
      "javassist.compiler.ast.BinExpr",
      "javassist.bytecode.LineNumberAttribute$Pc",
      "com.codahale.metrics.Striped64",
      "javassist.bytecode.SignatureAttribute$ObjectType",
      "com.zaxxer.hikari.pool.HikariPool$HouseKeeper",
      "com.codahale.metrics.Sampling",
      "com.codahale.metrics.Timer",
      "javassist.bytecode.stackmap.TypeData$ClassName",
      "javassist.bytecode.annotation.LongMemberValue",
      "com.zaxxer.hikari.pool.HikariPool",
      "javassist.bytecode.AnnotationDefaultAttribute",
      "com.zaxxer.hikari.util.Striped64$Cell",
      "javassist.bytecode.SignatureAttribute$NestedClassType",
      "javassist.bytecode.LongInfo",
      "com.zaxxer.hikari.util.Striped64",
      "com.codahale.metrics.Striped64$Cell",
      "javassist.CtMember",
      "com.zaxxer.hikari.proxy.ResultSetProxy",
      "javassist.CtClass$DelayedFileOutputStream",
      "javassist.compiler.ast.Stmnt",
      "javassist.CtMember$Cache",
      "com.zaxxer.hikari.util.UtilityElf",
      "com.codahale.metrics.JvmAttributeGaugeSet",
      "com.zaxxer.hikari.util.ClassLoaderUtils",
      "com.codahale.metrics.LongAdder",
      "com.zaxxer.hikari.util.IBagStateListener",
      "javassist.CtMethod$LongConstParameter",
      "javassist.expr.ConstructorCall",
      "javassist.compiler.SymbolTable",
      "com.zaxxer.hikari.pool.PoolBagEntry",
      "javassist.bytecode.TypeAnnotationsAttribute",
      "javassist.CtNewConstructor",
      "javassist.expr.ExprEditor",
      "javassist.bytecode.StackMapTable",
      "javassist.LoaderClassPath",
      "com.codahale.metrics.MetricRegistry",
      "javassist.convert.TransformReadField",
      "javassist.bytecode.StackMapTable$SwitchShifter",
      "com.zaxxer.hikari.util.DefaultThreadFactory",
      "javassist.bytecode.ExceptionsAttribute",
      "javassist.compiler.ast.AssignExpr",
      "javassist.bytecode.annotation.AnnotationsWriter",
      "javassist.compiler.ast.Keyword",
      "javassist.compiler.ast.ArrayInit",
      "javassist.bytecode.annotation.StringMemberValue",
      "javassist.bytecode.MethodTypeInfo",
      "javassist.convert.TransformAfter",
      "com.zaxxer.hikari.pool.LeakTask",
      "com.zaxxer.hikari.proxy.StatementProxy",
      "javassist.bytecode.StackMapTable$Writer",
      "javassist.bytecode.annotation.ByteMemberValue",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$2",
      "javassist.bytecode.stackmap.TypeData$NullType",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$1",
      "javassist.CtMethod",
      "javassist.compiler.AccessorMaker",
      "javassist.compiler.ast.Declarator",
      "javassist.compiler.ast.StringL",
      "com.codahale.metrics.UniformSnapshot",
      "javassist.ClassClassPath",
      "javassist.bytecode.annotation.MemberValueVisitor",
      "javassist.CtNewNestedClass",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$4",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$3",
      "javassist.compiler.ast.Pair",
      "javassist.compiler.CodeGen",
      "javassist.bytecode.analysis.Type",
      "javassist.bytecode.CodeIterator$Branch",
      "javassist.bytecode.ByteVector",
      "com.codahale.metrics.Counter",
      "com.codahale.metrics.Metered",
      "javassist.convert.TransformWriteField",
      "javassist.compiler.MemberResolver$Method",
      "javassist.compiler.ast.CallExpr",
      "javassist.bytecode.StackMapTable$Printer",
      "javassist.bytecode.ExceptionTable",
      "javassist.CtMethod$ConstParameter",
      "javassist.bytecode.ConstInfoPadding",
      "javassist.compiler.ast.Visitor",
      "com.codahale.metrics.WeightedSnapshot$1",
      "javassist.bytecode.InvokeDynamicInfo",
      "javassist.convert.TransformAccessArrayField",
      "com.codahale.metrics.ThreadLocalRandom",
      "com.codahale.metrics.ThreadLocalRandom$1",
      "javassist.bytecode.MethodInfo",
      "com.codahale.metrics.Gauge",
      "javassist.CtField$MultiArrayInitializer",
      "javassist.bytecode.StackMapTable$SimpleCopy",
      "com.zaxxer.hikari.pool.LeakTask$1",
      "javassist.expr.FieldAccess",
      "com.codahale.metrics.SlidingTimeWindowReservoir",
      "com.codahale.metrics.Histogram",
      "javassist.bytecode.CodeIterator$Branch16",
      "javassist.compiler.ast.NewExpr",
      "javassist.bytecode.BadBytecode",
      "javassist.bytecode.MethodHandleInfo",
      "com.codahale.metrics.InstrumentedThreadFactory",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$4",
      "com.zaxxer.hikari.proxy.PreparedStatementProxy",
      "javassist.expr.NewExpr",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$3",
      "com.codahale.metrics.JvmAttributeGaugeSet$1",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$2",
      "javassist.bytecode.IntegerInfo",
      "javassist.bytecode.stackmap.TypeData$TypeVar",
      "com.codahale.metrics.JvmAttributeGaugeSet$2",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$1",
      "javassist.compiler.ast.IntConst",
      "com.codahale.metrics.JvmAttributeGaugeSet$3",
      "javassist.bytecode.FieldrefInfo",
      "javassist.compiler.TokenId",
      "javassist.CtField$ArrayInitializer",
      "javassist.compiler.Token",
      "com.zaxxer.hikari.util.LongAdder",
      "javassist.CtField$LongInitializer",
      "com.codahale.metrics.Striped64$1",
      "javassist.CtField$NewInitializer",
      "javassist.bytecode.annotation.CharMemberValue",
      "com.zaxxer.hikari.HikariConfigMBean",
      "javassist.bytecode.CodeIterator",
      "com.codahale.metrics.Timer$Context",
      "javassist.bytecode.ExceptionTableEntry",
      "javassist.compiler.JvstCodeGen",
      "com.zaxxer.hikari.pool.GlobalPoolLock$1",
      "javassist.bytecode.ClassFile",
      "com.codahale.metrics.Striped64$HashCode",
      "javassist.convert.TransformNewClass",
      "com.zaxxer.hikari.metrics.MetricsTracker",
      "javassist.compiler.Javac",
      "javassist.compiler.Parser",
      "javassist.bytecode.SignatureAttribute$Cursor",
      "javassist.expr.ExprEditor$LoopContext",
      "javassist.bytecode.CodeAttribute$RuntimeCopyException",
      "javassist.CtField$StringInitializer",
      "javassist.convert.Transformer",
      "javassist.bytecode.StackMapTable$NewRemover",
      "javassist.bytecode.annotation.DoubleMemberValue",
      "javassist.bytecode.stackmap.TypedBlock$Maker",
      "javassist.bytecode.AttributeInfo",
      "javassist.bytecode.annotation.IntegerMemberValue",
      "javassist.expr.Instanceof",
      "javassist.bytecode.LineNumberAttribute",
      "javassist.compiler.ast.ASTList",
      "javassist.bytecode.annotation.EnumMemberValue"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(CodaHaleMetricsTracker_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.zaxxer.hikari.metrics.MetricsTracker$MetricsContext",
      "com.zaxxer.hikari.metrics.MetricsTracker",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker",
      "com.codahale.metrics.CachedGauge",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$1",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$2",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$3",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$4",
      "com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$Context",
      "javassist.ClassPool$1",
      "javassist.ClassPool",
      "javassist.ClassPoolTail",
      "javassist.CtPrimitiveType",
      "javassist.CtClass",
      "javassist.LoaderClassPath",
      "javassist.ClassPathList",
      "javassist.CtClassType",
      "javassist.CtNewClass",
      "javassist.bytecode.ClassFile",
      "javassist.bytecode.ConstPool",
      "javassist.bytecode.LongVector",
      "javassist.bytecode.Descriptor",
      "javassist.bytecode.ConstInfo",
      "javassist.bytecode.Utf8Info",
      "javassist.bytecode.ClassInfo",
      "javassist.bytecode.AttributeInfo",
      "javassist.bytecode.SourceFileAttribute",
      "javassist.bytecode.AccessFlag",
      "javassist.Modifier",
      "javassist.bytecode.MemberrefInfo",
      "javassist.bytecode.MethodrefInfo",
      "javassist.bytecode.FieldrefInfo",
      "javassist.bytecode.StringInfo",
      "javassist.bytecode.InterfaceMethodrefInfo",
      "javassist.bytecode.NameAndTypeInfo",
      "javassist.bytecode.FieldInfo",
      "javassist.bytecode.SignatureAttribute",
      "javassist.bytecode.MethodInfo",
      "javassist.bytecode.CodeAttribute",
      "javassist.bytecode.ExceptionTable",
      "javassist.bytecode.LineNumberAttribute",
      "javassist.bytecode.LocalVariableAttribute",
      "javassist.bytecode.StackMapTable",
      "javassist.bytecode.LocalVariableTypeAttribute",
      "javassist.bytecode.ExceptionsAttribute",
      "javassist.bytecode.ExceptionTableEntry",
      "javassist.bytecode.IntegerInfo",
      "javassist.bytecode.ConstantAttribute",
      "javassist.CtMember",
      "javassist.CtMember$Cache",
      "javassist.CtBehavior",
      "javassist.CtConstructor",
      "javassist.CtMethod",
      "javassist.CtField",
      "com.zaxxer.hikari.util.ClassLoaderUtils",
      "javassist.CtNewMethod",
      "javassist.ClassMap",
      "javassist.bytecode.ByteArray",
      "javassist.compiler.Javac",
      "javassist.bytecode.ByteVector",
      "javassist.bytecode.Bytecode",
      "javassist.compiler.ast.Visitor",
      "javassist.compiler.CodeGen",
      "javassist.compiler.MemberCodeGen",
      "javassist.compiler.JvstCodeGen",
      "javassist.compiler.MemberResolver",
      "javassist.compiler.TypeChecker",
      "javassist.compiler.JvstTypeChecker",
      "javassist.compiler.SymbolTable",
      "javassist.compiler.ast.ASTree",
      "javassist.compiler.ast.ASTList",
      "javassist.compiler.ast.Declarator",
      "javassist.compiler.ast.Symbol",
      "javassist.compiler.Parser",
      "javassist.compiler.KeywordTable",
      "javassist.compiler.Lex",
      "javassist.compiler.Token",
      "javassist.compiler.ast.Stmnt",
      "javassist.compiler.ast.Keyword",
      "javassist.compiler.ast.Member",
      "javassist.compiler.ast.Expr",
      "javassist.compiler.ast.CallExpr",
      "javassist.compiler.ast.Variable",
      "javassist.compiler.ast.Pair",
      "javassist.compiler.MemberResolver$Method",
      "javassist.bytecode.Opcode",
      "javassist.NotFoundException",
      "javassist.bytecode.stackmap.Tracer",
      "javassist.bytecode.stackmap.MapMaker",
      "javassist.bytecode.stackmap.BasicBlock",
      "javassist.bytecode.stackmap.TypedBlock",
      "javassist.bytecode.stackmap.BasicBlock$Maker",
      "javassist.bytecode.stackmap.TypedBlock$Maker",
      "javassist.bytecode.CodeIterator",
      "javassist.bytecode.stackmap.BasicBlock$Mark",
      "javassist.bytecode.stackmap.BasicBlock$Catch",
      "javassist.bytecode.stackmap.TypeData",
      "javassist.bytecode.stackmap.TypeData$BasicType",
      "javassist.bytecode.stackmap.TypeTag",
      "javassist.bytecode.stackmap.TypeData$ClassName",
      "javassist.bytecode.stackmap.TypeData$AbsTypeVar",
      "javassist.bytecode.stackmap.TypeData$TypeVar",
      "javassist.bytecode.StackMapTable$Writer",
      "javassist.CtArray",
      "javassist.compiler.ast.CastExpr",
      "javassist.CtNewConstructor",
      "javassist.CtNewWrappedMethod",
      "javassist.CtNewWrappedConstructor",
      "javassist.bytecode.StackMapTable$Walker",
      "javassist.bytecode.StackMapTable$SimpleCopy",
      "javassist.bytecode.StackMapTable$Copier",
      "javassist.bytecode.CodeAttribute$LdcEntry",
      "javassist.bytecode.DeprecatedAttribute",
      "javassist.bytecode.AnnotationsAttribute",
      "javassist.bytecode.LongInfo",
      "javassist.bytecode.ConstInfoPadding",
      "javassist.bytecode.InnerClassesAttribute",
      "javassist.bytecode.InvokeDynamicInfo",
      "javassist.bytecode.MethodHandleInfo",
      "javassist.bytecode.MethodTypeInfo",
      "javassist.bytecode.BootstrapMethodsAttribute",
      "javassist.compiler.ast.NewExpr",
      "com.zaxxer.hikari.proxy.JavassistProxyFactory",
      "com.zaxxer.hikari.HikariConfig",
      "com.zaxxer.hikari.util.PropertyBeanSetter",
      "com.zaxxer.hikari.HikariDataSource",
      "com.codahale.metrics.MetricRegistry",
      "com.zaxxer.hikari.pool.HikariPool",
      "com.zaxxer.hikari.pool.PoolUtilities",
      "com.zaxxer.hikari.util.ConcurrentBag",
      "com.zaxxer.hikari.util.ConcurrentBag$Synchronizer",
      "com.zaxxer.hikari.util.Striped64",
      "com.zaxxer.hikari.util.LongAdder",
      "com.zaxxer.hikari.pool.GlobalPoolLock$1",
      "com.zaxxer.hikari.pool.GlobalPoolLock",
      "com.zaxxer.hikari.util.UtilityElf",
      "com.zaxxer.hikari.util.DefaultThreadFactory",
      "com.zaxxer.hikari.pool.HikariPool$HouseKeeper",
      "com.zaxxer.hikari.pool.LeakTask$1",
      "com.zaxxer.hikari.pool.LeakTask",
      "com.codahale.metrics.Timer",
      "com.codahale.metrics.ExponentiallyDecayingReservoir",
      "com.codahale.metrics.Clock$UserTimeClock",
      "com.codahale.metrics.Clock",
      "com.codahale.metrics.Meter",
      "com.codahale.metrics.EWMA",
      "com.codahale.metrics.Striped64$ThreadHashCode",
      "com.codahale.metrics.Striped64$1",
      "com.codahale.metrics.Striped64",
      "com.codahale.metrics.LongAdder",
      "com.codahale.metrics.Histogram",
      "com.codahale.metrics.Timer$Context",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$1",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$2",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$3",
      "com.codahale.metrics.MetricRegistry$MetricBuilder$4",
      "com.codahale.metrics.MetricRegistry$MetricBuilder",
      "com.codahale.metrics.SlidingTimeWindowReservoir",
      "com.codahale.metrics.UniformReservoir",
      "com.codahale.metrics.WeightedSnapshot$WeightedSample",
      "com.codahale.metrics.ThreadLocalRandom$1",
      "com.codahale.metrics.ThreadLocalRandom",
      "com.codahale.metrics.Clock$CpuTimeClock",
      "com.codahale.metrics.Snapshot",
      "com.codahale.metrics.WeightedSnapshot",
      "com.codahale.metrics.WeightedSnapshot$1",
      "com.codahale.metrics.MetricFilter$1",
      "com.codahale.metrics.MetricFilter",
      "com.codahale.metrics.SlidingWindowReservoir",
      "com.codahale.metrics.UniformSnapshot",
      "com.zaxxer.hikari.pool.PoolBagEntry",
      "com.codahale.metrics.JvmAttributeGaugeSet",
      "com.codahale.metrics.JvmAttributeGaugeSet$1",
      "com.codahale.metrics.JvmAttributeGaugeSet$2",
      "com.codahale.metrics.JvmAttributeGaugeSet$3",
      "com.codahale.metrics.Counter",
      "com.codahale.metrics.InstrumentedThreadFactory",
      "com.zaxxer.hikari.pool.HikariMBeanElf",
      "com.zaxxer.hikari.util.DriverDataSource",
      "com.codahale.metrics.InstrumentedThreadFactory$InstrumentedRunnable"
    );
  }
}

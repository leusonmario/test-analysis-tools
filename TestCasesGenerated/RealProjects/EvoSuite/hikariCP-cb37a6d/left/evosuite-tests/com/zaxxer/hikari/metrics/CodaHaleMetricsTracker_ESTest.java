/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 09 17:53:39 GMT 2019
 */

package com.zaxxer.hikari.metrics;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.codahale.metrics.MetricRegistry;
import com.codahale.metrics.Timer;
import com.zaxxer.hikari.metrics.CodaHaleMetricsTracker;
import com.zaxxer.hikari.pool.HikariPool;
import com.zaxxer.hikari.pool.PoolBagEntry;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class CodaHaleMetricsTracker_ESTest extends CodaHaleMetricsTracker_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MetricRegistry metricRegistry0 = new MetricRegistry();
      CodaHaleMetricsTracker codaHaleMetricsTracker0 = null;
      try {
        codaHaleMetricsTracker0 = new CodaHaleMetricsTracker((HikariPool) null, metricRegistry0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.metrics.CodaHaleMetricsTracker", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Timer timer0 = new Timer();
      CodaHaleMetricsTracker.Context codaHaleMetricsTracker_Context0 = new CodaHaleMetricsTracker.Context(timer0);
      // Undeclared exception!
      try { 
        codaHaleMetricsTracker_Context0.setConnectionLastOpen((PoolBagEntry) null, (-1386L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.zaxxer.hikari.metrics.CodaHaleMetricsTracker$Context", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Timer timer0 = new Timer();
      CodaHaleMetricsTracker.Context codaHaleMetricsTracker_Context0 = new CodaHaleMetricsTracker.Context(timer0);
      codaHaleMetricsTracker_Context0.stop();
  }
}

/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 22 17:50:38 GMT 2019
 */

package org.fusesource.restygwt.rebind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gwt.core.ext.GeneratorContext;
import com.google.gwt.core.ext.GeneratorContextExt;
import com.google.gwt.core.ext.GeneratorContextExtWrapper;
import com.google.gwt.core.ext.TreeLogger;
import com.google.gwt.core.ext.typeinfo.JMethod;
import com.google.gwt.dev.javac.typemodel.JGenericType;
import com.google.gwt.dev.javac.typemodel.JPackage;
import com.google.gwt.dev.javac.typemodel.JTypeParameter;
import com.google.gwt.dev.javac.typemodel.TypeOracle;
import com.google.gwt.dev.shell.log.ServletContextTreeLogger;
import com.google.gwt.dev.util.log.PrintWriterTreeLogger;
import com.google.gwt.user.rebind.ClassSourceFileComposerFactory;
import org.apache.catalina.core.ApplicationContext;
import org.apache.catalina.core.StandardContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.fusesource.restygwt.rebind.DirectRestServiceInterfaceClassCreator;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DirectRestServiceInterfaceClassCreator_ESTest extends DirectRestServiceInterfaceClassCreator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      StandardContext standardContext0 = new StandardContext();
      ApplicationContext applicationContext0 = new ApplicationContext("P)^..CB", standardContext0);
      ServletContextTreeLogger servletContextTreeLogger0 = new ServletContextTreeLogger(applicationContext0);
      TypeOracle typeOracle0 = new TypeOracle();
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      GeneratorContextExt generatorContextExt0 = GeneratorContextExtWrapper.newInstance(generatorContext0);
      JPackage jPackage0 = typeOracle0.getOrCreatePackage("P)^..CB");
      JTypeParameter[] jTypeParameterArray0 = new JTypeParameter[3];
      JTypeParameter jTypeParameter0 = new JTypeParameter("P)^..CB", (byte) (-1));
      jTypeParameterArray0[0] = jTypeParameter0;
      jTypeParameterArray0[1] = jTypeParameterArray0[0];
      jTypeParameterArray0[2] = jTypeParameterArray0[0];
      JGenericType jGenericType0 = new JGenericType(typeOracle0, jPackage0, "P)^..CB", "P)^..CB", true, jTypeParameterArray0);
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator(servletContextTreeLogger0, generatorContextExt0, jGenericType0);
      // Undeclared exception!
      try { 
        directRestServiceInterfaceClassCreator0.getMethodCallback((JMethod) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.fusesource.restygwt.rebind.DirectRestServiceClassCreator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      StandardContext standardContext0 = new StandardContext();
      ApplicationContext applicationContext0 = new ApplicationContext("P)^..CB", standardContext0);
      ServletContextTreeLogger servletContextTreeLogger0 = new ServletContextTreeLogger(applicationContext0);
      TypeOracle typeOracle0 = new TypeOracle();
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      doReturn(typeOracle0).when(generatorContext0).getTypeOracle();
      GeneratorContextExt generatorContextExt0 = GeneratorContextExtWrapper.newInstance(generatorContext0);
      JPackage jPackage0 = typeOracle0.getOrCreatePackage("P)^..CB");
      JTypeParameter[] jTypeParameterArray0 = new JTypeParameter[3];
      JTypeParameter jTypeParameter0 = new JTypeParameter("P)^..CB", (byte)3);
      jTypeParameterArray0[0] = jTypeParameter0;
      jTypeParameterArray0[1] = jTypeParameter0;
      jTypeParameterArray0[2] = jTypeParameter0;
      JGenericType jGenericType0 = new JGenericType(typeOracle0, jPackage0, "P)^..CB", "-ds", true, jTypeParameterArray0);
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator(servletContextTreeLogger0, generatorContextExt0, jGenericType0);
      try { 
        directRestServiceInterfaceClassCreator0.generate();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // (see previous log entries)
         //
         verifyException("org.fusesource.restygwt.rebind.RestServiceGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      doReturn((com.google.gwt.core.ext.typeinfo.TypeOracle) null).when(generatorContext0).getTypeOracle();
      TypeOracle typeOracle0 = new TypeOracle();
      JPackage jPackage0 = typeOracle0.getOrCreatePackage("seqZrvletRcpping");
      JGenericType jGenericType0 = new JGenericType(typeOracle0, jPackage0, "seqZrvletRcpping", "seqZrvletRcpping", false, (JTypeParameter[]) null);
      PrintWriterTreeLogger printWriterTreeLogger0 = new PrintWriterTreeLogger();
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator(printWriterTreeLogger0, generatorContext0, jGenericType0);
      // Undeclared exception!
      try { 
        directRestServiceInterfaceClassCreator0.generate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.fusesource.restygwt.rebind.RestServiceGenerator", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      StandardContext standardContext0 = new StandardContext();
      ApplicationContext applicationContext0 = new ApplicationContext("P)^..CB", standardContext0);
      ServletContextTreeLogger servletContextTreeLogger0 = new ServletContextTreeLogger(applicationContext0);
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      GeneratorContextExt generatorContextExt0 = GeneratorContextExtWrapper.newInstance(generatorContext0);
      TypeOracle typeOracle0 = new TypeOracle();
      JPackage jPackage0 = typeOracle0.getOrCreatePackage("P)^..CB");
      JTypeParameter[] jTypeParameterArray0 = new JTypeParameter[3];
      JTypeParameter jTypeParameter0 = new JTypeParameter("P)^..CB", (byte) (-1));
      jTypeParameterArray0[0] = jTypeParameter0;
      jTypeParameterArray0[1] = jTypeParameter0;
      jTypeParameterArray0[2] = jTypeParameterArray0[0];
      JGenericType jGenericType0 = new JGenericType(typeOracle0, jPackage0, "P)^..CB", "c-dns", true, jTypeParameterArray0);
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator(servletContextTreeLogger0, generatorContextExt0, jGenericType0);
      // Undeclared exception!
      try { 
        directRestServiceInterfaceClassCreator0.createComposerFactory();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.fusesource.restygwt.rebind.DirectRestBaseSourceCreator", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      StandardContext standardContext0 = new StandardContext();
      ApplicationContext applicationContext0 = new ApplicationContext("P)^..CB", standardContext0);
      ServletContextTreeLogger servletContextTreeLogger0 = new ServletContextTreeLogger(applicationContext0);
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      GeneratorContextExt generatorContextExt0 = GeneratorContextExtWrapper.newInstance(generatorContext0);
      JTypeParameter[] jTypeParameterArray0 = new JTypeParameter[3];
      JTypeParameter jTypeParameter0 = new JTypeParameter("P)^..CB", (byte) (-1));
      jTypeParameterArray0[0] = jTypeParameter0;
      jTypeParameter0.setBounds(jTypeParameterArray0);
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = null;
      try {
        directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator(servletContextTreeLogger0, generatorContextExt0, jTypeParameter0);
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      GeneratorContextExt generatorContextExt0 = GeneratorContextExtWrapper.newInstance(generatorContext0);
      JTypeParameter jTypeParameter0 = new JTypeParameter("XM2=&VquhW7s~<k; k>", 189);
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = null;
      try {
        directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator((TreeLogger) null, generatorContextExt0, jTypeParameter0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.google.gwt.dev.javac.typemodel.JDelegatingClassType", e);
      }
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      GeneratorContext generatorContext0 = mock(GeneratorContext.class, new ViolatedAssumptionAnswer());
      TypeOracle typeOracle0 = new TypeOracle();
      JPackage jPackage0 = typeOracle0.getOrCreatePackage("seqZrvletRcpping");
      JGenericType jGenericType0 = new JGenericType(typeOracle0, jPackage0, "seqZrvletRcpping", "seqZrvletRcpping", false, (JTypeParameter[]) null);
      PrintWriterTreeLogger printWriterTreeLogger0 = new PrintWriterTreeLogger();
      DirectRestServiceInterfaceClassCreator directRestServiceInterfaceClassCreator0 = new DirectRestServiceInterfaceClassCreator(printWriterTreeLogger0, generatorContext0, jGenericType0);
      ClassSourceFileComposerFactory classSourceFileComposerFactory0 = directRestServiceInterfaceClassCreator0.createComposerFactory();
      assertNull(classSourceFileComposerFactory0.getSuperclassName());
  }
}

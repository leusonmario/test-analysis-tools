import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource2 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray3 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet4 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet4, slangSourceArray3);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact6 = slangImpl0.compile(slangSource2, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(slangSourceArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.lang.compiler.SlangSource slangSource1 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray2 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet3 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet3, slangSourceArray2);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact5 = slangImpl0.compile(slangSource1, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(slangSourceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, (java.util.Set<java.lang.String>) strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, (java.util.Set<java.lang.String>) strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, (java.util.Set<java.lang.String>) strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource4 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray5 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet6 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet6, slangSourceArray5);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact8 = slangImpl0.compile(slangSource4, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(slangSourceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource3 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray4 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet5 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet5, slangSourceArray4);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact7 = slangImpl0.compile(slangSource3, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(slangSourceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, (java.util.Set<java.lang.String>) strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, (java.util.Set<java.lang.String>) strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, (java.util.Set<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, (java.util.Set<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, (java.util.Set<java.lang.String>) strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet4 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet4, strArray3);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, (java.util.Set<java.lang.String>) strSet4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, (java.util.Set<java.lang.String>) strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, (java.util.Set<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, (java.util.Set<java.lang.String>) strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource6 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray7 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet8 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet8, slangSourceArray7);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact10 = slangImpl0.compile(slangSource6, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(slangSourceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource5 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray6 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet7 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet7, slangSourceArray6);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact9 = slangImpl0.compile(slangSource5, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(slangSourceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, (java.util.Set<java.lang.String>) strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, (java.util.Set<java.lang.String>) strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, (java.util.Set<java.lang.String>) strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, (java.util.Set<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource8 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray9 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet10 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet10, slangSourceArray9);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact12 = slangImpl0.compile(slangSource8, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(slangSourceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, (java.util.Set<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, (java.util.Set<java.lang.String>) strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.lang.String[] strArray3 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet4 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean5 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet4, strArray3);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, (java.util.Set<java.lang.String>) strSet4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, (java.util.Set<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, (java.util.Set<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, (java.util.Set<java.lang.String>) strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, (java.util.Set<java.lang.String>) strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, (java.util.Set<java.lang.String>) strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource7 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray8 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet9 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet9, slangSourceArray8);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact11 = slangImpl0.compile(slangSource7, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(slangSourceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, (java.util.Set<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, (java.util.Set<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource9 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray10 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet11 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet11, slangSourceArray10);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact13 = slangImpl0.compile(slangSource9, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(slangSourceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, (java.util.Set<java.lang.String>) strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, (java.util.Set<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource6 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet7 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact8 = slangImpl0.compile(slangSource6, slangSourceSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, (java.util.Set<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, (java.util.Set<java.lang.String>) strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, (java.util.Set<java.lang.String>) strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource10 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray11 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet12 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet12, slangSourceArray11);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact14 = slangImpl0.compile(slangSource10, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(slangSourceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource10 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet11 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact12 = slangImpl0.compile(slangSource10, slangSourceSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, (java.util.Set<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.util.Set<java.lang.String> strSet2 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, strSet2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet9 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet9, strArray8);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, (java.util.Set<java.lang.String>) strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, (java.util.Set<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, (java.util.Set<java.lang.String>) strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource11 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet12 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact13 = slangImpl0.compile(slangSource11, slangSourceSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, (java.util.Set<java.lang.String>) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, (java.util.Set<java.lang.String>) strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, (java.util.Set<java.lang.String>) strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, (java.util.Set<java.lang.String>) strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, (java.util.Set<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, (java.util.Set<java.lang.String>) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.util.Set<java.lang.String> strSet12 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, (java.util.Set<java.lang.String>) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource12 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray13 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet14 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet14, slangSourceArray13);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact16 = slangImpl0.compile(slangSource12, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(slangSourceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource13 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray14 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet15 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet15, slangSourceArray14);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact17 = slangImpl0.compile(slangSource13, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(slangSourceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, (java.util.Set<java.lang.String>) strSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, (java.util.Set<java.lang.String>) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, (java.util.Set<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, (java.util.Set<java.lang.String>) strSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource11 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray12 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet13 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet13, slangSourceArray12);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact15 = slangImpl0.compile(slangSource11, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(slangSourceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, (java.util.Set<java.lang.String>) strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource14 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray15 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet16 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet16, slangSourceArray15);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact18 = slangImpl0.compile(slangSource14, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(slangSourceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, (java.util.Set<java.lang.String>) strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, (java.util.Set<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, (java.util.Set<java.lang.String>) strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource15 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet16 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact17 = slangImpl0.compile(slangSource15, slangSourceSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet6 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet6, strArray5);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, (java.util.Set<java.lang.String>) strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener8 = null;
        java.util.Set<java.lang.String> strSet9 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener8, strSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource15 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray16 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet17 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet17, slangSourceArray16);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact19 = slangImpl0.compile(slangSource15, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(slangSourceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet10 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet10, strArray9);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, (java.util.Set<java.lang.String>) strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.util.Set<java.lang.String> strSet14 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, (java.util.Set<java.lang.String>) strSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, (java.util.Set<java.lang.String>) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, (java.util.Set<java.lang.String>) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource16 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray17 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet18 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet18, slangSourceArray17);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact20 = slangImpl0.compile(slangSource16, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(slangSourceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, (java.util.Set<java.lang.String>) strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, (java.util.Set<java.lang.String>) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener16, (java.util.Set<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, (java.util.Set<java.lang.String>) strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, (java.util.Set<java.lang.String>) strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, (java.util.Set<java.lang.String>) strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, (java.util.Set<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, (java.util.Set<java.lang.String>) strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, (java.util.Set<java.lang.String>) strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener2 = null;
        java.util.Set<java.lang.String> strSet3 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener2, strSet3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.util.Set<java.lang.String> strSet11 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.lang.compiler.SlangSource slangSource1 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet2 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact3 = slangImpl0.compile(slangSource1, slangSourceSet2);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener16, (java.util.Set<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.util.Set<java.lang.String> strSet5 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, (java.util.Set<java.lang.String>) strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, (java.util.Set<java.lang.String>) strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet12 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet12, strArray11);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, (java.util.Set<java.lang.String>) strSet12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.util.Set<java.lang.String> strSet8 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, (java.util.Set<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet18 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet18, strArray17);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, (java.util.Set<java.lang.String>) strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, (java.util.Set<java.lang.String>) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, (java.util.Set<java.lang.String>) strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.util.Set<java.lang.String> strSet16 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource3 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet4 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact5 = slangImpl0.compile(slangSource3, slangSourceSet4);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener16, (java.util.Set<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet16 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet16, strArray15);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, (java.util.Set<java.lang.String>) strSet16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, (java.util.Set<java.lang.String>) strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, (java.util.Set<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener5 = null;
        java.util.Set<java.lang.String> strSet6 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener5, strSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, (java.util.Set<java.lang.String>) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, (java.util.Set<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener1 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet5 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet5, strArray4);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener1, (java.util.Set<java.lang.String>) strSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener11, (java.util.Set<java.lang.String>) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource17 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray18 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet19 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet19, slangSourceArray18);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact21 = slangImpl0.compile(slangSource17, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(slangSourceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet7 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet7, strArray6);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, (java.util.Set<java.lang.String>) strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource9 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet10 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact11 = slangImpl0.compile(slangSource9, slangSourceSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource19 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray20 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet21 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet21, slangSourceArray20);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact23 = slangImpl0.compile(slangSource19, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(slangSourceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, (java.util.Set<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource18 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray19 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet20 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet20, slangSourceArray19);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact22 = slangImpl0.compile(slangSource18, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(slangSourceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, (java.util.Set<java.lang.String>) strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, (java.util.Set<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, (java.util.Set<java.lang.String>) strSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener6 = null;
        java.util.Set<java.lang.String> strSet7 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener6, strSet7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource20 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray21 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet22 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet22, slangSourceArray21);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact24 = slangImpl0.compile(slangSource20, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(slangSourceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener19, (java.util.Set<java.lang.String>) strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, (java.util.Set<java.lang.String>) strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener13, (java.util.Set<java.lang.String>) strSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener19, (java.util.Set<java.lang.String>) strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, (java.util.Set<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource13 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet14 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact15 = slangImpl0.compile(slangSource13, slangSourceSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource5 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet6 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact7 = slangImpl0.compile(slangSource5, slangSourceSet6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener19, (java.util.Set<java.lang.String>) strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, (java.util.Set<java.lang.String>) strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, (java.util.Set<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet14 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet14, strArray13);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener10, (java.util.Set<java.lang.String>) strSet14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener19, (java.util.Set<java.lang.String>) strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, (java.util.Set<java.lang.String>) strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener19, (java.util.Set<java.lang.String>) strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, (java.util.Set<java.lang.String>) strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, (java.util.Set<java.lang.String>) strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource22 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray23 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet24 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet24, slangSourceArray23);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact26 = slangImpl0.compile(slangSource22, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(slangSourceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, (java.util.Set<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, (java.util.Set<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener16, (java.util.Set<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener16, (java.util.Set<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener23, (java.util.Set<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.util.Set<java.lang.String> strSet15 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener23, (java.util.Set<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, (java.util.Set<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener4 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet8 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet8, strArray7);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener4, (java.util.Set<java.lang.String>) strSet8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource23 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray24 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet25 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet25, slangSourceArray24);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact27 = slangImpl0.compile(slangSource23, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(slangSourceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.util.Set<java.lang.String> strSet18 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, strSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, (java.util.Set<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, (java.util.Set<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, (java.util.Set<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet15 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet15, strArray14);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, (java.util.Set<java.lang.String>) strSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, (java.util.Set<java.lang.String>) strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource24 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray25 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet26 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet26, slangSourceArray25);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact28 = slangImpl0.compile(slangSource24, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(slangSourceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource21 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray22 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet23 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet23, slangSourceArray22);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact25 = slangImpl0.compile(slangSource21, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(slangSourceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, (java.util.Set<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, (java.util.Set<java.lang.String>) strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, (java.util.Set<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, (java.util.Set<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource16 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet17 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact18 = slangImpl0.compile(slangSource16, slangSourceSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, (java.util.Set<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener14 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet17 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet17, strArray16);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener14, (java.util.Set<java.lang.String>) strSet17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, (java.util.Set<java.lang.String>) strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet24 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet24, strArray23);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, (java.util.Set<java.lang.String>) strSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource22 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet23 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact24 = slangImpl0.compile(slangSource22, slangSourceSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener19, (java.util.Set<java.lang.String>) strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource23 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet24 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact25 = slangImpl0.compile(slangSource23, slangSourceSet24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, (java.util.Set<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource17 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet18 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact19 = slangImpl0.compile(slangSource17, slangSourceSet18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener7 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet11 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet11, strArray10);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener7, (java.util.Set<java.lang.String>) strSet11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener23, (java.util.Set<java.lang.String>) strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, (java.util.Set<java.lang.String>) strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener25, (java.util.Set<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, (java.util.Set<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource25 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray26 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet27 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet27, slangSourceArray26);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact29 = slangImpl0.compile(slangSource25, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(slangSourceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, (java.util.Set<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, (java.util.Set<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener27, (java.util.Set<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener27, (java.util.Set<java.lang.String>) strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, (java.util.Set<java.lang.String>) strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener25, (java.util.Set<java.lang.String>) strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener16, (java.util.Set<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener23, (java.util.Set<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, (java.util.Set<java.lang.String>) strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener27, (java.util.Set<java.lang.String>) strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource26 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray27 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet28 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet28, slangSourceArray27);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact30 = slangImpl0.compile(slangSource26, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(slangSourceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet20 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet20, strArray19);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, (java.util.Set<java.lang.String>) strSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, (java.util.Set<java.lang.String>) strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource27 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray28 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet29 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet29, slangSourceArray28);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact31 = slangImpl0.compile(slangSource27, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(slangSourceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, (java.util.Set<java.lang.String>) strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, (java.util.Set<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, (java.util.Set<java.lang.String>) strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet13 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet13, strArray12);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, (java.util.Set<java.lang.String>) strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource2 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet3 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact4 = slangImpl0.compile(slangSource2, slangSourceSet3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener25, (java.util.Set<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource28 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray29 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet30 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet30, slangSourceArray29);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact32 = slangImpl0.compile(slangSource28, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(slangSourceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, (java.util.Set<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, (java.util.Set<java.lang.String>) strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet22 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet22, strArray21);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, (java.util.Set<java.lang.String>) strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, (java.util.Set<java.lang.String>) strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource30 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray31 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet32 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet32, slangSourceArray31);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact34 = slangImpl0.compile(slangSource30, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(slangSourceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet23 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet23, strArray22);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, (java.util.Set<java.lang.String>) strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet25 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet25, strArray24);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, (java.util.Set<java.lang.String>) strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener27, (java.util.Set<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource19 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet20 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact21 = slangImpl0.compile(slangSource19, slangSourceSet20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource31 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray32 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet33 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet33, slangSourceArray32);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact35 = slangImpl0.compile(slangSource31, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(slangSourceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.util.Set<java.lang.String> strSet31 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource29 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray30 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet31 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet31, slangSourceArray30);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact33 = slangImpl0.compile(slangSource29, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(slangSourceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener18 = null;
        java.util.Set<java.lang.String> strSet19 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener18, strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener20 = null;
        java.util.Set<java.lang.String> strSet21 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener20, strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, (java.util.Set<java.lang.String>) strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, (java.util.Set<java.lang.String>) strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource28 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet29 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact30 = slangImpl0.compile(slangSource28, slangSourceSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.util.Set<java.lang.String> strSet30 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource20 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet21 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact22 = slangImpl0.compile(slangSource20, slangSourceSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener27, (java.util.Set<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener12 = null;
        java.util.Set<java.lang.String> strSet13 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener12, strSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, (java.util.Set<java.lang.String>) strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, (java.util.Set<java.lang.String>) strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.util.Set<java.lang.String> strSet29 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource32 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray33 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet34 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet34, slangSourceArray33);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact36 = slangImpl0.compile(slangSource32, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(slangSourceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener3 = null;
        java.util.Set<java.lang.String> strSet4 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener3, strSet4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource33 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray34 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet35 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet35, slangSourceArray34);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact37 = slangImpl0.compile(slangSource33, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(slangSourceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener32, (java.util.Set<java.lang.String>) strSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener9 = null;
        java.util.Set<java.lang.String> strSet10 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener9, strSet10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet27 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet27, strArray26);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener23, (java.util.Set<java.lang.String>) strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource31 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet32 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact33 = slangImpl0.compile(slangSource31, slangSourceSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource8 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet9 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact10 = slangImpl0.compile(slangSource8, slangSourceSet9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, (java.util.Set<java.lang.String>) strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, (java.util.Set<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, (java.util.Set<java.lang.String>) strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        java.util.Set<java.lang.String> strSet33 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener32, strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener27, (java.util.Set<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener33, (java.util.Set<java.lang.String>) strSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, (java.util.Set<java.lang.String>) strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, (java.util.Set<java.lang.String>) strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.util.Set<java.lang.String> strSet27 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, strSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener32, (java.util.Set<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet31 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet31, strArray30);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, (java.util.Set<java.lang.String>) strSet31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener32, (java.util.Set<java.lang.String>) strSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet28 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet28, strArray27);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, (java.util.Set<java.lang.String>) strSet28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, (java.util.Set<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener33, (java.util.Set<java.lang.String>) strSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener32, (java.util.Set<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener33, (java.util.Set<java.lang.String>) strSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, (java.util.Set<java.lang.String>) strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, (java.util.Set<java.lang.String>) strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet21 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet21, strArray20);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener17, (java.util.Set<java.lang.String>) strSet21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener33, (java.util.Set<java.lang.String>) strSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet19 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet19, strArray18);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener15, (java.util.Set<java.lang.String>) strSet19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener29 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener29, (java.util.Set<java.lang.String>) strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet34 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet34, strArray33);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, (java.util.Set<java.lang.String>) strSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        java.util.Set<java.lang.String> strSet26 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener25, strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.util.Set<java.lang.String> strSet35 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource26 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet27 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact28 = slangImpl0.compile(slangSource26, slangSourceSet27);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet26 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet26, strArray25);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener23, (java.util.Set<java.lang.String>) strSet26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource34 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray35 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet36 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet36, slangSourceArray35);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact38 = slangImpl0.compile(slangSource34, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(slangSourceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, (java.util.Set<java.lang.String>) strSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.util.Set<java.lang.String> strSet32 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource34 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet35 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact36 = slangImpl0.compile(slangSource34, slangSourceSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, (java.util.Set<java.lang.String>) strSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource36 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray37 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet38 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet38, slangSourceArray37);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact40 = slangImpl0.compile(slangSource36, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(slangSourceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, (java.util.Set<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener25, (java.util.Set<java.lang.String>) strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener32 = null;
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet36 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet36, strArray35);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener32, (java.util.Set<java.lang.String>) strSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource37 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray38 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet39 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet39, slangSourceArray38);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact41 = slangImpl0.compile(slangSource37, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(slangSourceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener21 = null;
        java.util.Set<java.lang.String> strSet22 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener21, strSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource39 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray40 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet41 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet41, slangSourceArray40);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact43 = slangImpl0.compile(slangSource39, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(slangSourceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, (java.util.Set<java.lang.String>) strSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource35 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray36 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet37 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet37, slangSourceArray36);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact39 = slangImpl0.compile(slangSource35, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(slangSourceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, (java.util.Set<java.lang.String>) strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, (java.util.Set<java.lang.String>) strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener39, (java.util.Set<java.lang.String>) strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, (java.util.Set<java.lang.String>) strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource38 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray39 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet40 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet40, slangSourceArray39);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact42 = slangImpl0.compile(slangSource38, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(slangSourceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, (java.util.Set<java.lang.String>) strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener36, (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener37, (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener39, (java.util.Set<java.lang.String>) strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener37, (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource21 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet22 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact23 = slangImpl0.compile(slangSource21, slangSourceSet22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, (java.util.Set<java.lang.String>) strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener36, (java.util.Set<java.lang.String>) strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener40 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet29 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet29, strArray28);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener25, (java.util.Set<java.lang.String>) strSet29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener40 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener40, (java.util.Set<java.lang.String>) strSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener40 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener30 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet33 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet33, strArray32);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener30, (java.util.Set<java.lang.String>) strSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, (java.util.Set<java.lang.String>) strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource4 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet5 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact6 = slangImpl0.compile(slangSource4, slangSourceSet5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource29 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet30 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact31 = slangImpl0.compile(slangSource29, slangSourceSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource40 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray41 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet42 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet42, slangSourceArray41);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact44 = slangImpl0.compile(slangSource40, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(slangSourceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener37, (java.util.Set<java.lang.String>) strSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource12 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet13 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact14 = slangImpl0.compile(slangSource12, slangSourceSet13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        java.util.Set<java.lang.String> strSet38 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener37, strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource41 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray42 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet43 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet43, slangSourceArray42);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact45 = slangImpl0.compile(slangSource41, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(slangSourceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener41, (java.util.Set<java.lang.String>) strSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener40, (java.util.Set<java.lang.String>) strSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.util.Set<java.lang.String> strSet36 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, strSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet30 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet30, strArray29);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener26, (java.util.Set<java.lang.String>) strSet30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener39, (java.util.Set<java.lang.String>) strSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.util.Set<java.lang.String> strSet39 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener37, (java.util.Set<java.lang.String>) strSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener41, (java.util.Set<java.lang.String>) strSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource14 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet15 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact16 = slangImpl0.compile(slangSource14, slangSourceSet15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener24 = null;
        java.util.Set<java.lang.String> strSet25 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener24, strSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, (java.util.Set<java.lang.String>) strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource35 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet36 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact37 = slangImpl0.compile(slangSource35, slangSourceSet36);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet35 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet35, strArray34);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener31, (java.util.Set<java.lang.String>) strSet35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource42 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray43 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet44 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet44, slangSourceArray43);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact46 = slangImpl0.compile(slangSource42, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(slangSourceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource43 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray44 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet45 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet45, slangSourceArray44);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact47 = slangImpl0.compile(slangSource43, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(slangSourceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, (java.util.Set<java.lang.String>) strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, (java.util.Set<java.lang.String>) strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, (java.util.Set<java.lang.String>) strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource33 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet34 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact35 = slangImpl0.compile(slangSource33, slangSourceSet34);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, (java.util.Set<java.lang.String>) strSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource24 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet25 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact26 = slangImpl0.compile(slangSource24, slangSourceSet25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, (java.util.Set<java.lang.String>) strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, (java.util.Set<java.lang.String>) strSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener44, (java.util.Set<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource44 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray45 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet46 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet46, slangSourceArray45);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact48 = slangImpl0.compile(slangSource44, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(slangSourceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener44, (java.util.Set<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener40, (java.util.Set<java.lang.String>) strSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, (java.util.Set<java.lang.String>) strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener41, (java.util.Set<java.lang.String>) strSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, (java.util.Set<java.lang.String>) strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener45 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener45, (java.util.Set<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener45 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener22 = null;
        java.util.Set<java.lang.String> strSet23 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener22, strSet23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource46 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray47 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet48 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet48, slangSourceArray47);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact50 = slangImpl0.compile(slangSource46, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(slangSourceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource45 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray46 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet47 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet47, slangSourceArray46);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact49 = slangImpl0.compile(slangSource45, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(slangSourceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener46 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener44, (java.util.Set<java.lang.String>) strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, (java.util.Set<java.lang.String>) strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener46 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener45 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.util.Set<java.lang.String> strSet44 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, strSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener35, (java.util.Set<java.lang.String>) strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener44, (java.util.Set<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, (java.util.Set<java.lang.String>) strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener39, (java.util.Set<java.lang.String>) strSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener44, (java.util.Set<java.lang.String>) strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet42 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet42, strArray41);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, (java.util.Set<java.lang.String>) strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, (java.util.Set<java.lang.String>) strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener47 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener46 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener46, (java.util.Set<java.lang.String>) strSet49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource47 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray48 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet49 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet49, slangSourceArray48);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact51 = slangImpl0.compile(slangSource47, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(slangSourceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener47 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener47, (java.util.Set<java.lang.String>) strSet51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource48 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet49 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact50 = slangImpl0.compile(slangSource48, slangSourceSet49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener47 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener47, (java.util.Set<java.lang.String>) strSet50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource48 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray49 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet50 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet50, slangSourceArray49);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact52 = slangImpl0.compile(slangSource48, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(slangSourceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener48, (java.util.Set<java.lang.String>) strSet51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener49 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener48, (java.util.Set<java.lang.String>) strSet51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource49 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray50 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet51 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet51, slangSourceArray50);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact53 = slangImpl0.compile(slangSource49, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet51);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(slangSourceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        java.util.Set<java.lang.String> strSet42 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener41, strSet42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener47 = null;
        java.util.Set<java.lang.String> strSet48 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener47, strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener48, (java.util.Set<java.lang.String>) strSet52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener49 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, (java.util.Set<java.lang.String>) strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, (java.util.Set<java.lang.String>) strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener45 = null;
        java.util.Set<java.lang.String> strSet46 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener45, strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet39 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet39, strArray38);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener36, (java.util.Set<java.lang.String>) strSet39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener36, (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener46 = null;
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet50 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet50, strArray49);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener46, (java.util.Set<java.lang.String>) strSet50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, (java.util.Set<java.lang.String>) strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource50 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray51 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet52 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet52, slangSourceArray51);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact54 = slangImpl0.compile(slangSource50, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(slangSourceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener46 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener46, (java.util.Set<java.lang.String>) strSet49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener50 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener50 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener47 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet51 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet51, strArray50);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener47, (java.util.Set<java.lang.String>) strSet51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener40 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet44 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet44, strArray43);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener40, (java.util.Set<java.lang.String>) strSet44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet37 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet37, strArray36);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener33, (java.util.Set<java.lang.String>) strSet37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener36, (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener50, (java.util.Set<java.lang.String>) strSet54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener34 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet38 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet38, strArray37);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener34, (java.util.Set<java.lang.String>) strSet38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet43 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet43, strArray42);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener39, (java.util.Set<java.lang.String>) strSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet32 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet32, strArray31);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener28, (java.util.Set<java.lang.String>) strSet32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener45 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener45, (java.util.Set<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource42 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet43 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact44 = slangImpl0.compile(slangSource42, slangSourceSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource32 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet33 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact34 = slangImpl0.compile(slangSource32, slangSourceSet33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        java.util.Set<java.lang.String> strSet49 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener48, strSet49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener41, (java.util.Set<java.lang.String>) strSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener37, (java.util.Set<java.lang.String>) strSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener50, (java.util.Set<java.lang.String>) strSet54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource47 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet48 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact49 = slangImpl0.compile(slangSource47, slangSourceSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener41 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet45 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet45, strArray44);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener41, (java.util.Set<java.lang.String>) strSet45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener44 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet48 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet48, strArray47);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener44, (java.util.Set<java.lang.String>) strSet48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.util.Set<java.lang.String> strSet43 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, strSet43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource39 = null;
        java.util.Set<io.cloudslang.lang.compiler.SlangSource> slangSourceSet40 = null;
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact41 = slangImpl0.compile(slangSource39, slangSourceSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener42 = null;
        java.lang.String[] strArray45 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet46 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet46, strArray45);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener42, (java.util.Set<java.lang.String>) strSet46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener43 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet47 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet47, strArray46);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener43, (java.util.Set<java.lang.String>) strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass50 = slangImpl0.getClass();
        io.cloudslang.lang.compiler.SlangSource slangSource51 = null;
        io.cloudslang.lang.compiler.SlangSource[] slangSourceArray52 = new io.cloudslang.lang.compiler.SlangSource[] {};
        java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource> slangSourceSet53 = new java.util.LinkedHashSet<io.cloudslang.lang.compiler.SlangSource>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet53, slangSourceArray52);
        try {
            io.cloudslang.lang.entities.CompilationArtifact compilationArtifact55 = slangImpl0.compile(slangSource51, (java.util.Set<io.cloudslang.lang.compiler.SlangSource>) slangSourceSet53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Source can not be null");
        } catch (java.lang.IllegalArgumentException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(slangSourceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "", "" };
        java.util.LinkedHashSet<java.lang.String> strSet49 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet49, strArray48);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener45, (java.util.Set<java.lang.String>) strSet49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass50 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener51 = null;
        try {
            slangImpl0.subscribeOnAllEvents(scoreEventListener51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener48 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet52 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet52, strArray51);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener48, (java.util.Set<java.lang.String>) strSet52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet40 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet40, strArray39);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener36, (java.util.Set<java.lang.String>) strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        java.util.LinkedHashSet<java.lang.String> strSet41 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet41, strArray40);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener38, (java.util.Set<java.lang.String>) strSet41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet54 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet54, strArray53);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener50, (java.util.Set<java.lang.String>) strSet54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener46 = null;
        java.util.Set<java.lang.String> strSet47 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener46, strSet47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener39 = null;
        java.util.Set<java.lang.String> strSet40 = null;
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener39, strSet40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass50 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener51 = null;
        try {
            slangImpl0.unSubscribeOnEvents(scoreEventListener51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        io.cloudslang.lang.api.SlangImpl slangImpl0 = new io.cloudslang.lang.api.SlangImpl();
        java.lang.Class<?> wildcardClass1 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass2 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass3 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass4 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass5 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass6 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass7 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass8 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass9 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass10 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass11 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass12 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass13 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass14 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass15 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass16 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass17 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass18 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass19 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass20 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass21 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass22 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass23 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass24 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass25 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass26 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass27 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass28 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass29 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass30 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass31 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass32 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass33 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass34 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass35 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass36 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass37 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass38 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass39 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass40 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass41 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass42 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass43 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass44 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass45 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass46 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass47 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass48 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass49 = slangImpl0.getClass();
        java.lang.Class<?> wildcardClass50 = slangImpl0.getClass();
        io.cloudslang.score.events.ScoreEventListener scoreEventListener51 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "" };
        java.util.LinkedHashSet<java.lang.String> strSet55 = new java.util.LinkedHashSet<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strSet55, strArray54);
        try {
            slangImpl0.subscribeOnEvents(scoreEventListener51, (java.util.Set<java.lang.String>) strSet55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        }
        org.junit.Assert.assertNotNull(wildcardClass1);
        org.junit.Assert.assertNotNull(wildcardClass2);
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertNotNull(wildcardClass5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(wildcardClass8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(wildcardClass10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }
}

